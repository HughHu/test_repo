//  ----------------------------------------------------------------------
//  File Name   : GenCFold/flash_dl_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __FLASH_DL_REGFILE_H__
#define __FLASH_DL_REGFILE_H__

#include <stdint.h>

#define FLASH_DL_CTRL_OFFSET                        0x000
#define FLASH_DL_CTRL_CLK_INV_EN_Pos                16
#define FLASH_DL_CTRL_CLK_INV_EN_Msk                0x10000
#define FLASH_DL_CTRL_CYCLE_CAL_EN_Pos              15
#define FLASH_DL_CTRL_CYCLE_CAL_EN_Msk              0x8000
#define FLASH_DL_CTRL_DLY_BYPASS_Pos                14
#define FLASH_DL_CTRL_DLY_BYPASS_Msk                0x4000
#define FLASH_DL_CTRL_PHASE_DETECT_SEL_Pos          11
#define FLASH_DL_CTRL_PHASE_DETECT_SEL_Msk          0x3800
#define FLASH_DL_CTRL_DLY_LOCK_NUM_Pos              8
#define FLASH_DL_CTRL_DLY_LOCK_NUM_Msk              0x700
#define FLASH_DL_CTRL_DLY_START_POINT_Pos           0
#define FLASH_DL_CTRL_DLY_START_POINT_Msk           0xff

#define FLASH_DL_DELAY_OFFSET                       0x004
#define FLASH_DL_DELAY_CLK_DELAY_Pos                0
#define FLASH_DL_DELAY_CLK_DELAY_Msk                0xff

#define FLASH_DL_OBS_REG0_OFFSET                    0x008
#define FLASH_DL_OBS_REG0_LOCK_INC_Pos              24
#define FLASH_DL_OBS_REG0_LOCK_INC_Msk              0xff000000
#define FLASH_DL_OBS_REG0_LOCK_DEC_Pos              16
#define FLASH_DL_OBS_REG0_LOCK_DEC_Msk              0xff0000
#define FLASH_DL_OBS_REG0_DLY_LOCK_VALUE_Pos        8
#define FLASH_DL_OBS_REG0_DLY_LOCK_VALUE_Msk        0xff00
#define FLASH_DL_OBS_REG0_DLY_UNLOCK_CNT_Pos        3
#define FLASH_DL_OBS_REG0_DLY_UNLOCK_CNT_Msk        0xf8
#define FLASH_DL_OBS_REG0_HALF_CLOCK_MODE_Pos       2
#define FLASH_DL_OBS_REG0_HALF_CLOCK_MODE_Msk       0x4
#define FLASH_DL_OBS_REG0_FORCE_LOCK_OVERFLOW_Pos    1
#define FLASH_DL_OBS_REG0_FORCE_LOCK_OVERFLOW_Msk    0x2
#define FLASH_DL_OBS_REG0_DLY_LOCK_Pos              0
#define FLASH_DL_OBS_REG0_DLY_LOCK_Msk              0x1

#define FLASH_DL_OBS_REG1_OFFSET                    0x00C
#define FLASH_DL_OBS_REG1_DECODER_OUT_RD_Pos        0
#define FLASH_DL_OBS_REG1_DECODER_OUT_RD_Msk        0xff

#define FLASH_DL_LOCK_DONE_OFFSET                   0x010
#define FLASH_DL_LOCK_DONE_LOCK_DONE_Pos            0
#define FLASH_DL_LOCK_DONE_LOCK_DONE_Msk            0x1

#define FLASH_DL_RSTN_OFFSET                        0x014
#define FLASH_DL_RSTN_DLY_RST_N_Pos                 0
#define FLASH_DL_RSTN_DLY_RST_N_Msk                 0x1

#define FLASH_DL_RESYNC_OFFSET                      0x018
#define FLASH_DL_RESYNC_DLY_RESYNC_Pos              0
#define FLASH_DL_RESYNC_DLY_RESYNC_Msk              0x1

struct FLASH_DL_REG_CTRL_BITS
{
    volatile uint32_t DLY_START_POINT               : 8; // bit 0~7
    volatile uint32_t DLY_LOCK_NUM                  : 3; // bit 8~10
    volatile uint32_t PHASE_DETECT_SEL              : 3; // bit 11~13
    volatile uint32_t DLY_BYPASS                    : 1; // bit 14~14
    volatile uint32_t CYCLE_CAL_EN                  : 1; // bit 15~15
    volatile uint32_t CLK_INV_EN                    : 1; // bit 16~16
    volatile uint32_t RESV_17_31                    : 15; // bit 17~31
};

union FLASH_DL_REG_CTRL {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_CTRL_BITS                   bit;
};

struct FLASH_DL_REG_DELAY_BITS
{
    volatile uint32_t CLK_DELAY                     : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union FLASH_DL_REG_DELAY {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_DELAY_BITS                  bit;
};

struct FLASH_DL_REG_OBS_REG0_BITS
{
    volatile uint32_t DLY_LOCK                      : 1; // bit 0~0
    volatile uint32_t FORCE_LOCK_OVERFLOW           : 1; // bit 1~1
    volatile uint32_t HALF_CLOCK_MODE               : 1; // bit 2~2
    volatile uint32_t DLY_UNLOCK_CNT                : 5; // bit 3~7
    volatile uint32_t DLY_LOCK_VALUE                : 8; // bit 8~15
    volatile uint32_t LOCK_DEC                      : 8; // bit 16~23
    volatile uint32_t LOCK_INC                      : 8; // bit 24~31
};

union FLASH_DL_REG_OBS_REG0 {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_OBS_REG0_BITS               bit;
};

struct FLASH_DL_REG_OBS_REG1_BITS
{
    volatile uint32_t DECODER_OUT_RD                : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union FLASH_DL_REG_OBS_REG1 {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_OBS_REG1_BITS               bit;
};

struct FLASH_DL_REG_LOCK_DONE_BITS
{
    volatile uint32_t LOCK_DONE                     : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union FLASH_DL_REG_LOCK_DONE {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_LOCK_DONE_BITS              bit;
};

struct FLASH_DL_REG_RSTN_BITS
{
    volatile uint32_t DLY_RST_N                     : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union FLASH_DL_REG_RSTN {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_RSTN_BITS                   bit;
};

struct FLASH_DL_REG_RESYNC_BITS
{
    volatile uint32_t DLY_RESYNC                    : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union FLASH_DL_REG_RESYNC {
    volatile uint32_t                               all;
    struct FLASH_DL_REG_RESYNC_BITS                 bit;
};

typedef struct
{
    union FLASH_DL_REG_CTRL                         REG_CTRL;    // 0x000
    union FLASH_DL_REG_DELAY                        REG_DELAY;   // 0x004
    union FLASH_DL_REG_OBS_REG0                     REG_OBS_REG0; // 0x008
    union FLASH_DL_REG_OBS_REG1                     REG_OBS_REG1; // 0x00C
    union FLASH_DL_REG_LOCK_DONE                    REG_LOCK_DONE; // 0x010
    union FLASH_DL_REG_RSTN                         REG_RSTN;    // 0x014
    union FLASH_DL_REG_RESYNC                       REG_RESYNC;  // 0x018
} FLASH_DL_RegDef;


#endif // __FLASH_DL_REGFILE_H__

