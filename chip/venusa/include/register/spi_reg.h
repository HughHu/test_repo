//  ----------------------------------------------------------------------
//  File Name   : GenCFold/spi_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __SPI_REGFILE_H__
#define __SPI_REGFILE_H__

#include <stdint.h>

#define SPI_IDREV_OFFSET                            0x000
#define SPI_IDREV_ID_Pos                            0
#define SPI_IDREV_ID_Msk                            0xffffffff

#define SPI_TRANSFMT_OFFSET                         0x010
#define SPI_TRANSFMT_ADDRLEN_Pos                    16
#define SPI_TRANSFMT_ADDRLEN_Msk                    0x30000
#define SPI_TRANSFMT_DATALEN_Pos                    8
#define SPI_TRANSFMT_DATALEN_Msk                    0x1f00
#define SPI_TRANSFMT_DATAMERGE_Pos                  7
#define SPI_TRANSFMT_DATAMERGE_Msk                  0x80
#define SPI_TRANSFMT_MOSIBIDIR_Pos                  4
#define SPI_TRANSFMT_MOSIBIDIR_Msk                  0x10
#define SPI_TRANSFMT_LSB_Pos                        3
#define SPI_TRANSFMT_LSB_Msk                        0x8
#define SPI_TRANSFMT_SLVMODE_Pos                    2
#define SPI_TRANSFMT_SLVMODE_Msk                    0x4
#define SPI_TRANSFMT_CPOL_Pos                       1
#define SPI_TRANSFMT_CPOL_Msk                       0x2
#define SPI_TRANSFMT_CPHA_Pos                       0
#define SPI_TRANSFMT_CPHA_Msk                       0x1

#define SPI_DIRECTIO_OFFSET                         0x014
#define SPI_DIRECTIO_DIRECTIOEN_Pos                 24
#define SPI_DIRECTIO_DIRECTIOEN_Msk                 0x1000000
#define SPI_DIRECTIO_HOLD_OE_Pos                    21
#define SPI_DIRECTIO_HOLD_OE_Msk                    0x200000
#define SPI_DIRECTIO_WP_OE_Pos                      20
#define SPI_DIRECTIO_WP_OE_Msk                      0x100000
#define SPI_DIRECTIO_MISO_OE_Pos                    19
#define SPI_DIRECTIO_MISO_OE_Msk                    0x80000
#define SPI_DIRECTIO_MOSI_OE_Pos                    18
#define SPI_DIRECTIO_MOSI_OE_Msk                    0x40000
#define SPI_DIRECTIO_SCLK_OE_Pos                    17
#define SPI_DIRECTIO_SCLK_OE_Msk                    0x20000
#define SPI_DIRECTIO_CS_OE_Pos                      16
#define SPI_DIRECTIO_CS_OE_Msk                      0x10000
#define SPI_DIRECTIO_HOLD_O_Pos                     13
#define SPI_DIRECTIO_HOLD_O_Msk                     0x2000
#define SPI_DIRECTIO_WP_O_Pos                       12
#define SPI_DIRECTIO_WP_O_Msk                       0x1000
#define SPI_DIRECTIO_MISO_O_Pos                     11
#define SPI_DIRECTIO_MISO_O_Msk                     0x800
#define SPI_DIRECTIO_MOSI_O_Pos                     10
#define SPI_DIRECTIO_MOSI_O_Msk                     0x400
#define SPI_DIRECTIO_SCLK_O_Pos                     9
#define SPI_DIRECTIO_SCLK_O_Msk                     0x200
#define SPI_DIRECTIO_CS_O_Pos                       8
#define SPI_DIRECTIO_CS_O_Msk                       0x100
#define SPI_DIRECTIO_HOLD_I_Pos                     5
#define SPI_DIRECTIO_HOLD_I_Msk                     0x20
#define SPI_DIRECTIO_WP_I_Pos                       4
#define SPI_DIRECTIO_WP_I_Msk                       0x10
#define SPI_DIRECTIO_MISO_I_Pos                     3
#define SPI_DIRECTIO_MISO_I_Msk                     0x8
#define SPI_DIRECTIO_MOSI_I_Pos                     2
#define SPI_DIRECTIO_MOSI_I_Msk                     0x4
#define SPI_DIRECTIO_SCLK_I_Pos                     1
#define SPI_DIRECTIO_SCLK_I_Msk                     0x2
#define SPI_DIRECTIO_CS_I_Pos                       0
#define SPI_DIRECTIO_CS_I_Msk                       0x1

#define SPI_WR_LEN_OFFSET                           0x018
#define SPI_WR_LEN_WR_LEN_Pos                       0
#define SPI_WR_LEN_WR_LEN_Msk                       0xffffffff

#define SPI_RD_LEN_OFFSET                           0x01C
#define SPI_RD_LEN_RD_LEN_Pos                       0
#define SPI_RD_LEN_RD_LEN_Msk                       0xffffffff

#define SPI_TRANSCTRL_OFFSET                        0x020
#define SPI_TRANSCTRL_CMDEN_Pos                     30
#define SPI_TRANSCTRL_CMDEN_Msk                     0x40000000
#define SPI_TRANSCTRL_ADDREN_Pos                    29
#define SPI_TRANSCTRL_ADDREN_Msk                    0x20000000
#define SPI_TRANSCTRL_ADDRFMT_Pos                   28
#define SPI_TRANSCTRL_ADDRFMT_Msk                   0x10000000
#define SPI_TRANSCTRL_TRANSMODE_Pos                 24
#define SPI_TRANSCTRL_TRANSMODE_Msk                 0xf000000
#define SPI_TRANSCTRL_DUALQUAD_Pos                  22
#define SPI_TRANSCTRL_DUALQUAD_Msk                  0xc00000
#define SPI_TRANSCTRL_TOKENEN_Pos                   21
#define SPI_TRANSCTRL_TOKENEN_Msk                   0x200000
#define SPI_TRANSCTRL_TOKENVALUE_Pos                11
#define SPI_TRANSCTRL_TOKENVALUE_Msk                0x800
#define SPI_TRANSCTRL_DUMMYCNT_Pos                  9
#define SPI_TRANSCTRL_DUMMYCNT_Msk                  0x600

#define SPI_CMD_OFFSET                              0x024
#define SPI_CMD_CMD_Pos                             0
#define SPI_CMD_CMD_Msk                             0xff

#define SPI_ADDR_OFFSET                             0x028
#define SPI_ADDR_ADDR_Pos                           0
#define SPI_ADDR_ADDR_Msk                           0xffffffff

#define SPI_DATA_OFFSET                             0x02C
#define SPI_DATA_DATA_Pos                           0
#define SPI_DATA_DATA_Msk                           0xffffffff

#define SPI_CTRL_OFFSET                             0x030
#define SPI_CTRL_SPI_CS_FROM_REG_Pos                22
#define SPI_CTRL_SPI_CS_FROM_REG_Msk                0x400000
#define SPI_CTRL_SPI_CS_REG_CFG_EN_Pos              21
#define SPI_CTRL_SPI_CS_REG_CFG_EN_Msk              0x200000
#define SPI_CTRL_TXTHRES_Pos                        16
#define SPI_CTRL_TXTHRES_Msk                        0x1f0000
#define SPI_CTRL_RXTHRES_Pos                        8
#define SPI_CTRL_RXTHRES_Msk                        0x1f00
#define SPI_CTRL_TXDMAEN_Pos                        4
#define SPI_CTRL_TXDMAEN_Msk                        0x10
#define SPI_CTRL_RXDMAEN_Pos                        3
#define SPI_CTRL_RXDMAEN_Msk                        0x8
#define SPI_CTRL_TXFIFORST_Pos                      2
#define SPI_CTRL_TXFIFORST_Msk                      0x4
#define SPI_CTRL_RXFIFORST_Pos                      1
#define SPI_CTRL_RXFIFORST_Msk                      0x2
#define SPI_CTRL_SPIRST_Pos                         0
#define SPI_CTRL_SPIRST_Msk                         0x1

#define SPI_STATUS_OFFSET                           0x034
#define SPI_STATUS_TXFULL_Pos                       23
#define SPI_STATUS_TXFULL_Msk                       0x800000
#define SPI_STATUS_TXEMPTY_Pos                      22
#define SPI_STATUS_TXEMPTY_Msk                      0x400000
#define SPI_STATUS_TXNUM_Pos                        16
#define SPI_STATUS_TXNUM_Msk                        0x1f0000
#define SPI_STATUS_RXFULL_Pos                       15
#define SPI_STATUS_RXFULL_Msk                       0x8000
#define SPI_STATUS_RXEMPTY_Pos                      14
#define SPI_STATUS_RXEMPTY_Msk                      0x4000
#define SPI_STATUS_RXNUM_Pos                        8
#define SPI_STATUS_RXNUM_Msk                        0x1f00
#define SPI_STATUS_SPIACTIVE_Pos                    0
#define SPI_STATUS_SPIACTIVE_Msk                    0x1

#define SPI_INTREN_OFFSET                           0x038
#define SPI_INTREN_SLVCMDEN_Pos                     5
#define SPI_INTREN_SLVCMDEN_Msk                     0x20
#define SPI_INTREN_ENDINTEN_Pos                     4
#define SPI_INTREN_ENDINTEN_Msk                     0x10
#define SPI_INTREN_TXFIFOINTEN_Pos                  3
#define SPI_INTREN_TXFIFOINTEN_Msk                  0x8
#define SPI_INTREN_RXFIFOINTEN_Pos                  2
#define SPI_INTREN_RXFIFOINTEN_Msk                  0x4
#define SPI_INTREN_TXFIFOURINTEN_Pos                1
#define SPI_INTREN_TXFIFOURINTEN_Msk                0x2
#define SPI_INTREN_RXFIFOORINTEN_Pos                0
#define SPI_INTREN_RXFIFOORINTEN_Msk                0x1

#define SPI_INTRST_OFFSET                           0x03C
#define SPI_INTRST_SLVCMDINT_Pos                    5
#define SPI_INTRST_SLVCMDINT_Msk                    0x20
#define SPI_INTRST_ENDINT_Pos                       4
#define SPI_INTRST_ENDINT_Msk                       0x10
#define SPI_INTRST_TXFIFOINT_Pos                    3
#define SPI_INTRST_TXFIFOINT_Msk                    0x8
#define SPI_INTRST_RXFIFOINT_Pos                    2
#define SPI_INTRST_RXFIFOINT_Msk                    0x4
#define SPI_INTRST_TXFIFOURINT_Pos                  1
#define SPI_INTRST_TXFIFOURINT_Msk                  0x2
#define SPI_INTRST_RXFIFOORINT_Pos                  0
#define SPI_INTRST_RXFIFOORINT_Msk                  0x1

#define SPI_TIMING_OFFSET                           0x040
#define SPI_TIMING_CS2SCLK_Pos                      12
#define SPI_TIMING_CS2SCLK_Msk                      0x3000
#define SPI_TIMING_CSHT_Pos                         8
#define SPI_TIMING_CSHT_Msk                         0xf00
#define SPI_TIMING_SCLK_DIV_Pos                     0
#define SPI_TIMING_SCLK_DIV_Msk                     0xff

#define SPI_MEMCTRL_OFFSET                          0x050
#define SPI_MEMCTRL_MEMCTRLCHG_Pos                  8
#define SPI_MEMCTRL_MEMCTRLCHG_Msk                  0x100
#define SPI_MEMCTRL_MEMRDCMD_Pos                    0
#define SPI_MEMCTRL_MEMRDCMD_Msk                    0xf

#define SPI_SLVST_OFFSET                            0x060
#define SPI_SLVST_UNDERRUN_Pos                      18
#define SPI_SLVST_UNDERRUN_Msk                      0x40000
#define SPI_SLVST_OVERRUN_Pos                       17
#define SPI_SLVST_OVERRUN_Msk                       0x20000
#define SPI_SLVST_READY_Pos                         16
#define SPI_SLVST_READY_Msk                         0x10000
#define SPI_SLVST_USR_STATUS_Pos                    0
#define SPI_SLVST_USR_STATUS_Msk                    0xffff

#define SPI_RCNT_OFFSET                             0x064
#define SPI_RCNT_RCNT_Pos                           0
#define SPI_RCNT_RCNT_Msk                           0xffffffff

#define SPI_WCNT_OFFSET                             0x068
#define SPI_WCNT_WCNT_Pos                           0
#define SPI_WCNT_WCNT_Msk                           0xffffffff

#define SPI_CONFIG_OFFSET                           0x07C
#define SPI_CONFIG_SLAVE_Pos                        14
#define SPI_CONFIG_SLAVE_Msk                        0x4000
#define SPI_CONFIG_EILMMEM_Pos                      13
#define SPI_CONFIG_EILMMEM_Msk                      0x2000
#define SPI_CONFIG_AHBMEM_Pos                       12
#define SPI_CONFIG_AHBMEM_Msk                       0x1000
#define SPI_CONFIG_DIRECTIO_Pos                     11
#define SPI_CONFIG_DIRECTIO_Msk                     0x800
#define SPI_CONFIG_QUADSPI_Pos                      9
#define SPI_CONFIG_QUADSPI_Msk                      0x200
#define SPI_CONFIG_DUALSPI_Pos                      8
#define SPI_CONFIG_DUALSPI_Msk                      0x100
#define SPI_CONFIG_TXFIFOSIZE_Pos                   4
#define SPI_CONFIG_TXFIFOSIZE_Msk                   0x30
#define SPI_CONFIG_RXFIFOSIZE_Pos                   0
#define SPI_CONFIG_RXFIFOSIZE_Msk                   0x3

struct SPI_REG_IDREV_BITS
{
    volatile uint32_t ID                            : 32; // bit 0~31
};

union SPI_REG_IDREV {
    volatile uint32_t                               all;
    struct SPI_REG_IDREV_BITS                       bit;
};

struct SPI_REG_TRANSFMT_BITS
{
    volatile uint32_t CPHA                          : 1; // bit 0~0
    volatile uint32_t CPOL                          : 1; // bit 1~1
    volatile uint32_t SLVMODE                       : 1; // bit 2~2
    volatile uint32_t LSB                           : 1; // bit 3~3
    volatile uint32_t MOSIBIDIR                     : 1; // bit 4~4
    volatile uint32_t RESV_5_6                      : 2; // bit 5~6
    volatile uint32_t DATAMERGE                     : 1; // bit 7~7
    volatile uint32_t DATALEN                       : 5; // bit 8~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t ADDRLEN                       : 2; // bit 16~17
    volatile uint32_t RESV_18_31                    : 14; // bit 18~31
};

union SPI_REG_TRANSFMT {
    volatile uint32_t                               all;
    struct SPI_REG_TRANSFMT_BITS                    bit;
};

struct SPI_REG_DIRECTIO_BITS
{
    volatile uint32_t CS_I                          : 1; // bit 0~0
    volatile uint32_t SCLK_I                        : 1; // bit 1~1
    volatile uint32_t MOSI_I                        : 1; // bit 2~2
    volatile uint32_t MISO_I                        : 1; // bit 3~3
    volatile uint32_t WP_I                          : 1; // bit 4~4
    volatile uint32_t HOLD_I                        : 1; // bit 5~5
    volatile uint32_t RESV_6_7                      : 2; // bit 6~7
    volatile uint32_t CS_O                          : 1; // bit 8~8
    volatile uint32_t SCLK_O                        : 1; // bit 9~9
    volatile uint32_t MOSI_O                        : 1; // bit 10~10
    volatile uint32_t MISO_O                        : 1; // bit 11~11
    volatile uint32_t WP_O                          : 1; // bit 12~12
    volatile uint32_t HOLD_O                        : 1; // bit 13~13
    volatile uint32_t RESV_14_15                    : 2; // bit 14~15
    volatile uint32_t CS_OE                         : 1; // bit 16~16
    volatile uint32_t SCLK_OE                       : 1; // bit 17~17
    volatile uint32_t MOSI_OE                       : 1; // bit 18~18
    volatile uint32_t MISO_OE                       : 1; // bit 19~19
    volatile uint32_t WP_OE                         : 1; // bit 20~20
    volatile uint32_t HOLD_OE                       : 1; // bit 21~21
    volatile uint32_t RESV_22_23                    : 2; // bit 22~23
    volatile uint32_t DIRECTIOEN                    : 1; // bit 24~24
    volatile uint32_t RESV_25_31                    : 7; // bit 25~31
};

union SPI_REG_DIRECTIO {
    volatile uint32_t                               all;
    struct SPI_REG_DIRECTIO_BITS                    bit;
};

struct SPI_REG_WR_LEN_BITS
{
    volatile uint32_t WR_LEN                        : 32; // bit 0~31
};

union SPI_REG_WR_LEN {
    volatile uint32_t                               all;
    struct SPI_REG_WR_LEN_BITS                      bit;
};

struct SPI_REG_RD_LEN_BITS
{
    volatile uint32_t RD_LEN                        : 32; // bit 0~31
};

union SPI_REG_RD_LEN {
    volatile uint32_t                               all;
    struct SPI_REG_RD_LEN_BITS                      bit;
};

struct SPI_REG_TRANSCTRL_BITS
{
    volatile uint32_t RESV_0_8                      : 9; // bit 0~8
    volatile uint32_t DUMMYCNT                      : 2; // bit 9~10
    volatile uint32_t TOKENVALUE                    : 1; // bit 11~11
    volatile uint32_t RESV_12_20                    : 9; // bit 12~20
    volatile uint32_t TOKENEN                       : 1; // bit 21~21
    volatile uint32_t DUALQUAD                      : 2; // bit 22~23
    volatile uint32_t TRANSMODE                     : 4; // bit 24~27
    volatile uint32_t ADDRFMT                       : 1; // bit 28~28
    volatile uint32_t ADDREN                        : 1; // bit 29~29
    volatile uint32_t CMDEN                         : 1; // bit 30~30
    volatile uint32_t RESV_31_31                    : 1; // bit 31~31
};

union SPI_REG_TRANSCTRL {
    volatile uint32_t                               all;
    struct SPI_REG_TRANSCTRL_BITS                   bit;
};

struct SPI_REG_CMD_BITS
{
    volatile uint32_t CMD                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union SPI_REG_CMD {
    volatile uint32_t                               all;
    struct SPI_REG_CMD_BITS                         bit;
};

struct SPI_REG_ADDR_BITS
{
    volatile uint32_t ADDR                          : 32; // bit 0~31
};

union SPI_REG_ADDR {
    volatile uint32_t                               all;
    struct SPI_REG_ADDR_BITS                        bit;
};

struct SPI_REG_DATA_BITS
{
    volatile uint32_t DATA                          : 32; // bit 0~31
};

union SPI_REG_DATA {
    volatile uint32_t                               all;
    struct SPI_REG_DATA_BITS                        bit;
};

struct SPI_REG_CTRL_BITS
{
    volatile uint32_t SPIRST                        : 1; // bit 0~0
    volatile uint32_t RXFIFORST                     : 1; // bit 1~1
    volatile uint32_t TXFIFORST                     : 1; // bit 2~2
    volatile uint32_t RXDMAEN                       : 1; // bit 3~3
    volatile uint32_t TXDMAEN                       : 1; // bit 4~4
    volatile uint32_t RESV_5_7                      : 3; // bit 5~7
    volatile uint32_t RXTHRES                       : 5; // bit 8~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t TXTHRES                       : 5; // bit 16~20
    volatile uint32_t SPI_CS_REG_CFG_EN             : 1; // bit 21~21
    volatile uint32_t SPI_CS_FROM_REG               : 1; // bit 22~22
    volatile uint32_t RESV_23_31                    : 9; // bit 23~31
};

union SPI_REG_CTRL {
    volatile uint32_t                               all;
    struct SPI_REG_CTRL_BITS                        bit;
};

struct SPI_REG_STATUS_BITS
{
    volatile uint32_t SPIACTIVE                     : 1; // bit 0~0
    volatile uint32_t RESV_1_7                      : 7; // bit 1~7
    volatile uint32_t RXNUM                         : 5; // bit 8~12
    volatile uint32_t RESV_13_13                    : 1; // bit 13~13
    volatile uint32_t RXEMPTY                       : 1; // bit 14~14
    volatile uint32_t RXFULL                        : 1; // bit 15~15
    volatile uint32_t TXNUM                         : 5; // bit 16~20
    volatile uint32_t RESV_21_21                    : 1; // bit 21~21
    volatile uint32_t TXEMPTY                       : 1; // bit 22~22
    volatile uint32_t TXFULL                        : 1; // bit 23~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union SPI_REG_STATUS {
    volatile uint32_t                               all;
    struct SPI_REG_STATUS_BITS                      bit;
};

struct SPI_REG_INTREN_BITS
{
    volatile uint32_t RXFIFOORINTEN                 : 1; // bit 0~0
    volatile uint32_t TXFIFOURINTEN                 : 1; // bit 1~1
    volatile uint32_t RXFIFOINTEN                   : 1; // bit 2~2
    volatile uint32_t TXFIFOINTEN                   : 1; // bit 3~3
    volatile uint32_t ENDINTEN                      : 1; // bit 4~4
    volatile uint32_t SLVCMDEN                      : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union SPI_REG_INTREN {
    volatile uint32_t                               all;
    struct SPI_REG_INTREN_BITS                      bit;
};

struct SPI_REG_INTRST_BITS
{
    volatile uint32_t RXFIFOORINT                   : 1; // bit 0~0
    volatile uint32_t TXFIFOURINT                   : 1; // bit 1~1
    volatile uint32_t RXFIFOINT                     : 1; // bit 2~2
    volatile uint32_t TXFIFOINT                     : 1; // bit 3~3
    volatile uint32_t ENDINT                        : 1; // bit 4~4
    volatile uint32_t SLVCMDINT                     : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union SPI_REG_INTRST {
    volatile uint32_t                               all;
    struct SPI_REG_INTRST_BITS                      bit;
};

struct SPI_REG_TIMING_BITS
{
    volatile uint32_t SCLK_DIV                      : 8; // bit 0~7
    volatile uint32_t CSHT                          : 4; // bit 8~11
    volatile uint32_t CS2SCLK                       : 2; // bit 12~13
    volatile uint32_t RESV_14_31                    : 18; // bit 14~31
};

union SPI_REG_TIMING {
    volatile uint32_t                               all;
    struct SPI_REG_TIMING_BITS                      bit;
};

struct SPI_REG_MEMCTRL_BITS
{
    volatile uint32_t MEMRDCMD                      : 4; // bit 0~3
    volatile uint32_t RESV_4_7                      : 4; // bit 4~7
    volatile uint32_t MEMCTRLCHG                    : 1; // bit 8~8
    volatile uint32_t RESV_9_31                     : 23; // bit 9~31
};

union SPI_REG_MEMCTRL {
    volatile uint32_t                               all;
    struct SPI_REG_MEMCTRL_BITS                     bit;
};

struct SPI_REG_SLVST_BITS
{
    volatile uint32_t USR_STATUS                    : 16; // bit 0~15
    volatile uint32_t READY                         : 1; // bit 16~16
    volatile uint32_t OVERRUN                       : 1; // bit 17~17
    volatile uint32_t UNDERRUN                      : 1; // bit 18~18
    volatile uint32_t RESV_19_31                    : 13; // bit 19~31
};

union SPI_REG_SLVST {
    volatile uint32_t                               all;
    struct SPI_REG_SLVST_BITS                       bit;
};

struct SPI_REG_RCNT_BITS
{
    volatile uint32_t RCNT                          : 32; // bit 0~31
};

union SPI_REG_RCNT {
    volatile uint32_t                               all;
    struct SPI_REG_RCNT_BITS                        bit;
};

struct SPI_REG_WCNT_BITS
{
    volatile uint32_t WCNT                          : 32; // bit 0~31
};

union SPI_REG_WCNT {
    volatile uint32_t                               all;
    struct SPI_REG_WCNT_BITS                        bit;
};

struct SPI_REG_CONFIG_BITS
{
    volatile uint32_t RXFIFOSIZE                    : 2; // bit 0~1
    volatile uint32_t RESV_2_3                      : 2; // bit 2~3
    volatile uint32_t TXFIFOSIZE                    : 2; // bit 4~5
    volatile uint32_t RESV_6_7                      : 2; // bit 6~7
    volatile uint32_t DUALSPI                       : 1; // bit 8~8
    volatile uint32_t QUADSPI                       : 1; // bit 9~9
    volatile uint32_t RESV_10_10                    : 1; // bit 10~10
    volatile uint32_t DIRECTIO                      : 1; // bit 11~11
    volatile uint32_t AHBMEM                        : 1; // bit 12~12
    volatile uint32_t EILMMEM                       : 1; // bit 13~13
    volatile uint32_t SLAVE                         : 1; // bit 14~14
    volatile uint32_t RESV_15_31                    : 17; // bit 15~31
};

union SPI_REG_CONFIG {
    volatile uint32_t                               all;
    struct SPI_REG_CONFIG_BITS                      bit;
};

typedef struct
{
    union SPI_REG_IDREV                             REG_IDREV;   // 0x000
    volatile uint32_t                               REG_RESV_0X4_0XC[3];
    union SPI_REG_TRANSFMT                          REG_TRANSFMT; // 0x010
    union SPI_REG_DIRECTIO                          REG_DIRECTIO; // 0x014
    union SPI_REG_WR_LEN                            REG_WR_LEN;  // 0x018
    union SPI_REG_RD_LEN                            REG_RD_LEN;  // 0x01C
    union SPI_REG_TRANSCTRL                         REG_TRANSCTRL; // 0x020
    union SPI_REG_CMD                               REG_CMD;     // 0x024
    union SPI_REG_ADDR                              REG_ADDR;    // 0x028
    union SPI_REG_DATA                              REG_DATA;    // 0x02C
    union SPI_REG_CTRL                              REG_CTRL;    // 0x030
    union SPI_REG_STATUS                            REG_STATUS;  // 0x034
    union SPI_REG_INTREN                            REG_INTREN;  // 0x038
    union SPI_REG_INTRST                            REG_INTRST;  // 0x03C
    union SPI_REG_TIMING                            REG_TIMING;  // 0x040
    volatile uint32_t                               REG_RESV_0X44_0X4C[3];
    union SPI_REG_MEMCTRL                           REG_MEMCTRL; // 0x050
    volatile uint32_t                               REG_RESV_0X54_0X5C[3];
    union SPI_REG_SLVST                             REG_SLVST;   // 0x060
    union SPI_REG_RCNT                              REG_RCNT;    // 0x064
    union SPI_REG_WCNT                              REG_WCNT;    // 0x068
    volatile uint32_t                               REG_RESV_0X6C_0X78[4];
    union SPI_REG_CONFIG                            REG_CONFIG;  // 0x07C
} SPI_RegDef;


#endif // __SPI_REGFILE_H__

