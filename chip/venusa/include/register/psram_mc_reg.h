//  ----------------------------------------------------------------------
//  File Name   : GenCFold/psram_mc_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-27 15:29:43
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __PSRAM_MC_REGFILE_H__
#define __PSRAM_MC_REGFILE_H__

#include <stdint.h>

#define PSRAM_MC_SEQSEL_OFFSET                      0x000
#define PSRAM_MC_SEQSEL_MR_WR_SEQ_ID_Pos            24
#define PSRAM_MC_SEQSEL_MR_WR_SEQ_ID_Msk            0x1f000000
#define PSRAM_MC_SEQSEL_MR_RD_SEQ_ID_Pos            16
#define PSRAM_MC_SEQSEL_MR_RD_SEQ_ID_Msk            0x1f0000
#define PSRAM_MC_SEQSEL_AHB_WR_SEQ_ID_Pos           8
#define PSRAM_MC_SEQSEL_AHB_WR_SEQ_ID_Msk           0x1f00
#define PSRAM_MC_SEQSEL_AHB_RD_SEQ_ID_Pos           0
#define PSRAM_MC_SEQSEL_AHB_RD_SEQ_ID_Msk           0x1f

#define PSRAM_MC_TIMCFG_OFFSET                      0x004
#define PSRAM_MC_TIMCFG_TCEM_CFG_Pos                20
#define PSRAM_MC_TIMCFG_TCEM_CFG_Msk                0xfff00000
#define PSRAM_MC_TIMCFG_TRC_CFG_Pos                 14
#define PSRAM_MC_TIMCFG_TRC_CFG_Msk                 0xfc000
#define PSRAM_MC_TIMCFG_TCHD_CFG_Pos                12
#define PSRAM_MC_TIMCFG_TCHD_CFG_Msk                0x3000
#define PSRAM_MC_TIMCFG_DIS_CLK_OUT_ALWAYS_ON_Pos    11
#define PSRAM_MC_TIMCFG_DIS_CLK_OUT_ALWAYS_ON_Msk    0x800
#define PSRAM_MC_TIMCFG_TCSP_CFG_Pos                8
#define PSRAM_MC_TIMCFG_TCSP_CFG_Msk                0x700
#define PSRAM_MC_TIMCFG_TCQLZ_CFG_Pos               4
#define PSRAM_MC_TIMCFG_TCQLZ_CFG_Msk               0xf0
#define PSRAM_MC_TIMCFG_TCPH_CFG_Pos                0
#define PSRAM_MC_TIMCFG_TCPH_CFG_Msk                0xf

#define PSRAM_MC_RDWRCTRL_OFFSET                    0x008
#define PSRAM_MC_RDWRCTRL_PREFETCH_HIT_THRESHOLD_Pos    7
#define PSRAM_MC_RDWRCTRL_PREFETCH_HIT_THRESHOLD_Msk    0xf80
#define PSRAM_MC_RDWRCTRL_WR_INVALID_ALL_RXBUF_Pos    6
#define PSRAM_MC_RDWRCTRL_WR_INVALID_ALL_RXBUF_Msk    0x40
#define PSRAM_MC_RDWRCTRL_WR_ADDR_CONCAT_EN_Pos     5
#define PSRAM_MC_RDWRCTRL_WR_ADDR_CONCAT_EN_Msk     0x20
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_PREFETCH_CMD_Pos    2
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_PREFETCH_CMD_Msk    0x4
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_RX_BUF_Pos      1
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_RX_BUF_Msk      0x2
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_TX_BUF_Pos      0
#define PSRAM_MC_RDWRCTRL_RD_LOOKUP_TX_BUF_Msk      0x1

#define PSRAM_MC_DEVDEF_OFFSET                      0x00C
#define PSRAM_MC_DEVDEF_HYPERBUS_MRWR_BYTE_LOW_VAL_Pos    16
#define PSRAM_MC_DEVDEF_HYPERBUS_MRWR_BYTE_LOW_VAL_Msk    0xff0000
#define PSRAM_MC_DEVDEF_DEV_SIZE_Pos                8
#define PSRAM_MC_DEVDEF_DEV_SIZE_Msk                0xff00
#define PSRAM_MC_DEVDEF_DEV_TYPE_Pos                4
#define PSRAM_MC_DEVDEF_DEV_TYPE_Msk                0xf0
#define PSRAM_MC_DEVDEF_DEV_PAGE_SIZE_Pos           0
#define PSRAM_MC_DEVDEF_DEV_PAGE_SIZE_Msk           0xf

#define PSRAM_MC_DLLEN_OFFSET                       0x010
#define PSRAM_MC_DLLEN_DLL_EN_Pos                   16
#define PSRAM_MC_DLLEN_DLL_EN_Msk                   0x10000
#define PSRAM_MC_DLLEN_DLL_BYPASS_Pos               14
#define PSRAM_MC_DLLEN_DLL_BYPASS_Msk               0x4000
#define PSRAM_MC_DLLEN_PHASE_DETECT_SEL_Pos         11
#define PSRAM_MC_DLLEN_PHASE_DETECT_SEL_Msk         0x3800
#define PSRAM_MC_DLLEN_DLL_LOCK_NUM_Pos             8
#define PSRAM_MC_DLLEN_DLL_LOCK_NUM_Msk             0x700
#define PSRAM_MC_DLLEN_DLL_START_POINT_Pos          0
#define PSRAM_MC_DLLEN_DLL_START_POINT_Msk          0xff

#define PSRAM_MC_DLLDELAY_OFFSET                    0x014
#define PSRAM_MC_DLLDELAY_RDLVL_DELAY_Pos           8
#define PSRAM_MC_DLLDELAY_RDLVL_DELAY_Msk           0xff00
#define PSRAM_MC_DLLDELAY_WRLVL_DELAY_Pos           0
#define PSRAM_MC_DLLDELAY_WRLVL_DELAY_Msk           0xff

#define PSRAM_MC_DLLOBSV0_OFFSET                    0x018
#define PSRAM_MC_DLLOBSV0_LOCK_INC_Pos              24
#define PSRAM_MC_DLLOBSV0_LOCK_INC_Msk              0xff000000
#define PSRAM_MC_DLLOBSV0_LOCK_DEC_Pos              16
#define PSRAM_MC_DLLOBSV0_LOCK_DEC_Msk              0xff0000
#define PSRAM_MC_DLLOBSV0_DLL_LOCK_VALUE_Pos        8
#define PSRAM_MC_DLLOBSV0_DLL_LOCK_VALUE_Msk        0xff00
#define PSRAM_MC_DLLOBSV0_DLL_UNLOCK_CNT_Pos        3
#define PSRAM_MC_DLLOBSV0_DLL_UNLOCK_CNT_Msk        0xf8
#define PSRAM_MC_DLLOBSV0_HALF_CLOCK_MODE_Pos       2
#define PSRAM_MC_DLLOBSV0_HALF_CLOCK_MODE_Msk       0x4
#define PSRAM_MC_DLLOBSV0_FORCE_LOCK_OVERFLOW_Pos    1
#define PSRAM_MC_DLLOBSV0_FORCE_LOCK_OVERFLOW_Msk    0x2
#define PSRAM_MC_DLLOBSV0_DLL_LOCK_Pos              0
#define PSRAM_MC_DLLOBSV0_DLL_LOCK_Msk              0x1

#define PSRAM_MC_DLLOBSV1_OFFSET                    0x01C
#define PSRAM_MC_DLLOBSV1_DECODER_OUT_WR_Pos        8
#define PSRAM_MC_DLLOBSV1_DECODER_OUT_WR_Msk        0xff00
#define PSRAM_MC_DLLOBSV1_DECODER_OUT_RD_Pos        0
#define PSRAM_MC_DLLOBSV1_DECODER_OUT_RD_Msk        0xff

#define PSRAM_MC_LOCKDONE_OFFSET                    0x020
#define PSRAM_MC_LOCKDONE_LOCK_DONE_Pos             0
#define PSRAM_MC_LOCKDONE_LOCK_DONE_Msk             0x1

#define PSRAM_MC_DLLRST_OFFSET                      0x024
#define PSRAM_MC_DLLRST_DLL_RESET_Pos               0
#define PSRAM_MC_DLLRST_DLL_RESET_Msk               0x1

#define PSRAM_MC_DLLRESYNC_OFFSET                   0x028
#define PSRAM_MC_DLLRESYNC_DLL_RESYNC_Pos           0
#define PSRAM_MC_DLLRESYNC_DLL_RESYNC_Msk           0x1

#define PSRAM_MC_DBGSEL_OFFSET                      0x02C
#define PSRAM_MC_DBGSEL_DEBUG_SEL_Pos               0
#define PSRAM_MC_DBGSEL_DEBUG_SEL_Msk               0x7

#define PSRAM_MC_MRTMOERR_OFFSET                    0x030
#define PSRAM_MC_MRTMOERR_MR_ACC_TMO_THR_Pos        1
#define PSRAM_MC_MRTMOERR_MR_ACC_TMO_THR_Msk        0x1ffe
#define PSRAM_MC_MRTMOERR_MR_ACC_TMO_ERR_EN_Pos     0
#define PSRAM_MC_MRTMOERR_MR_ACC_TMO_ERR_EN_Msk     0x1

#define PSRAM_MC_AHBTMOERR_OFFSET                   0x034
#define PSRAM_MC_AHBTMOERR_AHB_WR_ACC_TMO_THR_Pos    17
#define PSRAM_MC_AHBTMOERR_AHB_WR_ACC_TMO_THR_Msk    0x1ffe0000
#define PSRAM_MC_AHBTMOERR_AHB_WR_ACC_TMO_ERR_EN_Pos    16
#define PSRAM_MC_AHBTMOERR_AHB_WR_ACC_TMO_ERR_EN_Msk    0x10000
#define PSRAM_MC_AHBTMOERR_AHB_RD_ACC_TMO_THR_Pos    1
#define PSRAM_MC_AHBTMOERR_AHB_RD_ACC_TMO_THR_Msk    0x1ffe
#define PSRAM_MC_AHBTMOERR_AHB_RD_ACC_TMO_ERR_EN_Pos    0
#define PSRAM_MC_AHBTMOERR_AHB_RD_ACC_TMO_ERR_EN_Msk    0x1

#define PSRAM_MC_DYNTCPHEN_OFFSET                   0x038
#define PSRAM_MC_DYNTCPHEN_DEV_APM_DYN_TCPH_EN_Pos    0
#define PSRAM_MC_DYNTCPHEN_DEV_APM_DYN_TCPH_EN_Msk    0x1

#define PSRAM_MC_DYNTCPHBASE_OFFSET                 0x03C
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_8_Pos    24
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_8_Msk    0xff000000
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_6_Pos    16
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_6_Msk    0xff0000
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_4_Pos    8
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_4_Msk    0xff00
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_2_Pos    0
#define PSRAM_MC_DYNTCPHBASE_DYN_TCPH_BASE_2_Msk    0xff

#define PSRAM_MC_BUSPRIORCTRL_OFFSET                0x040
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER10_PRIORITY_Pos    20
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER10_PRIORITY_Msk    0x300000
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER9_PRIORITY_Pos    18
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER9_PRIORITY_Msk    0xc0000
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER8_PRIORITY_Pos    16
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER8_PRIORITY_Msk    0x30000
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER7_PRIORITY_Pos    14
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER7_PRIORITY_Msk    0xc000
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER6_PRIORITY_Pos    12
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER6_PRIORITY_Msk    0x3000
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER5_PRIORITY_Pos    10
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER5_PRIORITY_Msk    0xc00
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER4_PRIORITY_Pos    8
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER4_PRIORITY_Msk    0x300
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER3_PRIORITY_Pos    6
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER3_PRIORITY_Msk    0xc0
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER2_PRIORITY_Pos    4
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER2_PRIORITY_Msk    0x30
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER1_PRIORITY_Pos    2
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER1_PRIORITY_Msk    0xc
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER0_PRIORITY_Pos    0
#define PSRAM_MC_BUSPRIORCTRL_BUS_MASTER0_PRIORITY_Msk    0x3

#define PSRAM_MC_BUSARBCTRL_OFFSET                  0x044
#define PSRAM_MC_BUSARBCTRL_BUS_ARB_INCR1_MAX_COUNT_Pos    0
#define PSRAM_MC_BUSARBCTRL_BUS_ARB_INCR1_MAX_COUNT_Msk    0x1f

#define PSRAM_MC_PADCTRL0_OFFSET                    0x050
#define PSRAM_MC_PADCTRL0_CLK_OE_Pos                1
#define PSRAM_MC_PADCTRL0_CLK_OE_Msk                0x2
#define PSRAM_MC_PADCTRL0_CS_N_OE_Pos               0
#define PSRAM_MC_PADCTRL0_CS_N_OE_Msk               0x1

#define PSRAM_MC_PADCTRL1_OFFSET                    0x054
#define PSRAM_MC_PADCTRL1_DQS_OE_GATE_Pos           17
#define PSRAM_MC_PADCTRL1_DQS_OE_GATE_Msk           0x20000
#define PSRAM_MC_PADCTRL1_DQS_RX_EN_Pos             16
#define PSRAM_MC_PADCTRL1_DQS_RX_EN_Msk             0x10000
#define PSRAM_MC_PADCTRL1_DQ_OE_GATE_Pos            8
#define PSRAM_MC_PADCTRL1_DQ_OE_GATE_Msk            0xff00
#define PSRAM_MC_PADCTRL1_DQ_RX_EN_Pos              0
#define PSRAM_MC_PADCTRL1_DQ_RX_EN_Msk              0xff

#define PSRAM_MC_FLEXPSRAMRSVD_OFFSET               0x080
#define PSRAM_MC_FLEXPSRAMRSVD_FLEXPSRAM_RSVD_Pos    0
#define PSRAM_MC_FLEXPSRAMRSVD_FLEXPSRAM_RSVD_Msk    0xffffffff

#define PSRAM_MC_RXBUFALMOSTFULL_OFFSET             0x084
#define PSRAM_MC_RXBUFALMOSTFULL_BUF3_ALMOST_FULL_THRES_ND8_Pos    9
#define PSRAM_MC_RXBUFALMOSTFULL_BUF3_ALMOST_FULL_THRES_ND8_Msk    0xe00
#define PSRAM_MC_RXBUFALMOSTFULL_BUF2_ALMOST_FULL_THRES_ND8_Pos    6
#define PSRAM_MC_RXBUFALMOSTFULL_BUF2_ALMOST_FULL_THRES_ND8_Msk    0x1c0
#define PSRAM_MC_RXBUFALMOSTFULL_BUF1_ALMOST_FULL_THRES_ND8_Pos    3
#define PSRAM_MC_RXBUFALMOSTFULL_BUF1_ALMOST_FULL_THRES_ND8_Msk    0x38
#define PSRAM_MC_RXBUFALMOSTFULL_BUF0_ALMOST_FULL_THRES_ND8_Pos    0
#define PSRAM_MC_RXBUFALMOSTFULL_BUF0_ALMOST_FULL_THRES_ND8_Msk    0x7

#define PSRAM_MC_RXBUFMSTID_OFFSET                  0x088
#define PSRAM_MC_RXBUFMSTID_RXBUF2_BINDED_HUSER_VAL_Pos    25
#define PSRAM_MC_RXBUFMSTID_RXBUF2_BINDED_HUSER_VAL_Msk    0xe000000
#define PSRAM_MC_RXBUFMSTID_RXBUF2_BINDED_HUSER_EN_Pos    24
#define PSRAM_MC_RXBUFMSTID_RXBUF2_BINDED_HUSER_EN_Msk    0x1000000
#define PSRAM_MC_RXBUFMSTID_RXBUF1_BINDED_HUSER_VAL_Pos    21
#define PSRAM_MC_RXBUFMSTID_RXBUF1_BINDED_HUSER_VAL_Msk    0xe00000
#define PSRAM_MC_RXBUFMSTID_RXBUF1_BINDED_HUSER_EN_Pos    20
#define PSRAM_MC_RXBUFMSTID_RXBUF1_BINDED_HUSER_EN_Msk    0x100000
#define PSRAM_MC_RXBUFMSTID_RXBUF0_BINDED_HUSER_VAL_Pos    17
#define PSRAM_MC_RXBUFMSTID_RXBUF0_BINDED_HUSER_VAL_Msk    0xe0000
#define PSRAM_MC_RXBUFMSTID_RXBUF0_BINDED_HUSER_EN_Pos    16
#define PSRAM_MC_RXBUFMSTID_RXBUF0_BINDED_HUSER_EN_Msk    0x10000
#define PSRAM_MC_RXBUFMSTID_RXBUF2_MSTRID_Pos       8
#define PSRAM_MC_RXBUFMSTID_RXBUF2_MSTRID_Msk       0xf00
#define PSRAM_MC_RXBUFMSTID_RXBUF1_MSTRID_Pos       4
#define PSRAM_MC_RXBUFMSTID_RXBUF1_MSTRID_Msk       0xf0
#define PSRAM_MC_RXBUFMSTID_RXBUF0_MSTRID_Pos       0
#define PSRAM_MC_RXBUFMSTID_RXBUF0_MSTRID_Msk       0xf

#define PSRAM_MC_RXBUFPFCTRL_OFFSET                 0x08C
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_REVERSE_BIND_Pos    22
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_REVERSE_BIND_Msk    0x400000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_REVERSE_BIND_Pos    21
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_REVERSE_BIND_Msk    0x200000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_REVERSE_BIND_Pos    20
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_REVERSE_BIND_Msk    0x100000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_INVALIDATE_Pos    19
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_INVALIDATE_Msk    0x80000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_INVALIDATE_Pos    18
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_INVALIDATE_Msk    0x40000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_INVALIDATE_Pos    17
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_INVALIDATE_Msk    0x20000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_INVALIDATE_Pos    16
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_INVALIDATE_Msk    0x10000
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_PREFETCH_TILL_FULL_Pos    11
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_PREFETCH_TILL_FULL_Msk    0x800
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_PREFETCH_TILL_FULL_Pos    10
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_PREFETCH_TILL_FULL_Msk    0x400
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_PREFETCH_TILL_FULL_Pos    9
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_PREFETCH_TILL_FULL_Msk    0x200
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_PREFETCH_TILL_FULL_Pos    8
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_PREFETCH_TILL_FULL_Msk    0x100
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_PREFETCH_EN_Pos    3
#define PSRAM_MC_RXBUFPFCTRL_RXBUF3_PREFETCH_EN_Msk    0x8
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_PREFETCH_EN_Pos    2
#define PSRAM_MC_RXBUFPFCTRL_RXBUF2_PREFETCH_EN_Msk    0x4
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_PREFETCH_EN_Pos    1
#define PSRAM_MC_RXBUFPFCTRL_RXBUF1_PREFETCH_EN_Msk    0x2
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_PREFETCH_EN_Pos    0
#define PSRAM_MC_RXBUFPFCTRL_RXBUF0_PREFETCH_EN_Msk    0x1

#define PSRAM_MC_IRQ_W_OFFSET                       0x0A0
#define PSRAM_MC_IRQ_W_IRQ_CLEAR_Pos                8
#define PSRAM_MC_IRQ_W_IRQ_CLEAR_Msk                0xff00
#define PSRAM_MC_IRQ_W_IRQ_MASK_Pos                 0
#define PSRAM_MC_IRQ_W_IRQ_MASK_Msk                 0xff

#define PSRAM_MC_IRQ_R_OFFSET                       0x0A4
#define PSRAM_MC_IRQ_R_IRQ_STAT_RAW_Pos             8
#define PSRAM_MC_IRQ_R_IRQ_STAT_RAW_Msk             0xff00
#define PSRAM_MC_IRQ_R_IRQ_STAT_Pos                 0
#define PSRAM_MC_IRQ_R_IRQ_STAT_Msk                 0xff

#define PSRAM_MC_E0ADDR_OFFSET                      0x0A8
#define PSRAM_MC_E0ADDR_WR_ERR0_ADDR_Pos            0
#define PSRAM_MC_E0ADDR_WR_ERR0_ADDR_Msk            0xfffffff

#define PSRAM_MC_E1ADDR_OFFSET                      0x0AC
#define PSRAM_MC_E1ADDR_WR_ERR1_ADDR_Pos            0
#define PSRAM_MC_E1ADDR_WR_ERR1_ADDR_Msk            0xfffffff

#define PSRAM_MC_S0LUT0_OFFSET                      0x100
#define PSRAM_MC_S0LUT0_S0_INSTR1_Pos               16
#define PSRAM_MC_S0LUT0_S0_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S0LUT0_S0_INSTR0_Pos               0
#define PSRAM_MC_S0LUT0_S0_INSTR0_Msk               0xffff

#define PSRAM_MC_S0LUT1_OFFSET                      0x104
#define PSRAM_MC_S0LUT1_S0_INSTR3_Pos               16
#define PSRAM_MC_S0LUT1_S0_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S0LUT1_S0_INSTR2_Pos               0
#define PSRAM_MC_S0LUT1_S0_INSTR2_Msk               0xffff

#define PSRAM_MC_S0LUT2_OFFSET                      0x108
#define PSRAM_MC_S0LUT2_S0_INSTR5_Pos               16
#define PSRAM_MC_S0LUT2_S0_INSTR5_Msk               0xffff0000
#define PSRAM_MC_S0LUT2_S0_INSTR4_Pos               0
#define PSRAM_MC_S0LUT2_S0_INSTR4_Msk               0xffff

#define PSRAM_MC_S1LUT0_OFFSET                      0x110
#define PSRAM_MC_S1LUT0_S1_INSTR1_Pos               16
#define PSRAM_MC_S1LUT0_S1_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S1LUT0_S1_INSTR0_Pos               0
#define PSRAM_MC_S1LUT0_S1_INSTR0_Msk               0xffff

#define PSRAM_MC_S1LUT1_OFFSET                      0x114
#define PSRAM_MC_S1LUT1_S1_INSTR3_Pos               16
#define PSRAM_MC_S1LUT1_S1_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S1LUT1_S1_INSTR2_Pos               0
#define PSRAM_MC_S1LUT1_S1_INSTR2_Msk               0xffff

#define PSRAM_MC_S1LUT2_OFFSET                      0x118
#define PSRAM_MC_S1LUT2_S1_INSTR5_Pos               16
#define PSRAM_MC_S1LUT2_S1_INSTR5_Msk               0xffff0000
#define PSRAM_MC_S1LUT2_S1_INSTR4_Pos               0
#define PSRAM_MC_S1LUT2_S1_INSTR4_Msk               0xffff

#define PSRAM_MC_S2LUT0_OFFSET                      0x120
#define PSRAM_MC_S2LUT0_S2_INSTR1_Pos               16
#define PSRAM_MC_S2LUT0_S2_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S2LUT0_S2_INSTR0_Pos               0
#define PSRAM_MC_S2LUT0_S2_INSTR0_Msk               0xffff

#define PSRAM_MC_S2LUT1_OFFSET                      0x124
#define PSRAM_MC_S2LUT1_S2_INSTR3_Pos               16
#define PSRAM_MC_S2LUT1_S2_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S2LUT1_S2_INSTR2_Pos               0
#define PSRAM_MC_S2LUT1_S2_INSTR2_Msk               0xffff

#define PSRAM_MC_S2LUT2_OFFSET                      0x128
#define PSRAM_MC_S2LUT2_S2_INSTR5_Pos               16
#define PSRAM_MC_S2LUT2_S2_INSTR5_Msk               0xffff0000
#define PSRAM_MC_S2LUT2_S2_INSTR4_Pos               0
#define PSRAM_MC_S2LUT2_S2_INSTR4_Msk               0xffff

#define PSRAM_MC_S3LUT0_OFFSET                      0x130
#define PSRAM_MC_S3LUT0_S3_INSTR1_Pos               16
#define PSRAM_MC_S3LUT0_S3_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S3LUT0_S3_INSTR0_Pos               0
#define PSRAM_MC_S3LUT0_S3_INSTR0_Msk               0xffff

#define PSRAM_MC_S3LUT1_OFFSET                      0x134
#define PSRAM_MC_S3LUT1_S3_INSTR3_Pos               16
#define PSRAM_MC_S3LUT1_S3_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S3LUT1_S3_INSTR2_Pos               0
#define PSRAM_MC_S3LUT1_S3_INSTR2_Msk               0xffff

#define PSRAM_MC_S3LUT2_OFFSET                      0x138
#define PSRAM_MC_S3LUT2_S3_INSTR5_Pos               16
#define PSRAM_MC_S3LUT2_S3_INSTR5_Msk               0xffff0000
#define PSRAM_MC_S3LUT2_S3_INSTR4_Pos               0
#define PSRAM_MC_S3LUT2_S3_INSTR4_Msk               0xffff

#define PSRAM_MC_S4LUT0_OFFSET                      0x140
#define PSRAM_MC_S4LUT0_S4_INSTR1_Pos               16
#define PSRAM_MC_S4LUT0_S4_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S4LUT0_S4_INSTR0_Pos               0
#define PSRAM_MC_S4LUT0_S4_INSTR0_Msk               0xffff

#define PSRAM_MC_S4LUT1_OFFSET                      0x144
#define PSRAM_MC_S4LUT1_S4_INSTR3_Pos               16
#define PSRAM_MC_S4LUT1_S4_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S4LUT1_S4_INSTR2_Pos               0
#define PSRAM_MC_S4LUT1_S4_INSTR2_Msk               0xffff

#define PSRAM_MC_S5LUT0_OFFSET                      0x150
#define PSRAM_MC_S5LUT0_S5_INSTR1_Pos               16
#define PSRAM_MC_S5LUT0_S5_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S5LUT0_S5_INSTR0_Pos               0
#define PSRAM_MC_S5LUT0_S5_INSTR0_Msk               0xffff

#define PSRAM_MC_S5LUT1_OFFSET                      0x154
#define PSRAM_MC_S5LUT1_S5_INSTR3_Pos               16
#define PSRAM_MC_S5LUT1_S5_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S5LUT1_S5_INSTR2_Pos               0
#define PSRAM_MC_S5LUT1_S5_INSTR2_Msk               0xffff

#define PSRAM_MC_S6LUT0_OFFSET                      0x160
#define PSRAM_MC_S6LUT0_S6_INSTR1_Pos               16
#define PSRAM_MC_S6LUT0_S6_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S6LUT0_S6_INSTR0_Pos               0
#define PSRAM_MC_S6LUT0_S6_INSTR0_Msk               0xffff

#define PSRAM_MC_S6LUT1_OFFSET                      0x164
#define PSRAM_MC_S6LUT1_S6_INSTR3_Pos               16
#define PSRAM_MC_S6LUT1_S6_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S6LUT1_S6_INSTR2_Pos               0
#define PSRAM_MC_S6LUT1_S6_INSTR2_Msk               0xffff

#define PSRAM_MC_S7LUT0_OFFSET                      0x170
#define PSRAM_MC_S7LUT0_S7_INSTR1_Pos               16
#define PSRAM_MC_S7LUT0_S7_INSTR1_Msk               0xffff0000
#define PSRAM_MC_S7LUT0_S7_INSTR0_Pos               0
#define PSRAM_MC_S7LUT0_S7_INSTR0_Msk               0xffff

#define PSRAM_MC_S7LUT1_OFFSET                      0x174
#define PSRAM_MC_S7LUT1_S7_INSTR3_Pos               16
#define PSRAM_MC_S7LUT1_S7_INSTR3_Msk               0xffff0000
#define PSRAM_MC_S7LUT1_S7_INSTR2_Pos               0
#define PSRAM_MC_S7LUT1_S7_INSTR2_Msk               0xffff

#define PSRAM_MC_MR0_OFFSET                         0x800
#define PSRAM_MC_MR0_MR0_Pos                        0
#define PSRAM_MC_MR0_MR0_Msk                        0xff

#define PSRAM_MC_MR1_OFFSET                         0x804
#define PSRAM_MC_MR1_MR1_Pos                        0
#define PSRAM_MC_MR1_MR1_Msk                        0xff

#define PSRAM_MC_MR2_OFFSET                         0x808
#define PSRAM_MC_MR2_MR2_Pos                        0
#define PSRAM_MC_MR2_MR2_Msk                        0xff

#define PSRAM_MC_MR3_OFFSET                         0x80C
#define PSRAM_MC_MR3_MR3_Pos                        0
#define PSRAM_MC_MR3_MR3_Msk                        0xff

#define PSRAM_MC_MR4_OFFSET                         0x810
#define PSRAM_MC_MR4_MR4_Pos                        0
#define PSRAM_MC_MR4_MR4_Msk                        0xff

#define PSRAM_MC_MR5_OFFSET                         0x814
#define PSRAM_MC_MR5_MR5_Pos                        0
#define PSRAM_MC_MR5_MR5_Msk                        0xff

#define PSRAM_MC_MR6_OFFSET                         0x818
#define PSRAM_MC_MR6_MR6_Pos                        0
#define PSRAM_MC_MR6_MR6_Msk                        0xff

#define PSRAM_MC_MR7_OFFSET                         0x81C
#define PSRAM_MC_MR7_MR7_Pos                        0
#define PSRAM_MC_MR7_MR7_Msk                        0xff

#define PSRAM_MC_MR8_OFFSET                         0x820
#define PSRAM_MC_MR8_MR8_Pos                        0
#define PSRAM_MC_MR8_MR8_Msk                        0xff

#define PSRAM_MC_MR9_OFFSET                         0x824
#define PSRAM_MC_MR9_MR9_Pos                        0
#define PSRAM_MC_MR9_MR9_Msk                        0xff

#define PSRAM_MC_CUSTEXE_OFFSET                     0xC00
#define PSRAM_MC_CUSTEXE_EXE_CUST_SEQ_ID_Pos        0
#define PSRAM_MC_CUSTEXE_EXE_CUST_SEQ_ID_Msk        0xf

struct PSRAM_MC_REG_SEQSEL_BITS
{
    volatile uint32_t AHB_RD_SEQ_ID                 : 5; // bit 0~4
    volatile uint32_t RESV_5_7                      : 3; // bit 5~7
    volatile uint32_t AHB_WR_SEQ_ID                 : 5; // bit 8~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t MR_RD_SEQ_ID                  : 5; // bit 16~20
    volatile uint32_t RESV_21_23                    : 3; // bit 21~23
    volatile uint32_t MR_WR_SEQ_ID                  : 5; // bit 24~28
    volatile uint32_t RESV_29_31                    : 3; // bit 29~31
};

union PSRAM_MC_REG_SEQSEL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_SEQSEL_BITS                 bit;
};

struct PSRAM_MC_REG_TIMCFG_BITS
{
    volatile uint32_t TCPH_CFG                      : 4; // bit 0~3
    volatile uint32_t TCQLZ_CFG                     : 4; // bit 4~7
    volatile uint32_t TCSP_CFG                      : 3; // bit 8~10
    volatile uint32_t DIS_CLK_OUT_ALWAYS_ON         : 1; // bit 11~11
    volatile uint32_t TCHD_CFG                      : 2; // bit 12~13
    volatile uint32_t TRC_CFG                       : 6; // bit 14~19
    volatile uint32_t TCEM_CFG                      : 12; // bit 20~31
};

union PSRAM_MC_REG_TIMCFG {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_TIMCFG_BITS                 bit;
};

struct PSRAM_MC_REG_RDWRCTRL_BITS
{
    volatile uint32_t RD_LOOKUP_TX_BUF              : 1; // bit 0~0
    volatile uint32_t RD_LOOKUP_RX_BUF              : 1; // bit 1~1
    volatile uint32_t RD_LOOKUP_PREFETCH_CMD        : 1; // bit 2~2
    volatile uint32_t RESV_3_4                      : 2; // bit 3~4
    volatile uint32_t WR_ADDR_CONCAT_EN             : 1; // bit 5~5
    volatile uint32_t WR_INVALID_ALL_RXBUF          : 1; // bit 6~6
    volatile uint32_t PREFETCH_HIT_THRESHOLD        : 5; // bit 7~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union PSRAM_MC_REG_RDWRCTRL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_RDWRCTRL_BITS               bit;
};

struct PSRAM_MC_REG_DEVDEF_BITS
{
    volatile uint32_t DEV_PAGE_SIZE                 : 4; // bit 0~3
    volatile uint32_t DEV_TYPE                      : 4; // bit 4~7
    volatile uint32_t DEV_SIZE                      : 8; // bit 8~15
    volatile uint32_t HYPERBUS_MRWR_BYTE_LOW_VAL    : 8; // bit 16~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union PSRAM_MC_REG_DEVDEF {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DEVDEF_BITS                 bit;
};

struct PSRAM_MC_REG_DLLEN_BITS
{
    volatile uint32_t DLL_START_POINT               : 8; // bit 0~7
    volatile uint32_t DLL_LOCK_NUM                  : 3; // bit 8~10
    volatile uint32_t PHASE_DETECT_SEL              : 3; // bit 11~13
    volatile uint32_t DLL_BYPASS                    : 1; // bit 14~14
    volatile uint32_t RESV_15_15                    : 1; // bit 15~15
    volatile uint32_t DLL_EN                        : 1; // bit 16~16
    volatile uint32_t RESV_17_31                    : 15; // bit 17~31
};

union PSRAM_MC_REG_DLLEN {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLEN_BITS                  bit;
};

struct PSRAM_MC_REG_DLLDELAY_BITS
{
    volatile uint32_t WRLVL_DELAY                   : 8; // bit 0~7
    volatile uint32_t RDLVL_DELAY                   : 8; // bit 8~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union PSRAM_MC_REG_DLLDELAY {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLDELAY_BITS               bit;
};

struct PSRAM_MC_REG_DLLOBSV0_BITS
{
    volatile uint32_t DLL_LOCK                      : 1; // bit 0~0
    volatile uint32_t FORCE_LOCK_OVERFLOW           : 1; // bit 1~1
    volatile uint32_t HALF_CLOCK_MODE               : 1; // bit 2~2
    volatile uint32_t DLL_UNLOCK_CNT                : 5; // bit 3~7
    volatile uint32_t DLL_LOCK_VALUE                : 8; // bit 8~15
    volatile uint32_t LOCK_DEC                      : 8; // bit 16~23
    volatile uint32_t LOCK_INC                      : 8; // bit 24~31
};

union PSRAM_MC_REG_DLLOBSV0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLOBSV0_BITS               bit;
};

struct PSRAM_MC_REG_DLLOBSV1_BITS
{
    volatile uint32_t DECODER_OUT_RD                : 8; // bit 0~7
    volatile uint32_t DECODER_OUT_WR                : 8; // bit 8~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union PSRAM_MC_REG_DLLOBSV1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLOBSV1_BITS               bit;
};

struct PSRAM_MC_REG_LOCKDONE_BITS
{
    volatile uint32_t LOCK_DONE                     : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union PSRAM_MC_REG_LOCKDONE {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_LOCKDONE_BITS               bit;
};

struct PSRAM_MC_REG_DLLRST_BITS
{
    volatile uint32_t DLL_RESET                     : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union PSRAM_MC_REG_DLLRST {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLRST_BITS                 bit;
};

struct PSRAM_MC_REG_DLLRESYNC_BITS
{
    volatile uint32_t DLL_RESYNC                    : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union PSRAM_MC_REG_DLLRESYNC {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DLLRESYNC_BITS              bit;
};

struct PSRAM_MC_REG_DBGSEL_BITS
{
    volatile uint32_t DEBUG_SEL                     : 3; // bit 0~2
    volatile uint32_t RESV_3_31                     : 29; // bit 3~31
};

union PSRAM_MC_REG_DBGSEL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DBGSEL_BITS                 bit;
};

struct PSRAM_MC_REG_MRTMOERR_BITS
{
    volatile uint32_t MR_ACC_TMO_ERR_EN             : 1; // bit 0~0
    volatile uint32_t MR_ACC_TMO_THR                : 12; // bit 1~12
    volatile uint32_t RESV_13_31                    : 19; // bit 13~31
};

union PSRAM_MC_REG_MRTMOERR {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MRTMOERR_BITS               bit;
};

struct PSRAM_MC_REG_AHBTMOERR_BITS
{
    volatile uint32_t AHB_RD_ACC_TMO_ERR_EN         : 1; // bit 0~0
    volatile uint32_t AHB_RD_ACC_TMO_THR            : 12; // bit 1~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t AHB_WR_ACC_TMO_ERR_EN         : 1; // bit 16~16
    volatile uint32_t AHB_WR_ACC_TMO_THR            : 12; // bit 17~28
    volatile uint32_t RESV_29_31                    : 3; // bit 29~31
};

union PSRAM_MC_REG_AHBTMOERR {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_AHBTMOERR_BITS              bit;
};

struct PSRAM_MC_REG_DYNTCPHEN_BITS
{
    volatile uint32_t DEV_APM_DYN_TCPH_EN           : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union PSRAM_MC_REG_DYNTCPHEN {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DYNTCPHEN_BITS              bit;
};

struct PSRAM_MC_REG_DYNTCPHBASE_BITS
{
    volatile uint32_t DYN_TCPH_BASE_2               : 8; // bit 0~7
    volatile uint32_t DYN_TCPH_BASE_4               : 8; // bit 8~15
    volatile uint32_t DYN_TCPH_BASE_6               : 8; // bit 16~23
    volatile uint32_t DYN_TCPH_BASE_8               : 8; // bit 24~31
};

union PSRAM_MC_REG_DYNTCPHBASE {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_DYNTCPHBASE_BITS            bit;
};

struct PSRAM_MC_REG_BUSPRIORCTRL_BITS
{
    volatile uint32_t BUS_MASTER0_PRIORITY          : 2; // bit 0~1
    volatile uint32_t BUS_MASTER1_PRIORITY          : 2; // bit 2~3
    volatile uint32_t BUS_MASTER2_PRIORITY          : 2; // bit 4~5
    volatile uint32_t BUS_MASTER3_PRIORITY          : 2; // bit 6~7
    volatile uint32_t BUS_MASTER4_PRIORITY          : 2; // bit 8~9
    volatile uint32_t BUS_MASTER5_PRIORITY          : 2; // bit 10~11
    volatile uint32_t BUS_MASTER6_PRIORITY          : 2; // bit 12~13
    volatile uint32_t BUS_MASTER7_PRIORITY          : 2; // bit 14~15
    volatile uint32_t BUS_MASTER8_PRIORITY          : 2; // bit 16~17
    volatile uint32_t BUS_MASTER9_PRIORITY          : 2; // bit 18~19
    volatile uint32_t BUS_MASTER10_PRIORITY         : 2; // bit 20~21
    volatile uint32_t RESV_22_31                    : 10; // bit 22~31
};

union PSRAM_MC_REG_BUSPRIORCTRL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_BUSPRIORCTRL_BITS           bit;
};

struct PSRAM_MC_REG_BUSARBCTRL_BITS
{
    volatile uint32_t BUS_ARB_INCR1_MAX_COUNT       : 5; // bit 0~4
    volatile uint32_t RESV_5_31                     : 27; // bit 5~31
};

union PSRAM_MC_REG_BUSARBCTRL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_BUSARBCTRL_BITS             bit;
};

struct PSRAM_MC_REG_PADCTRL0_BITS
{
    volatile uint32_t CS_N_OE                       : 1; // bit 0~0
    volatile uint32_t CLK_OE                        : 1; // bit 1~1
    volatile uint32_t RESV_2_31                     : 30; // bit 2~31
};

union PSRAM_MC_REG_PADCTRL0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_PADCTRL0_BITS               bit;
};

struct PSRAM_MC_REG_PADCTRL1_BITS
{
    volatile uint32_t DQ_RX_EN                      : 8; // bit 0~7
    volatile uint32_t DQ_OE_GATE                    : 8; // bit 8~15
    volatile uint32_t DQS_RX_EN                     : 1; // bit 16~16
    volatile uint32_t DQS_OE_GATE                   : 1; // bit 17~17
    volatile uint32_t RESV_18_31                    : 14; // bit 18~31
};

union PSRAM_MC_REG_PADCTRL1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_PADCTRL1_BITS               bit;
};

struct PSRAM_MC_REG_FLEXPSRAMRSVD_BITS
{
    volatile uint32_t FLEXPSRAM_RSVD                : 32; // bit 0~31
};

union PSRAM_MC_REG_FLEXPSRAMRSVD {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_FLEXPSRAMRSVD_BITS          bit;
};

struct PSRAM_MC_REG_RXBUFALMOSTFULL_BITS
{
    volatile uint32_t BUF0_ALMOST_FULL_THRES_ND8    : 3; // bit 0~2
    volatile uint32_t BUF1_ALMOST_FULL_THRES_ND8    : 3; // bit 3~5
    volatile uint32_t BUF2_ALMOST_FULL_THRES_ND8    : 3; // bit 6~8
    volatile uint32_t BUF3_ALMOST_FULL_THRES_ND8    : 3; // bit 9~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union PSRAM_MC_REG_RXBUFALMOSTFULL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_RXBUFALMOSTFULL_BITS        bit;
};

struct PSRAM_MC_REG_RXBUFMSTID_BITS
{
    volatile uint32_t RXBUF0_MSTRID                 : 4; // bit 0~3
    volatile uint32_t RXBUF1_MSTRID                 : 4; // bit 4~7
    volatile uint32_t RXBUF2_MSTRID                 : 4; // bit 8~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t RXBUF0_BINDED_HUSER_EN        : 1; // bit 16~16
    volatile uint32_t RXBUF0_BINDED_HUSER_VAL       : 3; // bit 17~19
    volatile uint32_t RXBUF1_BINDED_HUSER_EN        : 1; // bit 20~20
    volatile uint32_t RXBUF1_BINDED_HUSER_VAL       : 3; // bit 21~23
    volatile uint32_t RXBUF2_BINDED_HUSER_EN        : 1; // bit 24~24
    volatile uint32_t RXBUF2_BINDED_HUSER_VAL       : 3; // bit 25~27
    volatile uint32_t RESV_28_31                    : 4; // bit 28~31
};

union PSRAM_MC_REG_RXBUFMSTID {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_RXBUFMSTID_BITS             bit;
};

struct PSRAM_MC_REG_RXBUFPFCTRL_BITS
{
    volatile uint32_t RXBUF0_PREFETCH_EN            : 1; // bit 0~0
    volatile uint32_t RXBUF1_PREFETCH_EN            : 1; // bit 1~1
    volatile uint32_t RXBUF2_PREFETCH_EN            : 1; // bit 2~2
    volatile uint32_t RXBUF3_PREFETCH_EN            : 1; // bit 3~3
    volatile uint32_t RESV_4_7                      : 4; // bit 4~7
    volatile uint32_t RXBUF0_PREFETCH_TILL_FULL     : 1; // bit 8~8
    volatile uint32_t RXBUF1_PREFETCH_TILL_FULL     : 1; // bit 9~9
    volatile uint32_t RXBUF2_PREFETCH_TILL_FULL     : 1; // bit 10~10
    volatile uint32_t RXBUF3_PREFETCH_TILL_FULL     : 1; // bit 11~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t RXBUF0_INVALIDATE             : 1; // bit 16~16
    volatile uint32_t RXBUF1_INVALIDATE             : 1; // bit 17~17
    volatile uint32_t RXBUF2_INVALIDATE             : 1; // bit 18~18
    volatile uint32_t RXBUF3_INVALIDATE             : 1; // bit 19~19
    volatile uint32_t RXBUF0_REVERSE_BIND           : 1; // bit 20~20
    volatile uint32_t RXBUF1_REVERSE_BIND           : 1; // bit 21~21
    volatile uint32_t RXBUF2_REVERSE_BIND           : 1; // bit 22~22
    volatile uint32_t RESV_23_31                    : 9; // bit 23~31
};

union PSRAM_MC_REG_RXBUFPFCTRL {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_RXBUFPFCTRL_BITS            bit;
};

struct PSRAM_MC_REG_IRQ_W_BITS
{
    volatile uint32_t IRQ_MASK                      : 8; // bit 0~7
    volatile uint32_t IRQ_CLEAR                     : 8; // bit 8~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union PSRAM_MC_REG_IRQ_W {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_IRQ_W_BITS                  bit;
};

struct PSRAM_MC_REG_IRQ_R_BITS
{
    volatile uint32_t IRQ_STAT                      : 8; // bit 0~7
    volatile uint32_t IRQ_STAT_RAW                  : 8; // bit 8~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union PSRAM_MC_REG_IRQ_R {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_IRQ_R_BITS                  bit;
};

struct PSRAM_MC_REG_E0ADDR_BITS
{
    volatile uint32_t WR_ERR0_ADDR                  : 28; // bit 0~27
    volatile uint32_t RESV_28_31                    : 4; // bit 28~31
};

union PSRAM_MC_REG_E0ADDR {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_E0ADDR_BITS                 bit;
};

struct PSRAM_MC_REG_E1ADDR_BITS
{
    volatile uint32_t WR_ERR1_ADDR                  : 28; // bit 0~27
    volatile uint32_t RESV_28_31                    : 4; // bit 28~31
};

union PSRAM_MC_REG_E1ADDR {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_E1ADDR_BITS                 bit;
};

struct PSRAM_MC_REG_S0LUT0_BITS
{
    volatile uint32_t S0_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S0_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S0LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S0LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S0LUT1_BITS
{
    volatile uint32_t S0_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S0_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S0LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S0LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S0LUT2_BITS
{
    volatile uint32_t S0_INSTR4                     : 16; // bit 0~15
    volatile uint32_t S0_INSTR5                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S0LUT2 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S0LUT2_BITS                 bit;
};

struct PSRAM_MC_REG_S1LUT0_BITS
{
    volatile uint32_t S1_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S1_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S1LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S1LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S1LUT1_BITS
{
    volatile uint32_t S1_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S1_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S1LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S1LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S1LUT2_BITS
{
    volatile uint32_t S1_INSTR4                     : 16; // bit 0~15
    volatile uint32_t S1_INSTR5                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S1LUT2 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S1LUT2_BITS                 bit;
};

struct PSRAM_MC_REG_S2LUT0_BITS
{
    volatile uint32_t S2_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S2_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S2LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S2LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S2LUT1_BITS
{
    volatile uint32_t S2_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S2_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S2LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S2LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S2LUT2_BITS
{
    volatile uint32_t S2_INSTR4                     : 16; // bit 0~15
    volatile uint32_t S2_INSTR5                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S2LUT2 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S2LUT2_BITS                 bit;
};

struct PSRAM_MC_REG_S3LUT0_BITS
{
    volatile uint32_t S3_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S3_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S3LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S3LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S3LUT1_BITS
{
    volatile uint32_t S3_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S3_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S3LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S3LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S3LUT2_BITS
{
    volatile uint32_t S3_INSTR4                     : 16; // bit 0~15
    volatile uint32_t S3_INSTR5                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S3LUT2 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S3LUT2_BITS                 bit;
};

struct PSRAM_MC_REG_S4LUT0_BITS
{
    volatile uint32_t S4_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S4_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S4LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S4LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S4LUT1_BITS
{
    volatile uint32_t S4_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S4_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S4LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S4LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S5LUT0_BITS
{
    volatile uint32_t S5_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S5_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S5LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S5LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S5LUT1_BITS
{
    volatile uint32_t S5_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S5_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S5LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S5LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S6LUT0_BITS
{
    volatile uint32_t S6_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S6_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S6LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S6LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S6LUT1_BITS
{
    volatile uint32_t S6_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S6_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S6LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S6LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_S7LUT0_BITS
{
    volatile uint32_t S7_INSTR0                     : 16; // bit 0~15
    volatile uint32_t S7_INSTR1                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S7LUT0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S7LUT0_BITS                 bit;
};

struct PSRAM_MC_REG_S7LUT1_BITS
{
    volatile uint32_t S7_INSTR2                     : 16; // bit 0~15
    volatile uint32_t S7_INSTR3                     : 16; // bit 16~31
};

union PSRAM_MC_REG_S7LUT1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_S7LUT1_BITS                 bit;
};

struct PSRAM_MC_REG_MR0_BITS
{
    volatile uint32_t MR0                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR0 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR0_BITS                    bit;
};

struct PSRAM_MC_REG_MR1_BITS
{
    volatile uint32_t MR1                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR1 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR1_BITS                    bit;
};

struct PSRAM_MC_REG_MR2_BITS
{
    volatile uint32_t MR2                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR2 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR2_BITS                    bit;
};

struct PSRAM_MC_REG_MR3_BITS
{
    volatile uint32_t MR3                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR3 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR3_BITS                    bit;
};

struct PSRAM_MC_REG_MR4_BITS
{
    volatile uint32_t MR4                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR4 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR4_BITS                    bit;
};

struct PSRAM_MC_REG_MR5_BITS
{
    volatile uint32_t MR5                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR5 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR5_BITS                    bit;
};

struct PSRAM_MC_REG_MR6_BITS
{
    volatile uint32_t MR6                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR6 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR6_BITS                    bit;
};

struct PSRAM_MC_REG_MR7_BITS
{
    volatile uint32_t MR7                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR7 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR7_BITS                    bit;
};

struct PSRAM_MC_REG_MR8_BITS
{
    volatile uint32_t MR8                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR8 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR8_BITS                    bit;
};

struct PSRAM_MC_REG_MR9_BITS
{
    volatile uint32_t MR9                           : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union PSRAM_MC_REG_MR9 {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_MR9_BITS                    bit;
};

struct PSRAM_MC_REG_CUSTEXE_BITS
{
    volatile uint32_t EXE_CUST_SEQ_ID               : 4; // bit 0~3
    volatile uint32_t RESV_4_31                     : 28; // bit 4~31
};

union PSRAM_MC_REG_CUSTEXE {
    volatile uint32_t                               all;
    struct PSRAM_MC_REG_CUSTEXE_BITS                bit;
};

typedef struct
{
    union PSRAM_MC_REG_SEQSEL                       REG_SEQSEL;  // 0x000
    union PSRAM_MC_REG_TIMCFG                       REG_TIMCFG;  // 0x004
    union PSRAM_MC_REG_RDWRCTRL                     REG_RDWRCTRL; // 0x008
    union PSRAM_MC_REG_DEVDEF                       REG_DEVDEF;  // 0x00C
    union PSRAM_MC_REG_DLLEN                        REG_DLLEN;   // 0x010
    union PSRAM_MC_REG_DLLDELAY                     REG_DLLDELAY; // 0x014
    union PSRAM_MC_REG_DLLOBSV0                     REG_DLLOBSV0; // 0x018
    union PSRAM_MC_REG_DLLOBSV1                     REG_DLLOBSV1; // 0x01C
    union PSRAM_MC_REG_LOCKDONE                     REG_LOCKDONE; // 0x020
    union PSRAM_MC_REG_DLLRST                       REG_DLLRST;  // 0x024
    union PSRAM_MC_REG_DLLRESYNC                    REG_DLLRESYNC; // 0x028
    union PSRAM_MC_REG_DBGSEL                       REG_DBGSEL;  // 0x02C
    union PSRAM_MC_REG_MRTMOERR                     REG_MRTMOERR; // 0x030
    union PSRAM_MC_REG_AHBTMOERR                    REG_AHBTMOERR; // 0x034
    union PSRAM_MC_REG_DYNTCPHEN                    REG_DYNTCPHEN; // 0x038
    union PSRAM_MC_REG_DYNTCPHBASE                  REG_DYNTCPHBASE; // 0x03C
    union PSRAM_MC_REG_BUSPRIORCTRL                 REG_BUSPRIORCTRL; // 0x040
    union PSRAM_MC_REG_BUSARBCTRL                   REG_BUSARBCTRL; // 0x044
    volatile uint32_t                               REG_RESV_0X48_0X4C[2];
    union PSRAM_MC_REG_PADCTRL0                     REG_PADCTRL0; // 0x050
    union PSRAM_MC_REG_PADCTRL1                     REG_PADCTRL1; // 0x054
    volatile uint32_t                               REG_RESV_0X58_0X7C[10];
    union PSRAM_MC_REG_FLEXPSRAMRSVD                REG_FLEXPSRAMRSVD; // 0x080
    union PSRAM_MC_REG_RXBUFALMOSTFULL              REG_RXBUFALMOSTFULL; // 0x084
    union PSRAM_MC_REG_RXBUFMSTID                   REG_RXBUFMSTID; // 0x088
    union PSRAM_MC_REG_RXBUFPFCTRL                  REG_RXBUFPFCTRL; // 0x08C
    volatile uint32_t                               REG_RESV_0X90_0X9C[4];
    union PSRAM_MC_REG_IRQ_W                        REG_IRQ_W;   // 0x0A0
    union PSRAM_MC_REG_IRQ_R                        REG_IRQ_R;   // 0x0A4
    union PSRAM_MC_REG_E0ADDR                       REG_E0ADDR;  // 0x0A8
    union PSRAM_MC_REG_E1ADDR                       REG_E1ADDR;  // 0x0AC
    volatile uint32_t                               REG_RESV_0XB0_0XFC[20];
    union PSRAM_MC_REG_S0LUT0                       REG_S0LUT0;  // 0x100
    union PSRAM_MC_REG_S0LUT1                       REG_S0LUT1;  // 0x104
    union PSRAM_MC_REG_S0LUT2                       REG_S0LUT2;  // 0x108
    volatile uint32_t                               REG_RESV_0X10C_0X10C[1];
    union PSRAM_MC_REG_S1LUT0                       REG_S1LUT0;  // 0x110
    union PSRAM_MC_REG_S1LUT1                       REG_S1LUT1;  // 0x114
    union PSRAM_MC_REG_S1LUT2                       REG_S1LUT2;  // 0x118
    volatile uint32_t                               REG_RESV_0X11C_0X11C[1];
    union PSRAM_MC_REG_S2LUT0                       REG_S2LUT0;  // 0x120
    union PSRAM_MC_REG_S2LUT1                       REG_S2LUT1;  // 0x124
    union PSRAM_MC_REG_S2LUT2                       REG_S2LUT2;  // 0x128
    volatile uint32_t                               REG_RESV_0X12C_0X12C[1];
    union PSRAM_MC_REG_S3LUT0                       REG_S3LUT0;  // 0x130
    union PSRAM_MC_REG_S3LUT1                       REG_S3LUT1;  // 0x134
    union PSRAM_MC_REG_S3LUT2                       REG_S3LUT2;  // 0x138
    volatile uint32_t                               REG_RESV_0X13C_0X13C[1];
    union PSRAM_MC_REG_S4LUT0                       REG_S4LUT0;  // 0x140
    union PSRAM_MC_REG_S4LUT1                       REG_S4LUT1;  // 0x144
    volatile uint32_t                               REG_RESV_0X148_0X14C[2];
    union PSRAM_MC_REG_S5LUT0                       REG_S5LUT0;  // 0x150
    union PSRAM_MC_REG_S5LUT1                       REG_S5LUT1;  // 0x154
    volatile uint32_t                               REG_RESV_0X158_0X15C[2];
    union PSRAM_MC_REG_S6LUT0                       REG_S6LUT0;  // 0x160
    union PSRAM_MC_REG_S6LUT1                       REG_S6LUT1;  // 0x164
    volatile uint32_t                               REG_RESV_0X168_0X16C[2];
    union PSRAM_MC_REG_S7LUT0                       REG_S7LUT0;  // 0x170
    union PSRAM_MC_REG_S7LUT1                       REG_S7LUT1;  // 0x174
    volatile uint32_t                               REG_RESV_0X178_0X7FC[418];
    union PSRAM_MC_REG_MR0                          REG_MR0;     // 0x800
    union PSRAM_MC_REG_MR1                          REG_MR1;     // 0x804
    union PSRAM_MC_REG_MR2                          REG_MR2;     // 0x808
    union PSRAM_MC_REG_MR3                          REG_MR3;     // 0x80C
    union PSRAM_MC_REG_MR4                          REG_MR4;     // 0x810
    union PSRAM_MC_REG_MR5                          REG_MR5;     // 0x814
    union PSRAM_MC_REG_MR6                          REG_MR6;     // 0x818
    union PSRAM_MC_REG_MR7                          REG_MR7;     // 0x81C
    union PSRAM_MC_REG_MR8                          REG_MR8;     // 0x820
    union PSRAM_MC_REG_MR9                          REG_MR9;     // 0x824
    volatile uint32_t                               REG_RESV_0X828_0XBFC[246];
    union PSRAM_MC_REG_CUSTEXE                      REG_CUSTEXE; // 0xC00
} PSRAM_MC_RegDef;


#endif // __PSRAM_MC_REGFILE_H__

