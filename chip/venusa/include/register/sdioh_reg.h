//  ----------------------------------------------------------------------
//  File Name   : GenCFold/sdioh_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __SDIOH_REGFILE_H__
#define __SDIOH_REGFILE_H__

#include <stdint.h>

#define SDIOH_SDMADR_OFFSET                         0x000
#define SDIOH_SDMADR_SDMA_SYS_ADDR_R_Pos            0
#define SDIOH_SDMADR_SDMA_SYS_ADDR_R_Msk            0xffffffff

#define SDIOH_BSR_BCR_OFFSET                        0x004
#define SDIOH_BSR_BCR_BLK_CNT_R_Pos                 16
#define SDIOH_BSR_BCR_BLK_CNT_R_Msk                 0xffff0000
#define SDIOH_BSR_BCR_SDMA_BUF_BOUND_Pos            12
#define SDIOH_BSR_BCR_SDMA_BUF_BOUND_Msk            0x7000
#define SDIOH_BSR_BCR_BLK_SIZE_R_Pos                0
#define SDIOH_BSR_BCR_BLK_SIZE_R_Msk                0xfff

#define SDIOH_ARG1_OFFSET                           0x008
#define SDIOH_ARG1_ARG1_R_Pos                       0
#define SDIOH_ARG1_ARG1_R_Msk                       0xffffffff

#define SDIOH_TMR_CR_OFFSET                         0x00C
#define SDIOH_TMR_CR_CMD_IDX_Pos                    24
#define SDIOH_TMR_CR_CMD_IDX_Msk                    0x3f000000
#define SDIOH_TMR_CR_CMD_TYPE_Pos                   22
#define SDIOH_TMR_CR_CMD_TYPE_Msk                   0xc00000
#define SDIOH_TMR_CR_DATA_PRES_SEL_Pos              21
#define SDIOH_TMR_CR_DATA_PRES_SEL_Msk              0x200000
#define SDIOH_TMR_CR_CMD_IDX_CHK_EN_Pos             20
#define SDIOH_TMR_CR_CMD_IDX_CHK_EN_Msk             0x100000
#define SDIOH_TMR_CR_CMD_CRC_CHK_EN_Pos             19
#define SDIOH_TMR_CR_CMD_CRC_CHK_EN_Msk             0x80000
#define SDIOH_TMR_CR_RSP_TYPE_SEL_Pos               16
#define SDIOH_TMR_CR_RSP_TYPE_SEL_Msk               0x30000
#define SDIOH_TMR_CR_MULTI_BLK_RW_Pos               5
#define SDIOH_TMR_CR_MULTI_BLK_RW_Msk               0x20
#define SDIOH_TMR_CR_TRAN_DIR_SEL_Pos               4
#define SDIOH_TMR_CR_TRAN_DIR_SEL_Msk               0x10
#define SDIOH_TMR_CR_AUTO_CMD_EN_Pos                2
#define SDIOH_TMR_CR_AUTO_CMD_EN_Msk                0xc
#define SDIOH_TMR_CR_BLK_CNT_EN_Pos                 1
#define SDIOH_TMR_CR_BLK_CNT_EN_Msk                 0x2
#define SDIOH_TMR_CR_DMA_EN_Pos                     0
#define SDIOH_TMR_CR_DMA_EN_Msk                     0x1

#define SDIOH_RESP0_OFFSET                          0x010
#define SDIOH_RESP0_RSP_R_Pos                       0
#define SDIOH_RESP0_RSP_R_Msk                       0xffffffff

#define SDIOH_RESP1_OFFSET                          0x014
#define SDIOH_RESP1_RSP_R_Pos                       0
#define SDIOH_RESP1_RSP_R_Msk                       0xffffffff

#define SDIOH_RESP2_OFFSET                          0x018
#define SDIOH_RESP2_RSP_R_Pos                       0
#define SDIOH_RESP2_RSP_R_Msk                       0xffffffff

#define SDIOH_RESP3_OFFSET                          0x01C
#define SDIOH_RESP3_RSP_R_Pos                       0
#define SDIOH_RESP3_RSP_R_Msk                       0xffffffff

#define SDIOH_BDP_OFFSET                            0x020
#define SDIOH_BDP_DATA_PORT_R_Pos                   0
#define SDIOH_BDP_DATA_PORT_R_Msk                   0xffffffff

#define SDIOH_PSR_OFFSET                            0x024
#define SDIOH_PSR_CMD_LIN_LV_Pos                    24
#define SDIOH_PSR_CMD_LIN_LV_Msk                    0x1000000
#define SDIOH_PSR_DATA_LIN_LV_Pos                   20
#define SDIOH_PSR_DATA_LIN_LV_Msk                   0xf00000
#define SDIOH_PSR_WR_PROT_LV_Pos                    19
#define SDIOH_PSR_WR_PROT_LV_Msk                    0x80000
#define SDIOH_PSR_CD_PIN_LV_Pos                     18
#define SDIOH_PSR_CD_PIN_LV_Msk                     0x40000
#define SDIOH_PSR_SYS_CARD_STABLE_Pos               17
#define SDIOH_PSR_SYS_CARD_STABLE_Msk               0x20000
#define SDIOH_PSR_SYS_CARD_INSERT_Pos               16
#define SDIOH_PSR_SYS_CARD_INSERT_Msk               0x10000
#define SDIOH_PSR_BUF_REN_R_Pos                     11
#define SDIOH_PSR_BUF_REN_R_Msk                     0x800
#define SDIOH_PSR_BUF_WEN_R_Pos                     10
#define SDIOH_PSR_BUF_WEN_R_Msk                     0x400
#define SDIOH_PSR_RD_TRAN_ACT_R_Pos                 9
#define SDIOH_PSR_RD_TRAN_ACT_R_Msk                 0x200
#define SDIOH_PSR_WR_TRAN_ACT_R_Pos                 8
#define SDIOH_PSR_WR_TRAN_ACT_R_Msk                 0x100
#define SDIOH_PSR_DATA_LIN_ACT_R_Pos                2
#define SDIOH_PSR_DATA_LIN_ACT_R_Msk                0x4
#define SDIOH_PSR_CMD_INHIBIT_D_Pos                 1
#define SDIOH_PSR_CMD_INHIBIT_D_Msk                 0x2
#define SDIOH_PSR_CMD_INHIBIT_C_Pos                 0
#define SDIOH_PSR_CMD_INHIBIT_C_Msk                 0x1

#define SDIOH_HC1_PCR_BGCR_OFFSET                   0x028
#define SDIOH_HC1_PCR_BGCR_INT_AT_BLK_GAP_Pos       19
#define SDIOH_HC1_PCR_BGCR_INT_AT_BLK_GAP_Msk       0x80000
#define SDIOH_HC1_PCR_BGCR_READ_WAIT_Pos            18
#define SDIOH_HC1_PCR_BGCR_READ_WAIT_Msk            0x40000
#define SDIOH_HC1_PCR_BGCR_CONT_REQ_Pos             17
#define SDIOH_HC1_PCR_BGCR_CONT_REQ_Msk             0x20000
#define SDIOH_HC1_PCR_BGCR_SP_BLK_GAP_REQ_Pos       16
#define SDIOH_HC1_PCR_BGCR_SP_BLK_GAP_REQ_Msk       0x10000
#define SDIOH_HC1_PCR_BGCR_SD_BUS_VOL_Pos           9
#define SDIOH_HC1_PCR_BGCR_SD_BUS_VOL_Msk           0xe00
#define SDIOH_HC1_PCR_BGCR_SD_BUS_POW_Pos           8
#define SDIOH_HC1_PCR_BGCR_SD_BUS_POW_Msk           0x100
#define SDIOH_HC1_PCR_BGCR_CD_SEL_Pos               7
#define SDIOH_HC1_PCR_BGCR_CD_SEL_Msk               0x80
#define SDIOH_HC1_PCR_BGCR_CD_TEST_LV_Pos           6
#define SDIOH_HC1_PCR_BGCR_CD_TEST_LV_Msk           0x40
#define SDIOH_HC1_PCR_BGCR_EXT_DATA_WIDTH_Pos       5
#define SDIOH_HC1_PCR_BGCR_EXT_DATA_WIDTH_Msk       0x20
#define SDIOH_HC1_PCR_BGCR_DMA_TYPE_Pos             3
#define SDIOH_HC1_PCR_BGCR_DMA_TYPE_Msk             0x18
#define SDIOH_HC1_PCR_BGCR_HI_SPEED_Pos             2
#define SDIOH_HC1_PCR_BGCR_HI_SPEED_Msk             0x4
#define SDIOH_HC1_PCR_BGCR_DATA_WIDTH_Pos           1
#define SDIOH_HC1_PCR_BGCR_DATA_WIDTH_Msk           0x2
#define SDIOH_HC1_PCR_BGCR_LED_CTRL_Pos             0
#define SDIOH_HC1_PCR_BGCR_LED_CTRL_Msk             0x1

#define SDIOH_CCR_TCR_SRR_OFFSET                    0x02C
#define SDIOH_CCR_TCR_SRR_SOFT_RST_DAT_Pos          26
#define SDIOH_CCR_TCR_SRR_SOFT_RST_DAT_Msk          0x4000000
#define SDIOH_CCR_TCR_SRR_SOFT_RST_CMD_Pos          25
#define SDIOH_CCR_TCR_SRR_SOFT_RST_CMD_Msk          0x2000000
#define SDIOH_CCR_TCR_SRR_SOFT_RST_ALL_Pos          24
#define SDIOH_CCR_TCR_SRR_SOFT_RST_ALL_Msk          0x1000000
#define SDIOH_CCR_TCR_SRR_DATA_TIMER_Pos            16
#define SDIOH_CCR_TCR_SRR_DATA_TIMER_Msk            0xf0000
#define SDIOH_CCR_TCR_SRR_LOW_BIT_SD_CLK_SEL_Pos    8
#define SDIOH_CCR_TCR_SRR_LOW_BIT_SD_CLK_SEL_Msk    0xff00
#define SDIOH_CCR_TCR_SRR_UPPER_BIT_SD_CLK_SEL_Pos    6
#define SDIOH_CCR_TCR_SRR_UPPER_BIT_SD_CLK_SEL_Msk    0xc0
#define SDIOH_CCR_TCR_SRR_CLK_GEN_SEL_Pos           5
#define SDIOH_CCR_TCR_SRR_CLK_GEN_SEL_Msk           0x20
#define SDIOH_CCR_TCR_SRR_SD_CLK_EN_Pos             2
#define SDIOH_CCR_TCR_SRR_SD_CLK_EN_Msk             0x4
#define SDIOH_CCR_TCR_SRR_CLK_STABLE_Pos            1
#define SDIOH_CCR_TCR_SRR_CLK_STABLE_Msk            0x2
#define SDIOH_CCR_TCR_SRR_INTER_CLK_EN_Pos          0
#define SDIOH_CCR_TCR_SRR_INTER_CLK_EN_Msk          0x1

#define SDIOH_NISR_EISR_OFFSET                      0x030
#define SDIOH_NISR_EISR_TUNING_ERR_R_Pos            26
#define SDIOH_NISR_EISR_TUNING_ERR_R_Msk            0x4000000
#define SDIOH_NISR_EISR_ADMA_ERR_R_Pos              25
#define SDIOH_NISR_EISR_ADMA_ERR_R_Msk              0x2000000
#define SDIOH_NISR_EISR_AUTO_CMD12_ERR_R_Pos        24
#define SDIOH_NISR_EISR_AUTO_CMD12_ERR_R_Msk        0x1000000
#define SDIOH_NISR_EISR_CUR_LIM_ERR_R_Pos           23
#define SDIOH_NISR_EISR_CUR_LIM_ERR_R_Msk           0x800000
#define SDIOH_NISR_EISR_DATA_END_BIT_ERR_R_Pos      22
#define SDIOH_NISR_EISR_DATA_END_BIT_ERR_R_Msk      0x400000
#define SDIOH_NISR_EISR_DATA_CRC_ERR_R_Pos          21
#define SDIOH_NISR_EISR_DATA_CRC_ERR_R_Msk          0x200000
#define SDIOH_NISR_EISR_DATA_TIMEOUT_ERR_R_Pos      20
#define SDIOH_NISR_EISR_DATA_TIMEOUT_ERR_R_Msk      0x100000
#define SDIOH_NISR_EISR_CMD_IDX_ERR_R_Pos           19
#define SDIOH_NISR_EISR_CMD_IDX_ERR_R_Msk           0x80000
#define SDIOH_NISR_EISR_CMD_END_BIT_ERR_R_Pos       18
#define SDIOH_NISR_EISR_CMD_END_BIT_ERR_R_Msk       0x40000
#define SDIOH_NISR_EISR_CMD_CRC_ERR_R_Pos           17
#define SDIOH_NISR_EISR_CMD_CRC_ERR_R_Msk           0x20000
#define SDIOH_NISR_EISR_CMD_TIMEOUT_ERR_R_Pos       16
#define SDIOH_NISR_EISR_CMD_TIMEOUT_ERR_R_Msk       0x10000
#define SDIOH_NISR_EISR_ERR_INTERRUPT_R_Pos         15
#define SDIOH_NISR_EISR_ERR_INTERRUPT_R_Msk         0x8000
#define SDIOH_NISR_EISR_RE_TUNING_INT_R_Pos         12
#define SDIOH_NISR_EISR_RE_TUNING_INT_R_Msk         0x1000
#define SDIOH_NISR_EISR_INT_C_R_Pos                 11
#define SDIOH_NISR_EISR_INT_C_R_Msk                 0x800
#define SDIOH_NISR_EISR_INT_B_R_Pos                 10
#define SDIOH_NISR_EISR_INT_B_R_Msk                 0x400
#define SDIOH_NISR_EISR_INT_A_R_Pos                 9
#define SDIOH_NISR_EISR_INT_A_R_Msk                 0x200
#define SDIOH_NISR_EISR_CARD_INT_R_Pos              8
#define SDIOH_NISR_EISR_CARD_INT_R_Msk              0x100
#define SDIOH_NISR_EISR_CARD_REMOVE_R_Pos           7
#define SDIOH_NISR_EISR_CARD_REMOVE_R_Msk           0x80
#define SDIOH_NISR_EISR_CARD_INSERT_R_Pos           6
#define SDIOH_NISR_EISR_CARD_INSERT_R_Msk           0x40
#define SDIOH_NISR_EISR_BUF_R_RDY_R_Pos             5
#define SDIOH_NISR_EISR_BUF_R_RDY_R_Msk             0x20
#define SDIOH_NISR_EISR_BUF_W_RDY_R_Pos             4
#define SDIOH_NISR_EISR_BUF_W_RDY_R_Msk             0x10
#define SDIOH_NISR_EISR_DMA_INTERRUPT_R_Pos         3
#define SDIOH_NISR_EISR_DMA_INTERRUPT_R_Msk         0x8
#define SDIOH_NISR_EISR_BLK_GAP_EVT_R_Pos           2
#define SDIOH_NISR_EISR_BLK_GAP_EVT_R_Msk           0x4
#define SDIOH_NISR_EISR_TRAN_COMPLETE_R_Pos         1
#define SDIOH_NISR_EISR_TRAN_COMPLETE_R_Msk         0x2
#define SDIOH_NISR_EISR_CMD_COMPLETE_R_Pos          0
#define SDIOH_NISR_EISR_CMD_COMPLETE_R_Msk          0x1

#define SDIOH_NISER_EISER_OFFSET                    0x034
#define SDIOH_NISER_EISER_TUNING_ERR_ST_EN_Pos      26
#define SDIOH_NISER_EISER_TUNING_ERR_ST_EN_Msk      0x4000000
#define SDIOH_NISER_EISER_ADMA_ERR_ST_EN_Pos        25
#define SDIOH_NISER_EISER_ADMA_ERR_ST_EN_Msk        0x2000000
#define SDIOH_NISER_EISER_AUTO_CMD12_ERR_ST_EN_Pos    24
#define SDIOH_NISER_EISER_AUTO_CMD12_ERR_ST_EN_Msk    0x1000000
#define SDIOH_NISER_EISER_CUR_LIM_ERR_ST_EN_Pos     23
#define SDIOH_NISER_EISER_CUR_LIM_ERR_ST_EN_Msk     0x800000
#define SDIOH_NISER_EISER_DATA_END_BIT_ERR_ST_EN_Pos    22
#define SDIOH_NISER_EISER_DATA_END_BIT_ERR_ST_EN_Msk    0x400000
#define SDIOH_NISER_EISER_DATA_CRC_ERR_ST_EN_Pos    21
#define SDIOH_NISER_EISER_DATA_CRC_ERR_ST_EN_Msk    0x200000
#define SDIOH_NISER_EISER_DATA_TIMEOUT_ERR_ST_EN_Pos    20
#define SDIOH_NISER_EISER_DATA_TIMEOUT_ERR_ST_EN_Msk    0x100000
#define SDIOH_NISER_EISER_CMD_IDX_ERR_ST_EM_Pos     19
#define SDIOH_NISER_EISER_CMD_IDX_ERR_ST_EM_Msk     0x80000
#define SDIOH_NISER_EISER_CMD_END_BIT_ERR_ST_EN_Pos    18
#define SDIOH_NISER_EISER_CMD_END_BIT_ERR_ST_EN_Msk    0x40000
#define SDIOH_NISER_EISER_CMD_CRC_ERR_ST_EN_Pos     17
#define SDIOH_NISER_EISER_CMD_CRC_ERR_ST_EN_Msk     0x20000
#define SDIOH_NISER_EISER_CMD_TIMEOUT_ERR_ST_EN_Pos    16
#define SDIOH_NISER_EISER_CMD_TIMEOUT_ERR_ST_EN_Msk    0x10000
#define SDIOH_NISER_EISER_RE_TUNING_ST_EN_Pos       12
#define SDIOH_NISER_EISER_RE_TUNING_ST_EN_Msk       0x1000
#define SDIOH_NISER_EISER_INT_C_ST_EN_Pos           11
#define SDIOH_NISER_EISER_INT_C_ST_EN_Msk           0x800
#define SDIOH_NISER_EISER_INT_B_ST_EN_Pos           10
#define SDIOH_NISER_EISER_INT_B_ST_EN_Msk           0x400
#define SDIOH_NISER_EISER_INT_A_ST_EN_Pos           9
#define SDIOH_NISER_EISER_INT_A_ST_EN_Msk           0x200
#define SDIOH_NISER_EISER_CARD_INT_ST_EN_Pos        8
#define SDIOH_NISER_EISER_CARD_INT_ST_EN_Msk        0x100
#define SDIOH_NISER_EISER_CARD_REMOVE_ST_EN_Pos     7
#define SDIOH_NISER_EISER_CARD_REMOVE_ST_EN_Msk     0x80
#define SDIOH_NISER_EISER_CARD_INSERT_ST_EN_Pos     6
#define SDIOH_NISER_EISER_CARD_INSERT_ST_EN_Msk     0x40
#define SDIOH_NISER_EISER_BUF_R_RDY_ST_EN_Pos       5
#define SDIOH_NISER_EISER_BUF_R_RDY_ST_EN_Msk       0x20
#define SDIOH_NISER_EISER_BUF_W_RDY_ST_EN_Pos       4
#define SDIOH_NISER_EISER_BUF_W_RDY_ST_EN_Msk       0x10
#define SDIOH_NISER_EISER_DMA_INTERRUPT_ST_EN_Pos    3
#define SDIOH_NISER_EISER_DMA_INTERRUPT_ST_EN_Msk    0x8
#define SDIOH_NISER_EISER_BLK_GAP_EVT_ST_EN_Pos     2
#define SDIOH_NISER_EISER_BLK_GAP_EVT_ST_EN_Msk     0x4
#define SDIOH_NISER_EISER_TRAN_COMPLETE_ST_EN_Pos    1
#define SDIOH_NISER_EISER_TRAN_COMPLETE_ST_EN_Msk    0x2
#define SDIOH_NISER_EISER_CMD_COMPLETE_ST_EN_Pos    0
#define SDIOH_NISER_EISER_CMD_COMPLETE_ST_EN_Msk    0x1

#define SDIOH_NISEN_EISEN_OFFSET                    0x038
#define SDIOH_NISEN_EISEN_TUNING_ERR_SIGN_EN_Pos    26
#define SDIOH_NISEN_EISEN_TUNING_ERR_SIGN_EN_Msk    0x4000000
#define SDIOH_NISEN_EISEN_ADMA_ERR_SIG_EN_Pos       25
#define SDIOH_NISEN_EISEN_ADMA_ERR_SIG_EN_Msk       0x2000000
#define SDIOH_NISEN_EISEN_AUTO_CMD12_ERR_SIG_EN_Pos    24
#define SDIOH_NISEN_EISEN_AUTO_CMD12_ERR_SIG_EN_Msk    0x1000000
#define SDIOH_NISEN_EISEN_CUR_LIM_ERR_SIGN_EN_Pos    23
#define SDIOH_NISEN_EISEN_CUR_LIM_ERR_SIGN_EN_Msk    0x800000
#define SDIOH_NISEN_EISEN_DATA_END_BIT_ERR_SIG_EN_Pos    22
#define SDIOH_NISEN_EISEN_DATA_END_BIT_ERR_SIG_EN_Msk    0x400000
#define SDIOH_NISEN_EISEN_DATA_CRC_ERR_SIG_EN_Pos    21
#define SDIOH_NISEN_EISEN_DATA_CRC_ERR_SIG_EN_Msk    0x200000
#define SDIOH_NISEN_EISEN_DATA_TIMEOUT_ERR_SIG_EN_Pos    20
#define SDIOH_NISEN_EISEN_DATA_TIMEOUT_ERR_SIG_EN_Msk    0x100000
#define SDIOH_NISEN_EISEN_CMD_IDX_ERR_SIG_EN_Pos    19
#define SDIOH_NISEN_EISEN_CMD_IDX_ERR_SIG_EN_Msk    0x80000
#define SDIOH_NISEN_EISEN_CMD_END_BIT_ERR_SIG_EN_Pos    18
#define SDIOH_NISEN_EISEN_CMD_END_BIT_ERR_SIG_EN_Msk    0x40000
#define SDIOH_NISEN_EISEN_CMD_CRC_ERR_SIG_EN_Pos    17
#define SDIOH_NISEN_EISEN_CMD_CRC_ERR_SIG_EN_Msk    0x20000
#define SDIOH_NISEN_EISEN_CMD_TIMEOUT_ERR_SIG_EN_Pos    16
#define SDIOH_NISEN_EISEN_CMD_TIMEOUT_ERR_SIG_EN_Msk    0x10000
#define SDIOH_NISEN_EISEN_RE_TUNING_SIG_EN_Pos      12
#define SDIOH_NISEN_EISEN_RE_TUNING_SIG_EN_Msk      0x1000
#define SDIOH_NISEN_EISEN_INT_C_SIG_EN_Pos          11
#define SDIOH_NISEN_EISEN_INT_C_SIG_EN_Msk          0x800
#define SDIOH_NISEN_EISEN_INT_B_SIG_EN_Pos          10
#define SDIOH_NISEN_EISEN_INT_B_SIG_EN_Msk          0x400
#define SDIOH_NISEN_EISEN_INT_A_SIG_EN_Pos          9
#define SDIOH_NISEN_EISEN_INT_A_SIG_EN_Msk          0x200
#define SDIOH_NISEN_EISEN_CARD_INT_SIG_EN_Pos       8
#define SDIOH_NISEN_EISEN_CARD_INT_SIG_EN_Msk       0x100
#define SDIOH_NISEN_EISEN_CARD_REMOVE_SIG_EN_Pos    7
#define SDIOH_NISEN_EISEN_CARD_REMOVE_SIG_EN_Msk    0x80
#define SDIOH_NISEN_EISEN_CARD_INSERT_SIG_EN_Pos    6
#define SDIOH_NISEN_EISEN_CARD_INSERT_SIG_EN_Msk    0x40
#define SDIOH_NISEN_EISEN_BUF_R_RDY_SIG_EN_Pos      5
#define SDIOH_NISEN_EISEN_BUF_R_RDY_SIG_EN_Msk      0x20
#define SDIOH_NISEN_EISEN_BUF_W_RDY_SIG_EN_Pos      4
#define SDIOH_NISEN_EISEN_BUF_W_RDY_SIG_EN_Msk      0x10
#define SDIOH_NISEN_EISEN_DMA_INTERRUPT_SIG_EN_Pos    3
#define SDIOH_NISEN_EISEN_DMA_INTERRUPT_SIG_EN_Msk    0x8
#define SDIOH_NISEN_EISEN_BLK_GAP_EVT_SIG_EN_Pos    2
#define SDIOH_NISEN_EISEN_BLK_GAP_EVT_SIG_EN_Msk    0x4
#define SDIOH_NISEN_EISEN_TRAN_COMPLETE_SIG_EN_Pos    1
#define SDIOH_NISEN_EISEN_TRAN_COMPLETE_SIG_EN_Msk    0x2
#define SDIOH_NISEN_EISEN_CMD_COMPLETE_SIG_EN_Pos    0
#define SDIOH_NISEN_EISEN_CMD_COMPLETE_SIG_EN_Msk    0x1

#define SDIOH_AC12ES_HC2_OFFSET                     0x03C
#define SDIOH_AC12ES_HC2_PRESENT_VAL_EN_Pos         31
#define SDIOH_AC12ES_HC2_PRESENT_VAL_EN_Msk         0x80000000
#define SDIOH_AC12ES_HC2_ASYN_INT_EN_Pos            30
#define SDIOH_AC12ES_HC2_ASYN_INT_EN_Msk            0x40000000
#define SDIOH_AC12ES_HC2_SAMPLE_CLK_SEL_Pos         23
#define SDIOH_AC12ES_HC2_SAMPLE_CLK_SEL_Msk         0x800000
#define SDIOH_AC12ES_HC2_EXECUTE_TUNING_Pos         22
#define SDIOH_AC12ES_HC2_EXECUTE_TUNING_Msk         0x400000
#define SDIOH_AC12ES_HC2_DRIVER_STR_SEL_Pos         20
#define SDIOH_AC12ES_HC2_DRIVER_STR_SEL_Msk         0x300000
#define SDIOH_AC12ES_HC2_V18_SIG_EN_Pos             19
#define SDIOH_AC12ES_HC2_V18_SIG_EN_Msk             0x80000
#define SDIOH_AC12ES_HC2_UHS_MODE_SEL_Pos           16
#define SDIOH_AC12ES_HC2_UHS_MODE_SEL_Msk           0x70000
#define SDIOH_AC12ES_HC2_CMD_NO_EX_BY_CMD12_R_Pos    7
#define SDIOH_AC12ES_HC2_CMD_NO_EX_BY_CMD12_R_Msk    0x80
#define SDIOH_AC12ES_HC2_AUTO_CMD_IDX_ERR_R_Pos     4
#define SDIOH_AC12ES_HC2_AUTO_CMD_IDX_ERR_R_Msk     0x10
#define SDIOH_AC12ES_HC2_AUTO_CMD_END_BIT_ERR_R_Pos    3
#define SDIOH_AC12ES_HC2_AUTO_CMD_END_BIT_ERR_R_Msk    0x8
#define SDIOH_AC12ES_HC2_AUTO_CMD_CRC_ERR_R_Pos     2
#define SDIOH_AC12ES_HC2_AUTO_CMD_CRC_ERR_R_Msk     0x4
#define SDIOH_AC12ES_HC2_AUTO_CMD_TIMEOUT_ERR_R_Pos    1
#define SDIOH_AC12ES_HC2_AUTO_CMD_TIMEOUT_ERR_R_Msk    0x2
#define SDIOH_AC12ES_HC2_AUTO_CMD12_NO_EX_R_Pos     0
#define SDIOH_AC12ES_HC2_AUTO_CMD12_NO_EX_R_Msk     0x1

#define SDIOH_CAP0_OFFSET                           0x040
#define SDIOH_CAP0_SLOT_TYPE_Pos                    30
#define SDIOH_CAP0_SLOT_TYPE_Msk                    0xc0000000
#define SDIOH_CAP0_ASYNC_INT_SUPPORT_Pos            29
#define SDIOH_CAP0_ASYNC_INT_SUPPORT_Msk            0x20000000
#define SDIOH_CAP0_BUS_64_SUPPORT_Pos               28
#define SDIOH_CAP0_BUS_64_SUPPORT_Msk               0x10000000
#define SDIOH_CAP0_VOLTAGE_1_8_SUPPORT_Pos          26
#define SDIOH_CAP0_VOLTAGE_1_8_SUPPORT_Msk          0x4000000
#define SDIOH_CAP0_VOLTAGE_3_0_SUPPORT_Pos          25
#define SDIOH_CAP0_VOLTAGE_3_0_SUPPORT_Msk          0x2000000
#define SDIOH_CAP0_VOLTAGE_3_3_SUPPORT_Pos          24
#define SDIOH_CAP0_VOLTAGE_3_3_SUPPORT_Msk          0x1000000
#define SDIOH_CAP0_SUSPEND_RESUME_SUPPORT_Pos       23
#define SDIOH_CAP0_SUSPEND_RESUME_SUPPORT_Msk       0x800000
#define SDIOH_CAP0_SDMA_SUPPORT_Pos                 22
#define SDIOH_CAP0_SDMA_SUPPORT_Msk                 0x400000
#define SDIOH_CAP0_HI_SPEED_SUPPORT_Pos             21
#define SDIOH_CAP0_HI_SPEED_SUPPORT_Msk             0x200000
#define SDIOH_CAP0_ADMA1_SUPOORT_Pos                20
#define SDIOH_CAP0_ADMA1_SUPOORT_Msk                0x100000
#define SDIOH_CAP0_ADMA2_SUPPORT_Pos                19
#define SDIOH_CAP0_ADMA2_SUPPORT_Msk                0x80000
#define SDIOH_CAP0_BIT_SUPPORT_8_Pos                18
#define SDIOH_CAP0_BIT_SUPPORT_8_Msk                0x40000
#define SDIOH_CAP0_MAX_BLK_LEN_Pos                  16
#define SDIOH_CAP0_MAX_BLK_LEN_Msk                  0x30000
#define SDIOH_CAP0_BASE_CLK_FOR_SD_CLK_Pos          8
#define SDIOH_CAP0_BASE_CLK_FOR_SD_CLK_Msk          0xff00
#define SDIOH_CAP0_TIMEOUT_CLK_UNIT_Pos             7
#define SDIOH_CAP0_TIMEOUT_CLK_UNIT_Msk             0x80
#define SDIOH_CAP0_TIMEOUT_CLK_FREQ_Pos             0
#define SDIOH_CAP0_TIMEOUT_CLK_FREQ_Msk             0x3f

#define SDIOH_CAP1_OFFSET                           0x044
#define SDIOH_CAP1_CLK_MULTIPLIER_Pos               16
#define SDIOH_CAP1_CLK_MULTIPLIER_Msk               0xff0000
#define SDIOH_CAP1_RE_TUNING_MODE_Pos               14
#define SDIOH_CAP1_RE_TUNING_MODE_Msk               0xc000
#define SDIOH_CAP1_TUNING_SDR50_Pos                 13
#define SDIOH_CAP1_TUNING_SDR50_Msk                 0x2000
#define SDIOH_CAP1_TIMER_CNT_FOR_RE_TUNING_Pos      8
#define SDIOH_CAP1_TIMER_CNT_FOR_RE_TUNING_Msk      0xf00
#define SDIOH_CAP1_DRIVER_D_SUPPORT_Pos             6
#define SDIOH_CAP1_DRIVER_D_SUPPORT_Msk             0x40
#define SDIOH_CAP1_DRIVER_C_SUPPORT_Pos             5
#define SDIOH_CAP1_DRIVER_C_SUPPORT_Msk             0x20
#define SDIOH_CAP1_DRIVER_A_SUPPORT_Pos             4
#define SDIOH_CAP1_DRIVER_A_SUPPORT_Msk             0x10
#define SDIOH_CAP1_DDR50_SUPPORT_Pos                2
#define SDIOH_CAP1_DDR50_SUPPORT_Msk                0x4
#define SDIOH_CAP1_SDR104_SUPPORT_Pos               1
#define SDIOH_CAP1_SDR104_SUPPORT_Msk               0x2
#define SDIOH_CAP1_SDR50_SUPPORT_Pos                0
#define SDIOH_CAP1_SDR50_SUPPORT_Msk                0x1

#define SDIOH_MCC0_OFFSET                           0x048
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_1_8_Pos          16
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_1_8_Msk          0xff0000
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_3_0_Pos          8
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_3_0_Msk          0xff00
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_3_3_Pos          0
#define SDIOH_MCC0_MAX_CUR_FOR_VLG_3_3_Msk          0xff

#define SDIOH_MCC1_OFFSET                           0x04C

#define SDIOH_FACERR_FERR_OFFSET                    0x050
#define SDIOH_FACERR_FERR_F_AHB_RESP_ERR_Pos        28
#define SDIOH_FACERR_FERR_F_AHB_RESP_ERR_Msk        0x10000000
#define SDIOH_FACERR_FERR_F_ADMA_ERR_Pos            25
#define SDIOH_FACERR_FERR_F_ADMA_ERR_Msk            0x2000000
#define SDIOH_FACERR_FERR_F_AUTO_CMD_ERR_Pos        24
#define SDIOH_FACERR_FERR_F_AUTO_CMD_ERR_Msk        0x1000000
#define SDIOH_FACERR_FERR_F_CUR_LIM_ERR_Pos         23
#define SDIOH_FACERR_FERR_F_CUR_LIM_ERR_Msk         0x800000
#define SDIOH_FACERR_FERR_F_DATA_END_BIT_ERR_Pos    22
#define SDIOH_FACERR_FERR_F_DATA_END_BIT_ERR_Msk    0x400000
#define SDIOH_FACERR_FERR_F_DATA_CRC_ERR_Pos        21
#define SDIOH_FACERR_FERR_F_DATA_CRC_ERR_Msk        0x200000
#define SDIOH_FACERR_FERR_F_DATA_TIMEOUT_ERR_Pos    20
#define SDIOH_FACERR_FERR_F_DATA_TIMEOUT_ERR_Msk    0x100000
#define SDIOH_FACERR_FERR_F_CMD_IDX_ERR_Pos         19
#define SDIOH_FACERR_FERR_F_CMD_IDX_ERR_Msk         0x80000
#define SDIOH_FACERR_FERR_F_CMD_END_BIT_ERR_Pos     18
#define SDIOH_FACERR_FERR_F_CMD_END_BIT_ERR_Msk     0x40000
#define SDIOH_FACERR_FERR_F_CMD_CRC_ERR_Pos         17
#define SDIOH_FACERR_FERR_F_CMD_CRC_ERR_Msk         0x20000
#define SDIOH_FACERR_FERR_F_CMD_TIMEOUT_ERR_Pos     16
#define SDIOH_FACERR_FERR_F_CMD_TIMEOUT_ERR_Msk     0x10000
#define SDIOH_FACERR_FERR_F_AUTO_CMD_NO_EX_BY_CMD12_Pos    7
#define SDIOH_FACERR_FERR_F_AUTO_CMD_NO_EX_BY_CMD12_Msk    0x80
#define SDIOH_FACERR_FERR_F_AUTO_CMD_IDX_ERR_Pos    4
#define SDIOH_FACERR_FERR_F_AUTO_CMD_IDX_ERR_Msk    0x10
#define SDIOH_FACERR_FERR_F_AUTO_CMD_END_BIT_ERR_Pos    3
#define SDIOH_FACERR_FERR_F_AUTO_CMD_END_BIT_ERR_Msk    0x8
#define SDIOH_FACERR_FERR_F_AUTO_CMD_CRC_ERR_Pos    2
#define SDIOH_FACERR_FERR_F_AUTO_CMD_CRC_ERR_Msk    0x4
#define SDIOH_FACERR_FERR_F_AUTO_CMD_TIMEOUT_ERR_Pos    1
#define SDIOH_FACERR_FERR_F_AUTO_CMD_TIMEOUT_ERR_Msk    0x2
#define SDIOH_FACERR_FERR_F_AUTO_CMD12_NO_EX_Pos    0
#define SDIOH_FACERR_FERR_F_AUTO_CMD12_NO_EX_Msk    0x1

#define SDIOH_AESR_OFFSET                           0x054
#define SDIOH_AESR_ADMA_LEN_ERR_Pos                 2
#define SDIOH_AESR_ADMA_LEN_ERR_Msk                 0x4
#define SDIOH_AESR_ADMA_ERR_ST_R_Pos                0
#define SDIOH_AESR_ADMA_ERR_ST_R_Msk                0x3

#define SDIOH_ALSAR_OFFSET                          0x058
#define SDIOH_ALSAR_ADMA_LO_ADDR_R_Pos              0
#define SDIOH_ALSAR_ADMA_LO_ADDR_R_Msk              0xffffffff

#define SDIOH_AHSAR_OFFSET                          0x05C
#define SDIOH_AHSAR_ADMA_HI_ADDR_R_Pos              0
#define SDIOH_AHSAR_ADMA_HI_ADDR_R_Msk              0xffffffff

#define SDIOH_PV0_OFFSET                            0x060
#define SDIOH_PV0_DRIVER_STR_SEL_Pos                14
#define SDIOH_PV0_DRIVER_STR_SEL_Msk                0xc000
#define SDIOH_PV0_CLK_GEN_SEL_Pos                   10
#define SDIOH_PV0_CLK_GEN_SEL_Msk                   0x400
#define SDIOH_PV0_SDCLK_FREQ_SEL_Pos                0
#define SDIOH_PV0_SDCLK_FREQ_SEL_Msk                0x3ff

#define SDIOH_PV1_OFFSET                            0x064
#define SDIOH_PV1_DRIVER_STR_SEL_Pos                14
#define SDIOH_PV1_DRIVER_STR_SEL_Msk                0xc000
#define SDIOH_PV1_CLK_GEN_SEL_Pos                   10
#define SDIOH_PV1_CLK_GEN_SEL_Msk                   0x400
#define SDIOH_PV1_SDCLK_FREQ_SEL_Pos                0
#define SDIOH_PV1_SDCLK_FREQ_SEL_Msk                0x3ff

#define SDIOH_PV2_OFFSET                            0x068
#define SDIOH_PV2_DRIVER_STR_SEL_Pos                14
#define SDIOH_PV2_DRIVER_STR_SEL_Msk                0xc000
#define SDIOH_PV2_CLK_GEN_SEL_Pos                   10
#define SDIOH_PV2_CLK_GEN_SEL_Msk                   0x400
#define SDIOH_PV2_SDCLK_FREQ_SEL_Pos                0
#define SDIOH_PV2_SDCLK_FREQ_SEL_Msk                0x3ff

#define SDIOH_PV3_OFFSET                            0x06C
#define SDIOH_PV3_DRIVER_STR_SEL_Pos                14
#define SDIOH_PV3_DRIVER_STR_SEL_Msk                0xc000
#define SDIOH_PV3_CLK_GEN_SEL_Pos                   10
#define SDIOH_PV3_CLK_GEN_SEL_Msk                   0x400
#define SDIOH_PV3_SDCLK_FREQ_SEL_Pos                0
#define SDIOH_PV3_SDCLK_FREQ_SEL_Msk                0x3ff

#define SDIOH_HCVR_OFFSET                           0x0FC
#define SDIOH_HCVR_VENDOR_VER_NUM_Pos               24
#define SDIOH_HCVR_VENDOR_VER_NUM_Msk               0xff000000
#define SDIOH_HCVR_SPEC_VER_NUM_Pos                 16
#define SDIOH_HCVR_SPEC_VER_NUM_Msk                 0xff0000

#define SDIOH_VR0_OFFSET                            0x100
#define SDIOH_VR0_NCRC_Pos                          24
#define SDIOH_VR0_NCRC_Msk                          0xf000000
#define SDIOH_VR0_INT_EDGE_SEL_Pos                  16
#define SDIOH_VR0_INT_EDGE_SEL_Msk                  0x10000
#define SDIOH_VR0_P_LAT_OFF_Pos                     8
#define SDIOH_VR0_P_LAT_OFF_Msk                     0x3f00
#define SDIOH_VR0_P_LAT_EN_Pos                      0
#define SDIOH_VR0_P_LAT_EN_Msk                      0x1

#define SDIOH_VR1_OFFSET                            0x104
#define SDIOH_VR1_CMD_CONFLICT_EN_Pos               24
#define SDIOH_VR1_CMD_CONFLICT_EN_Msk               0x1000000
#define SDIOH_VR1_NSB_Pos                           16
#define SDIOH_VR1_NSB_Msk                           0x70000
#define SDIOH_VR1_NCR_Pos                           8
#define SDIOH_VR1_NCR_Msk                           0xf00
#define SDIOH_VR1_LO_SD_RSTN_Pos                    3
#define SDIOH_VR1_LO_SD_RSTN_Msk                    0x8
#define SDIOH_VR1_MMC_BOOT_ACK_EN_Pos               2
#define SDIOH_VR1_MMC_BOOT_ACK_EN_Msk               0x4
#define SDIOH_VR1_MMC_BOOT_Pos                      0
#define SDIOH_VR1_MMC_BOOT_Msk                      0x3

#define SDIOH_VR2_OFFSET                            0x108
#define SDIOH_VR2_CLK_CTRL_SW_RST_Pos               0
#define SDIOH_VR2_CLK_CTRL_SW_RST_Msk               0x1

#define SDIOH_VR3_OFFSET                            0x10C
#define SDIOH_VR3_SD_DELAY_SEL_BOUND_Pos            24
#define SDIOH_VR3_SD_DELAY_SEL_BOUND_Msk            0x1f000000
#define SDIOH_VR3_SD_DELAY_VAL_Pos                  16
#define SDIOH_VR3_SD_DELAY_VAL_Msk                  0x1f0000
#define SDIOH_VR3_CRC16_ERROR_THRES_Pos             8
#define SDIOH_VR3_CRC16_ERROR_THRES_Msk             0x1f00
#define SDIOH_VR3_TUNING_SUCCESS_THRES_Pos          0
#define SDIOH_VR3_TUNING_SUCCESS_THRES_Msk          0x1f

#define SDIOH_VR4_OFFSET                            0x110
#define SDIOH_VR4_TUNING_RECORD_Pos                 0
#define SDIOH_VR4_TUNING_RECORD_Msk                 0xffffffff

#define SDIOH_VR5_OFFSET                            0x114
#define SDIOH_VR5_DB_TIMEOUT_Pos                    0
#define SDIOH_VR5_DB_TIMEOUT_Msk                    0xf

#define SDIOH_VR6_OFFSET                            0x118
#define SDIOH_VR6_HBURST_INCR_Pos                   0
#define SDIOH_VR6_HBURST_INCR_Msk                   0x1

#define SDIOH_VR7_OFFSET                            0x11C
#define SDIOH_VR7_STOP_SDCLK_BY_USER_Pos            5
#define SDIOH_VR7_STOP_SDCLK_BY_USER_Msk            0x20
#define SDIOH_VR7_STOP_SDCLK_INSERT_UNSTABLE_Pos    4
#define SDIOH_VR7_STOP_SDCLK_INSERT_UNSTABLE_Msk    0x10
#define SDIOH_VR7_STOP_SDCLK_WAIT_BUF_AVA_RD_Pos    3
#define SDIOH_VR7_STOP_SDCLK_WAIT_BUF_AVA_RD_Msk    0x8
#define SDIOH_VR7_STOP_SDCLK_WR_FIFO_EMPTY_Pos      2
#define SDIOH_VR7_STOP_SDCLK_WR_FIFO_EMPTY_Msk      0x4
#define SDIOH_VR7_STOP_SDCLLK_RD_FIFO_AFULL_Pos     1
#define SDIOH_VR7_STOP_SDCLLK_RD_FIFO_AFULL_Msk     0x2
#define SDIOH_VR7_AHB_RESP_ERR_STS_Pos              0
#define SDIOH_VR7_AHB_RESP_ERR_STS_Msk              0x1

#define SDIOH_VR8_OFFSET                            0x120
#define SDIOH_VR8_STOP_SDCLLK_BY_USER_EN_Pos        5
#define SDIOH_VR8_STOP_SDCLLK_BY_USER_EN_Msk        0x20
#define SDIOH_VR8_STOP_SDCLK_INSERT_UNSTABLE_EN_Pos    4
#define SDIOH_VR8_STOP_SDCLK_INSERT_UNSTABLE_EN_Msk    0x10
#define SDIOH_VR8_STOP_SDCLK_WAIT_BUF_AVA_RD_EN_Pos    3
#define SDIOH_VR8_STOP_SDCLK_WAIT_BUF_AVA_RD_EN_Msk    0x8
#define SDIOH_VR8_STOP_SDCLK_WR_FIFO_EMPTY_EN_Pos    2
#define SDIOH_VR8_STOP_SDCLK_WR_FIFO_EMPTY_EN_Msk    0x4
#define SDIOH_VR8_STOP_SDCLK_RD_FIFO_AFULL_EN_Pos    1
#define SDIOH_VR8_STOP_SDCLK_RD_FIFO_AFULL_EN_Msk    0x2
#define SDIOH_VR8_AHB_RESP_ERR_STS_EN_Pos           0
#define SDIOH_VR8_AHB_RESP_ERR_STS_EN_Msk           0x1

#define SDIOH_VR9_OFFSET                            0x124
#define SDIOH_VR9_STOP_SDCLK_BY_USER_SIG_EN_Pos     5
#define SDIOH_VR9_STOP_SDCLK_BY_USER_SIG_EN_Msk     0x20
#define SDIOH_VR9_STOP_SDCLK_INSERT_UNSTABLE_SIG_EN_Pos    4
#define SDIOH_VR9_STOP_SDCLK_INSERT_UNSTABLE_SIG_EN_Msk    0x10
#define SDIOH_VR9_STOP_SDCLK_WAIT_BUF_AVA_RD_SIG_EN_Pos    3
#define SDIOH_VR9_STOP_SDCLK_WAIT_BUF_AVA_RD_SIG_EN_Msk    0x8
#define SDIOH_VR9_STOP_SDCLK_WR_FIFO_EMPTY_SIG_EN_Pos    2
#define SDIOH_VR9_STOP_SDCLK_WR_FIFO_EMPTY_SIG_EN_Msk    0x4
#define SDIOH_VR9_STOP_SDCLK_RD_FIFO_AFULL_SIG_EN_Pos    1
#define SDIOH_VR9_STOP_SDCLK_RD_FIFO_AFULL_SIG_EN_Msk    0x2
#define SDIOH_VR9_AHB_RESP_ERR_SIG_EN_Pos           0
#define SDIOH_VR9_AHB_RESP_ERR_SIG_EN_Msk           0x1

#define SDIOH_DHER_OFFSET                           0x128
#define SDIOH_DHER_DMA_HSK_EN_Pos                   0
#define SDIOH_DHER_DMA_HSK_EN_Msk                   0x1

#define SDIOH_HWA_OFFSET                            0x178
#define SDIOH_HWA_HW_CONFIG_Pos                     0
#define SDIOH_HWA_HW_CONFIG_Msk                     0x1ff

#define SDIOH_IPRR_OFFSET                           0x17C
#define SDIOH_IPRR_REV_NUM_Pos                      0
#define SDIOH_IPRR_REV_NUM_Msk                      0xffffffff

#define SDIOH_CMCR_OFFSET                           0x180
#define SDIOH_CMCR_SWAP_HL_Pos                      10
#define SDIOH_CMCR_SWAP_HL_Msk                      0x400
#define SDIOH_CMCR_CH_ENDIAN_Pos                    9
#define SDIOH_CMCR_CH_ENDIAN_Msk                    0x200
#define SDIOH_CMCR_SEC_ACCESS_EN_Pos                8
#define SDIOH_CMCR_SEC_ACCESS_EN_Msk                0x100
#define SDIOH_CMCR_AUTO_C2_DCBC_EN_Pos              7
#define SDIOH_CMCR_AUTO_C2_DCBC_EN_Msk              0x80
#define SDIOH_CMCR_AUTO_C2_ECBC_EN_Pos              6
#define SDIOH_CMCR_AUTO_C2_ECBC_EN_Msk              0x40
#define SDIOH_CMCR_RNGC2_G_EN_Pos                   5
#define SDIOH_CMCR_RNGC2_G_EN_Msk                   0x20
#define SDIOH_CMCR_C2_DCBC_EN_Pos                   4
#define SDIOH_CMCR_C2_DCBC_EN_Msk                   0x10
#define SDIOH_CMCR_C2_D_EN_Pos                      3
#define SDIOH_CMCR_C2_D_EN_Msk                      0x8
#define SDIOH_CMCR_C2_ECBC_EN_Pos                   2
#define SDIOH_CMCR_C2_ECBC_EN_Msk                   0x4
#define SDIOH_CMCR_C2_E_EN_Pos                      1
#define SDIOH_CMCR_C2_E_EN_Msk                      0x2
#define SDIOH_CMCR_C2_G_EN_Pos                      0
#define SDIOH_CMCR_C2_G_EN_Msk                      0x1

#define SDIOH_CMSR_OFFSET                           0x184
#define SDIOH_CMSR_CP_RDY_Pos                       0
#define SDIOH_CMSR_CP_RDY_Msk                       0x1

#define SDIOH_CMSE_OFFSET                           0x188
#define SDIOH_CMSE_CP_RDY_SIG_EN_Pos                0
#define SDIOH_CMSE_CP_RDY_SIG_EN_Msk                0x1

#define SDIOH_LWID_OFFSET                           0x18C
#define SDIOH_LWID_R_R_Pos                          0
#define SDIOH_LWID_R_R_Msk                          0xffffffff

#define SDIOH_HWID_OFFSET                           0x190
#define SDIOH_HWID_L_R_Pos                          0
#define SDIOH_HWID_L_R_Msk                          0xffffffff

#define SDIOH_LWIK_OFFSET                           0x194
#define SDIOH_LWIK_KEY_B_R_Pos                      0
#define SDIOH_LWIK_KEY_B_R_Msk                      0xffffffff

#define SDIOH_HWIK_OFFSET                           0x198
#define SDIOH_HWIK_KEY_A_R_Pos                      0
#define SDIOH_HWIK_KEY_A_R_Msk                      0xffffff

#define SDIOH_LWOD_OFFSET                           0x19C
#define SDIOH_LWOD_CP_OUT_LOW_R_Pos                 0
#define SDIOH_LWOD_CP_OUT_LOW_R_Msk                 0xffffffff

#define SDIOH_HWOD_OFFSET                           0x1A0
#define SDIOH_HWOD_CP_OUT_HI_R_Pos                  0
#define SDIOH_HWOD_CP_OUT_HI_R_Msk                  0xffffffff

#define SDIOH_SCTDP_OFFSET                          0x1A4
#define SDIOH_SCTDP_SEC_DATA_PORT_Pos               0
#define SDIOH_SCTDP_SEC_DATA_PORT_Msk               0xff

struct SDIOH_REG_SDMADR_BITS
{
    volatile uint32_t SDMA_SYS_ADDR_R               : 32; // bit 0~31
};

union SDIOH_REG_SDMADR {
    volatile uint32_t                               all;
    struct SDIOH_REG_SDMADR_BITS                    bit;
};

struct SDIOH_REG_BSR_BCR_BITS
{
    volatile uint32_t BLK_SIZE_R                    : 12; // bit 0~11
    volatile uint32_t SDMA_BUF_BOUND                : 3; // bit 12~14
    volatile uint32_t RESV_15_15                    : 1; // bit 15~15
    volatile uint32_t BLK_CNT_R                     : 16; // bit 16~31
};

union SDIOH_REG_BSR_BCR {
    volatile uint32_t                               all;
    struct SDIOH_REG_BSR_BCR_BITS                   bit;
};

struct SDIOH_REG_ARG1_BITS
{
    volatile uint32_t ARG1_R                        : 32; // bit 0~31
};

union SDIOH_REG_ARG1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_ARG1_BITS                      bit;
};

struct SDIOH_REG_TMR_CR_BITS
{
    volatile uint32_t DMA_EN                        : 1; // bit 0~0
    volatile uint32_t BLK_CNT_EN                    : 1; // bit 1~1
    volatile uint32_t AUTO_CMD_EN                   : 2; // bit 2~3
    volatile uint32_t TRAN_DIR_SEL                  : 1; // bit 4~4
    volatile uint32_t MULTI_BLK_RW                  : 1; // bit 5~5
    volatile uint32_t RESV_6_15                     : 10; // bit 6~15
    volatile uint32_t RSP_TYPE_SEL                  : 2; // bit 16~17
    volatile uint32_t RESV_18_18                    : 1; // bit 18~18
    volatile uint32_t CMD_CRC_CHK_EN                : 1; // bit 19~19
    volatile uint32_t CMD_IDX_CHK_EN                : 1; // bit 20~20
    volatile uint32_t DATA_PRES_SEL                 : 1; // bit 21~21
    volatile uint32_t CMD_TYPE                      : 2; // bit 22~23
    volatile uint32_t CMD_IDX                       : 6; // bit 24~29
    volatile uint32_t RESV_30_31                    : 2; // bit 30~31
};

union SDIOH_REG_TMR_CR {
    volatile uint32_t                               all;
    struct SDIOH_REG_TMR_CR_BITS                    bit;
};

struct SDIOH_REG_RESP0_BITS
{
    volatile uint32_t RSP_R                         : 32; // bit 0~31
};

union SDIOH_REG_RESP0 {
    volatile uint32_t                               all;
    struct SDIOH_REG_RESP0_BITS                     bit;
};

struct SDIOH_REG_RESP1_BITS
{
    volatile uint32_t RSP_R                         : 32; // bit 0~31
};

union SDIOH_REG_RESP1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_RESP1_BITS                     bit;
};

struct SDIOH_REG_RESP2_BITS
{
    volatile uint32_t RSP_R                         : 32; // bit 0~31
};

union SDIOH_REG_RESP2 {
    volatile uint32_t                               all;
    struct SDIOH_REG_RESP2_BITS                     bit;
};

struct SDIOH_REG_RESP3_BITS
{
    volatile uint32_t RSP_R                         : 32; // bit 0~31
};

union SDIOH_REG_RESP3 {
    volatile uint32_t                               all;
    struct SDIOH_REG_RESP3_BITS                     bit;
};

struct SDIOH_REG_BDP_BITS
{
    volatile uint32_t DATA_PORT_R                   : 32; // bit 0~31
};

union SDIOH_REG_BDP {
    volatile uint32_t                               all;
    struct SDIOH_REG_BDP_BITS                       bit;
};

struct SDIOH_REG_PSR_BITS
{
    volatile uint32_t CMD_INHIBIT_C                 : 1; // bit 0~0
    volatile uint32_t CMD_INHIBIT_D                 : 1; // bit 1~1
    volatile uint32_t DATA_LIN_ACT_R                : 1; // bit 2~2
    volatile uint32_t RESV_3_7                      : 5; // bit 3~7
    volatile uint32_t WR_TRAN_ACT_R                 : 1; // bit 8~8
    volatile uint32_t RD_TRAN_ACT_R                 : 1; // bit 9~9
    volatile uint32_t BUF_WEN_R                     : 1; // bit 10~10
    volatile uint32_t BUF_REN_R                     : 1; // bit 11~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t SYS_CARD_INSERT               : 1; // bit 16~16
    volatile uint32_t SYS_CARD_STABLE               : 1; // bit 17~17
    volatile uint32_t CD_PIN_LV                     : 1; // bit 18~18
    volatile uint32_t WR_PROT_LV                    : 1; // bit 19~19
    volatile uint32_t DATA_LIN_LV                   : 4; // bit 20~23
    volatile uint32_t CMD_LIN_LV                    : 1; // bit 24~24
    volatile uint32_t RESV_25_31                    : 7; // bit 25~31
};

union SDIOH_REG_PSR {
    volatile uint32_t                               all;
    struct SDIOH_REG_PSR_BITS                       bit;
};

struct SDIOH_REG_HC1_PCR_BGCR_BITS
{
    volatile uint32_t LED_CTRL                      : 1; // bit 0~0
    volatile uint32_t DATA_WIDTH                    : 1; // bit 1~1
    volatile uint32_t HI_SPEED                      : 1; // bit 2~2
    volatile uint32_t DMA_TYPE                      : 2; // bit 3~4
    volatile uint32_t EXT_DATA_WIDTH                : 1; // bit 5~5
    volatile uint32_t CD_TEST_LV                    : 1; // bit 6~6
    volatile uint32_t CD_SEL                        : 1; // bit 7~7
    volatile uint32_t SD_BUS_POW                    : 1; // bit 8~8
    volatile uint32_t SD_BUS_VOL                    : 3; // bit 9~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t SP_BLK_GAP_REQ                : 1; // bit 16~16
    volatile uint32_t CONT_REQ                      : 1; // bit 17~17
    volatile uint32_t READ_WAIT                     : 1; // bit 18~18
    volatile uint32_t INT_AT_BLK_GAP                : 1; // bit 19~19
    volatile uint32_t RESV_20_31                    : 12; // bit 20~31
};

union SDIOH_REG_HC1_PCR_BGCR {
    volatile uint32_t                               all;
    struct SDIOH_REG_HC1_PCR_BGCR_BITS              bit;
};

struct SDIOH_REG_CCR_TCR_SRR_BITS
{
    volatile uint32_t INTER_CLK_EN                  : 1; // bit 0~0
    volatile uint32_t CLK_STABLE                    : 1; // bit 1~1
    volatile uint32_t SD_CLK_EN                     : 1; // bit 2~2
    volatile uint32_t RESV_3_4                      : 2; // bit 3~4
    volatile uint32_t CLK_GEN_SEL                   : 1; // bit 5~5
    volatile uint32_t UPPER_BIT_SD_CLK_SEL          : 2; // bit 6~7
    volatile uint32_t LOW_BIT_SD_CLK_SEL            : 8; // bit 8~15
    volatile uint32_t DATA_TIMER                    : 4; // bit 16~19
    volatile uint32_t RESV_20_23                    : 4; // bit 20~23
    volatile uint32_t SOFT_RST_ALL                  : 1; // bit 24~24
    volatile uint32_t SOFT_RST_CMD                  : 1; // bit 25~25
    volatile uint32_t SOFT_RST_DAT                  : 1; // bit 26~26
    volatile uint32_t RESV_27_31                    : 5; // bit 27~31
};

union SDIOH_REG_CCR_TCR_SRR {
    volatile uint32_t                               all;
    struct SDIOH_REG_CCR_TCR_SRR_BITS               bit;
};

struct SDIOH_REG_NISR_EISR_BITS
{
    volatile uint32_t CMD_COMPLETE_R                : 1; // bit 0~0
    volatile uint32_t TRAN_COMPLETE_R               : 1; // bit 1~1
    volatile uint32_t BLK_GAP_EVT_R                 : 1; // bit 2~2
    volatile uint32_t DMA_INTERRUPT_R               : 1; // bit 3~3
    volatile uint32_t BUF_W_RDY_R                   : 1; // bit 4~4
    volatile uint32_t BUF_R_RDY_R                   : 1; // bit 5~5
    volatile uint32_t CARD_INSERT_R                 : 1; // bit 6~6
    volatile uint32_t CARD_REMOVE_R                 : 1; // bit 7~7
    volatile uint32_t CARD_INT_R                    : 1; // bit 8~8
    volatile uint32_t INT_A_R                       : 1; // bit 9~9
    volatile uint32_t INT_B_R                       : 1; // bit 10~10
    volatile uint32_t INT_C_R                       : 1; // bit 11~11
    volatile uint32_t RE_TUNING_INT_R               : 1; // bit 12~12
    volatile uint32_t RESV_13_14                    : 2; // bit 13~14
    volatile uint32_t ERR_INTERRUPT_R               : 1; // bit 15~15
    volatile uint32_t CMD_TIMEOUT_ERR_R             : 1; // bit 16~16
    volatile uint32_t CMD_CRC_ERR_R                 : 1; // bit 17~17
    volatile uint32_t CMD_END_BIT_ERR_R             : 1; // bit 18~18
    volatile uint32_t CMD_IDX_ERR_R                 : 1; // bit 19~19
    volatile uint32_t DATA_TIMEOUT_ERR_R            : 1; // bit 20~20
    volatile uint32_t DATA_CRC_ERR_R                : 1; // bit 21~21
    volatile uint32_t DATA_END_BIT_ERR_R            : 1; // bit 22~22
    volatile uint32_t CUR_LIM_ERR_R                 : 1; // bit 23~23
    volatile uint32_t AUTO_CMD12_ERR_R              : 1; // bit 24~24
    volatile uint32_t ADMA_ERR_R                    : 1; // bit 25~25
    volatile uint32_t TUNING_ERR_R                  : 1; // bit 26~26
    volatile uint32_t RESV_27_31                    : 5; // bit 27~31
};

union SDIOH_REG_NISR_EISR {
    volatile uint32_t                               all;
    struct SDIOH_REG_NISR_EISR_BITS                 bit;
};

struct SDIOH_REG_NISER_EISER_BITS
{
    volatile uint32_t CMD_COMPLETE_ST_EN            : 1; // bit 0~0
    volatile uint32_t TRAN_COMPLETE_ST_EN           : 1; // bit 1~1
    volatile uint32_t BLK_GAP_EVT_ST_EN             : 1; // bit 2~2
    volatile uint32_t DMA_INTERRUPT_ST_EN           : 1; // bit 3~3
    volatile uint32_t BUF_W_RDY_ST_EN               : 1; // bit 4~4
    volatile uint32_t BUF_R_RDY_ST_EN               : 1; // bit 5~5
    volatile uint32_t CARD_INSERT_ST_EN             : 1; // bit 6~6
    volatile uint32_t CARD_REMOVE_ST_EN             : 1; // bit 7~7
    volatile uint32_t CARD_INT_ST_EN                : 1; // bit 8~8
    volatile uint32_t INT_A_ST_EN                   : 1; // bit 9~9
    volatile uint32_t INT_B_ST_EN                   : 1; // bit 10~10
    volatile uint32_t INT_C_ST_EN                   : 1; // bit 11~11
    volatile uint32_t RE_TUNING_ST_EN               : 1; // bit 12~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t CMD_TIMEOUT_ERR_ST_EN         : 1; // bit 16~16
    volatile uint32_t CMD_CRC_ERR_ST_EN             : 1; // bit 17~17
    volatile uint32_t CMD_END_BIT_ERR_ST_EN         : 1; // bit 18~18
    volatile uint32_t CMD_IDX_ERR_ST_EM             : 1; // bit 19~19
    volatile uint32_t DATA_TIMEOUT_ERR_ST_EN        : 1; // bit 20~20
    volatile uint32_t DATA_CRC_ERR_ST_EN            : 1; // bit 21~21
    volatile uint32_t DATA_END_BIT_ERR_ST_EN        : 1; // bit 22~22
    volatile uint32_t CUR_LIM_ERR_ST_EN             : 1; // bit 23~23
    volatile uint32_t AUTO_CMD12_ERR_ST_EN          : 1; // bit 24~24
    volatile uint32_t ADMA_ERR_ST_EN                : 1; // bit 25~25
    volatile uint32_t TUNING_ERR_ST_EN              : 1; // bit 26~26
    volatile uint32_t RESV_27_31                    : 5; // bit 27~31
};

union SDIOH_REG_NISER_EISER {
    volatile uint32_t                               all;
    struct SDIOH_REG_NISER_EISER_BITS               bit;
};

struct SDIOH_REG_NISEN_EISEN_BITS
{
    volatile uint32_t CMD_COMPLETE_SIG_EN           : 1; // bit 0~0
    volatile uint32_t TRAN_COMPLETE_SIG_EN          : 1; // bit 1~1
    volatile uint32_t BLK_GAP_EVT_SIG_EN            : 1; // bit 2~2
    volatile uint32_t DMA_INTERRUPT_SIG_EN          : 1; // bit 3~3
    volatile uint32_t BUF_W_RDY_SIG_EN              : 1; // bit 4~4
    volatile uint32_t BUF_R_RDY_SIG_EN              : 1; // bit 5~5
    volatile uint32_t CARD_INSERT_SIG_EN            : 1; // bit 6~6
    volatile uint32_t CARD_REMOVE_SIG_EN            : 1; // bit 7~7
    volatile uint32_t CARD_INT_SIG_EN               : 1; // bit 8~8
    volatile uint32_t INT_A_SIG_EN                  : 1; // bit 9~9
    volatile uint32_t INT_B_SIG_EN                  : 1; // bit 10~10
    volatile uint32_t INT_C_SIG_EN                  : 1; // bit 11~11
    volatile uint32_t RE_TUNING_SIG_EN              : 1; // bit 12~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t CMD_TIMEOUT_ERR_SIG_EN        : 1; // bit 16~16
    volatile uint32_t CMD_CRC_ERR_SIG_EN            : 1; // bit 17~17
    volatile uint32_t CMD_END_BIT_ERR_SIG_EN        : 1; // bit 18~18
    volatile uint32_t CMD_IDX_ERR_SIG_EN            : 1; // bit 19~19
    volatile uint32_t DATA_TIMEOUT_ERR_SIG_EN       : 1; // bit 20~20
    volatile uint32_t DATA_CRC_ERR_SIG_EN           : 1; // bit 21~21
    volatile uint32_t DATA_END_BIT_ERR_SIG_EN       : 1; // bit 22~22
    volatile uint32_t CUR_LIM_ERR_SIGN_EN           : 1; // bit 23~23
    volatile uint32_t AUTO_CMD12_ERR_SIG_EN         : 1; // bit 24~24
    volatile uint32_t ADMA_ERR_SIG_EN               : 1; // bit 25~25
    volatile uint32_t TUNING_ERR_SIGN_EN            : 1; // bit 26~26
    volatile uint32_t RESV_27_31                    : 5; // bit 27~31
};

union SDIOH_REG_NISEN_EISEN {
    volatile uint32_t                               all;
    struct SDIOH_REG_NISEN_EISEN_BITS               bit;
};

struct SDIOH_REG_AC12ES_HC2_BITS
{
    volatile uint32_t AUTO_CMD12_NO_EX_R            : 1; // bit 0~0
    volatile uint32_t AUTO_CMD_TIMEOUT_ERR_R        : 1; // bit 1~1
    volatile uint32_t AUTO_CMD_CRC_ERR_R            : 1; // bit 2~2
    volatile uint32_t AUTO_CMD_END_BIT_ERR_R        : 1; // bit 3~3
    volatile uint32_t AUTO_CMD_IDX_ERR_R            : 1; // bit 4~4
    volatile uint32_t RESV_5_6                      : 2; // bit 5~6
    volatile uint32_t CMD_NO_EX_BY_CMD12_R          : 1; // bit 7~7
    volatile uint32_t RESV_8_15                     : 8; // bit 8~15
    volatile uint32_t UHS_MODE_SEL                  : 3; // bit 16~18
    volatile uint32_t V18_SIG_EN                    : 1; // bit 19~19
    volatile uint32_t DRIVER_STR_SEL                : 2; // bit 20~21
    volatile uint32_t EXECUTE_TUNING                : 1; // bit 22~22
    volatile uint32_t SAMPLE_CLK_SEL                : 1; // bit 23~23
    volatile uint32_t RESV_24_29                    : 6; // bit 24~29
    volatile uint32_t ASYN_INT_EN                   : 1; // bit 30~30
    volatile uint32_t PRESENT_VAL_EN                : 1; // bit 31~31
};

union SDIOH_REG_AC12ES_HC2 {
    volatile uint32_t                               all;
    struct SDIOH_REG_AC12ES_HC2_BITS                bit;
};

struct SDIOH_REG_CAP0_BITS
{
    volatile uint32_t TIMEOUT_CLK_FREQ              : 6; // bit 0~5
    volatile uint32_t RESV_6_6                      : 1; // bit 6~6
    volatile uint32_t TIMEOUT_CLK_UNIT              : 1; // bit 7~7
    volatile uint32_t BASE_CLK_FOR_SD_CLK           : 8; // bit 8~15
    volatile uint32_t MAX_BLK_LEN                   : 2; // bit 16~17
    volatile uint32_t BIT_SUPPORT_8                 : 1; // bit 18~18
    volatile uint32_t ADMA2_SUPPORT                 : 1; // bit 19~19
    volatile uint32_t ADMA1_SUPOORT                 : 1; // bit 20~20
    volatile uint32_t HI_SPEED_SUPPORT              : 1; // bit 21~21
    volatile uint32_t SDMA_SUPPORT                  : 1; // bit 22~22
    volatile uint32_t SUSPEND_RESUME_SUPPORT        : 1; // bit 23~23
    volatile uint32_t VOLTAGE_3_3_SUPPORT           : 1; // bit 24~24
    volatile uint32_t VOLTAGE_3_0_SUPPORT           : 1; // bit 25~25
    volatile uint32_t VOLTAGE_1_8_SUPPORT           : 1; // bit 26~26
    volatile uint32_t RESV_27_27                    : 1; // bit 27~27
    volatile uint32_t BUS_64_SUPPORT                : 1; // bit 28~28
    volatile uint32_t ASYNC_INT_SUPPORT             : 1; // bit 29~29
    volatile uint32_t SLOT_TYPE                     : 2; // bit 30~31
};

union SDIOH_REG_CAP0 {
    volatile uint32_t                               all;
    struct SDIOH_REG_CAP0_BITS                      bit;
};

struct SDIOH_REG_CAP1_BITS
{
    volatile uint32_t SDR50_SUPPORT                 : 1; // bit 0~0
    volatile uint32_t SDR104_SUPPORT                : 1; // bit 1~1
    volatile uint32_t DDR50_SUPPORT                 : 1; // bit 2~2
    volatile uint32_t RESV_3_3                      : 1; // bit 3~3
    volatile uint32_t DRIVER_A_SUPPORT              : 1; // bit 4~4
    volatile uint32_t DRIVER_C_SUPPORT              : 1; // bit 5~5
    volatile uint32_t DRIVER_D_SUPPORT              : 1; // bit 6~6
    volatile uint32_t RESV_7_7                      : 1; // bit 7~7
    volatile uint32_t TIMER_CNT_FOR_RE_TUNING       : 4; // bit 8~11
    volatile uint32_t RESV_12_12                    : 1; // bit 12~12
    volatile uint32_t TUNING_SDR50                  : 1; // bit 13~13
    volatile uint32_t RE_TUNING_MODE                : 2; // bit 14~15
    volatile uint32_t CLK_MULTIPLIER                : 8; // bit 16~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union SDIOH_REG_CAP1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_CAP1_BITS                      bit;
};

struct SDIOH_REG_MCC0_BITS
{
    volatile uint32_t MAX_CUR_FOR_VLG_3_3           : 8; // bit 0~7
    volatile uint32_t MAX_CUR_FOR_VLG_3_0           : 8; // bit 8~15
    volatile uint32_t MAX_CUR_FOR_VLG_1_8           : 8; // bit 16~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union SDIOH_REG_MCC0 {
    volatile uint32_t                               all;
    struct SDIOH_REG_MCC0_BITS                      bit;
};

struct SDIOH_REG_MCC1_BITS
{
    volatile uint32_t RESV_0_31                     : 32; // bit 0~31
};

union SDIOH_REG_MCC1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_MCC1_BITS                      bit;
};

struct SDIOH_REG_FACERR_FERR_BITS
{
    volatile uint32_t F_AUTO_CMD12_NO_EX            : 1; // bit 0~0
    volatile uint32_t F_AUTO_CMD_TIMEOUT_ERR        : 1; // bit 1~1
    volatile uint32_t F_AUTO_CMD_CRC_ERR            : 1; // bit 2~2
    volatile uint32_t F_AUTO_CMD_END_BIT_ERR        : 1; // bit 3~3
    volatile uint32_t F_AUTO_CMD_IDX_ERR            : 1; // bit 4~4
    volatile uint32_t RESV_5_6                      : 2; // bit 5~6
    volatile uint32_t F_AUTO_CMD_NO_EX_BY_CMD12     : 1; // bit 7~7
    volatile uint32_t RESV_8_15                     : 8; // bit 8~15
    volatile uint32_t F_CMD_TIMEOUT_ERR             : 1; // bit 16~16
    volatile uint32_t F_CMD_CRC_ERR                 : 1; // bit 17~17
    volatile uint32_t F_CMD_END_BIT_ERR             : 1; // bit 18~18
    volatile uint32_t F_CMD_IDX_ERR                 : 1; // bit 19~19
    volatile uint32_t F_DATA_TIMEOUT_ERR            : 1; // bit 20~20
    volatile uint32_t F_DATA_CRC_ERR                : 1; // bit 21~21
    volatile uint32_t F_DATA_END_BIT_ERR            : 1; // bit 22~22
    volatile uint32_t F_CUR_LIM_ERR                 : 1; // bit 23~23
    volatile uint32_t F_AUTO_CMD_ERR                : 1; // bit 24~24
    volatile uint32_t F_ADMA_ERR                    : 1; // bit 25~25
    volatile uint32_t RESV_26_27                    : 2; // bit 26~27
    volatile uint32_t F_AHB_RESP_ERR                : 1; // bit 28~28
    volatile uint32_t RESV_29_31                    : 3; // bit 29~31
};

union SDIOH_REG_FACERR_FERR {
    volatile uint32_t                               all;
    struct SDIOH_REG_FACERR_FERR_BITS               bit;
};

struct SDIOH_REG_AESR_BITS
{
    volatile uint32_t ADMA_ERR_ST_R                 : 2; // bit 0~1
    volatile uint32_t ADMA_LEN_ERR                  : 1; // bit 2~2
    volatile uint32_t RESV_3_31                     : 29; // bit 3~31
};

union SDIOH_REG_AESR {
    volatile uint32_t                               all;
    struct SDIOH_REG_AESR_BITS                      bit;
};

struct SDIOH_REG_ALSAR_BITS
{
    volatile uint32_t ADMA_LO_ADDR_R                : 32; // bit 0~31
};

union SDIOH_REG_ALSAR {
    volatile uint32_t                               all;
    struct SDIOH_REG_ALSAR_BITS                     bit;
};

struct SDIOH_REG_AHSAR_BITS
{
    volatile uint32_t ADMA_HI_ADDR_R                : 32; // bit 0~31
};

union SDIOH_REG_AHSAR {
    volatile uint32_t                               all;
    struct SDIOH_REG_AHSAR_BITS                     bit;
};

struct SDIOH_REG_PV0_BITS
{
    volatile uint32_t SDCLK_FREQ_SEL                : 10; // bit 0~9
    volatile uint32_t CLK_GEN_SEL                   : 1; // bit 10~10
    volatile uint32_t RESV_11_13                    : 3; // bit 11~13
    volatile uint32_t DRIVER_STR_SEL                : 2; // bit 14~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union SDIOH_REG_PV0 {
    volatile uint32_t                               all;
    struct SDIOH_REG_PV0_BITS                       bit;
};

struct SDIOH_REG_PV1_BITS
{
    volatile uint32_t SDCLK_FREQ_SEL                : 10; // bit 0~9
    volatile uint32_t CLK_GEN_SEL                   : 1; // bit 10~10
    volatile uint32_t RESV_11_13                    : 3; // bit 11~13
    volatile uint32_t DRIVER_STR_SEL                : 2; // bit 14~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union SDIOH_REG_PV1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_PV1_BITS                       bit;
};

struct SDIOH_REG_PV2_BITS
{
    volatile uint32_t SDCLK_FREQ_SEL                : 10; // bit 0~9
    volatile uint32_t CLK_GEN_SEL                   : 1; // bit 10~10
    volatile uint32_t RESV_11_13                    : 3; // bit 11~13
    volatile uint32_t DRIVER_STR_SEL                : 2; // bit 14~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union SDIOH_REG_PV2 {
    volatile uint32_t                               all;
    struct SDIOH_REG_PV2_BITS                       bit;
};

struct SDIOH_REG_PV3_BITS
{
    volatile uint32_t SDCLK_FREQ_SEL                : 10; // bit 0~9
    volatile uint32_t CLK_GEN_SEL                   : 1; // bit 10~10
    volatile uint32_t RESV_11_13                    : 3; // bit 11~13
    volatile uint32_t DRIVER_STR_SEL                : 2; // bit 14~15
    volatile uint32_t RESV_16_31                    : 16; // bit 16~31
};

union SDIOH_REG_PV3 {
    volatile uint32_t                               all;
    struct SDIOH_REG_PV3_BITS                       bit;
};

struct SDIOH_REG_HCVR_BITS
{
    volatile uint32_t RESV_0_15                     : 16; // bit 0~15
    volatile uint32_t SPEC_VER_NUM                  : 8; // bit 16~23
    volatile uint32_t VENDOR_VER_NUM                : 8; // bit 24~31
};

union SDIOH_REG_HCVR {
    volatile uint32_t                               all;
    struct SDIOH_REG_HCVR_BITS                      bit;
};

struct SDIOH_REG_VR0_BITS
{
    volatile uint32_t P_LAT_EN                      : 1; // bit 0~0
    volatile uint32_t RESV_1_7                      : 7; // bit 1~7
    volatile uint32_t P_LAT_OFF                     : 6; // bit 8~13
    volatile uint32_t RESV_14_15                    : 2; // bit 14~15
    volatile uint32_t INT_EDGE_SEL                  : 1; // bit 16~16
    volatile uint32_t RESV_17_23                    : 7; // bit 17~23
    volatile uint32_t NCRC                          : 4; // bit 24~27
    volatile uint32_t RESV_28_31                    : 4; // bit 28~31
};

union SDIOH_REG_VR0 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR0_BITS                       bit;
};

struct SDIOH_REG_VR1_BITS
{
    volatile uint32_t MMC_BOOT                      : 2; // bit 0~1
    volatile uint32_t MMC_BOOT_ACK_EN               : 1; // bit 2~2
    volatile uint32_t LO_SD_RSTN                    : 1; // bit 3~3
    volatile uint32_t RESV_4_7                      : 4; // bit 4~7
    volatile uint32_t NCR                           : 4; // bit 8~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t NSB                           : 3; // bit 16~18
    volatile uint32_t RESV_19_23                    : 5; // bit 19~23
    volatile uint32_t CMD_CONFLICT_EN               : 1; // bit 24~24
    volatile uint32_t RESV_25_31                    : 7; // bit 25~31
};

union SDIOH_REG_VR1 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR1_BITS                       bit;
};

struct SDIOH_REG_VR2_BITS
{
    volatile uint32_t CLK_CTRL_SW_RST               : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union SDIOH_REG_VR2 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR2_BITS                       bit;
};

struct SDIOH_REG_VR3_BITS
{
    volatile uint32_t TUNING_SUCCESS_THRES          : 5; // bit 0~4
    volatile uint32_t RESV_5_7                      : 3; // bit 5~7
    volatile uint32_t CRC16_ERROR_THRES             : 5; // bit 8~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t SD_DELAY_VAL                  : 5; // bit 16~20
    volatile uint32_t RESV_21_23                    : 3; // bit 21~23
    volatile uint32_t SD_DELAY_SEL_BOUND            : 5; // bit 24~28
    volatile uint32_t RESV_29_31                    : 3; // bit 29~31
};

union SDIOH_REG_VR3 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR3_BITS                       bit;
};

struct SDIOH_REG_VR4_BITS
{
    volatile uint32_t TUNING_RECORD                 : 32; // bit 0~31
};

union SDIOH_REG_VR4 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR4_BITS                       bit;
};

struct SDIOH_REG_VR5_BITS
{
    volatile uint32_t DB_TIMEOUT                    : 4; // bit 0~3
    volatile uint32_t RESV_4_31                     : 28; // bit 4~31
};

union SDIOH_REG_VR5 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR5_BITS                       bit;
};

struct SDIOH_REG_VR6_BITS
{
    volatile uint32_t HBURST_INCR                   : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union SDIOH_REG_VR6 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR6_BITS                       bit;
};

struct SDIOH_REG_VR7_BITS
{
    volatile uint32_t AHB_RESP_ERR_STS              : 1; // bit 0~0
    volatile uint32_t STOP_SDCLLK_RD_FIFO_AFULL     : 1; // bit 1~1
    volatile uint32_t STOP_SDCLK_WR_FIFO_EMPTY      : 1; // bit 2~2
    volatile uint32_t STOP_SDCLK_WAIT_BUF_AVA_RD    : 1; // bit 3~3
    volatile uint32_t STOP_SDCLK_INSERT_UNSTABLE    : 1; // bit 4~4
    volatile uint32_t STOP_SDCLK_BY_USER            : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union SDIOH_REG_VR7 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR7_BITS                       bit;
};

struct SDIOH_REG_VR8_BITS
{
    volatile uint32_t AHB_RESP_ERR_STS_EN           : 1; // bit 0~0
    volatile uint32_t STOP_SDCLK_RD_FIFO_AFULL_EN    : 1; // bit 1~1
    volatile uint32_t STOP_SDCLK_WR_FIFO_EMPTY_EN    : 1; // bit 2~2
    volatile uint32_t STOP_SDCLK_WAIT_BUF_AVA_RD_EN    : 1; // bit 3~3
    volatile uint32_t STOP_SDCLK_INSERT_UNSTABLE_EN    : 1; // bit 4~4
    volatile uint32_t STOP_SDCLLK_BY_USER_EN        : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union SDIOH_REG_VR8 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR8_BITS                       bit;
};

struct SDIOH_REG_VR9_BITS
{
    volatile uint32_t AHB_RESP_ERR_SIG_EN           : 1; // bit 0~0
    volatile uint32_t STOP_SDCLK_RD_FIFO_AFULL_SIG_EN    : 1; // bit 1~1
    volatile uint32_t STOP_SDCLK_WR_FIFO_EMPTY_SIG_EN    : 1; // bit 2~2
    volatile uint32_t STOP_SDCLK_WAIT_BUF_AVA_RD_SIG_EN    : 1; // bit 3~3
    volatile uint32_t STOP_SDCLK_INSERT_UNSTABLE_SIG_EN    : 1; // bit 4~4
    volatile uint32_t STOP_SDCLK_BY_USER_SIG_EN     : 1; // bit 5~5
    volatile uint32_t RESV_6_6                      : 1; // bit 6~6
    volatile uint32_t RESV_7_7                      : 1; // bit 7~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union SDIOH_REG_VR9 {
    volatile uint32_t                               all;
    struct SDIOH_REG_VR9_BITS                       bit;
};

struct SDIOH_REG_DHER_BITS
{
    volatile uint32_t DMA_HSK_EN                    : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union SDIOH_REG_DHER {
    volatile uint32_t                               all;
    struct SDIOH_REG_DHER_BITS                      bit;
};

struct SDIOH_REG_HWA_BITS
{
    volatile uint32_t HW_CONFIG                     : 9; // bit 0~8
    volatile uint32_t RESV_9_31                     : 23; // bit 9~31
};

union SDIOH_REG_HWA {
    volatile uint32_t                               all;
    struct SDIOH_REG_HWA_BITS                       bit;
};

struct SDIOH_REG_IPRR_BITS
{
    volatile uint32_t REV_NUM                       : 32; // bit 0~31
};

union SDIOH_REG_IPRR {
    volatile uint32_t                               all;
    struct SDIOH_REG_IPRR_BITS                      bit;
};

struct SDIOH_REG_CMCR_BITS
{
    volatile uint32_t C2_G_EN                       : 1; // bit 0~0
    volatile uint32_t C2_E_EN                       : 1; // bit 1~1
    volatile uint32_t C2_ECBC_EN                    : 1; // bit 2~2
    volatile uint32_t C2_D_EN                       : 1; // bit 3~3
    volatile uint32_t C2_DCBC_EN                    : 1; // bit 4~4
    volatile uint32_t RNGC2_G_EN                    : 1; // bit 5~5
    volatile uint32_t AUTO_C2_ECBC_EN               : 1; // bit 6~6
    volatile uint32_t AUTO_C2_DCBC_EN               : 1; // bit 7~7
    volatile uint32_t SEC_ACCESS_EN                 : 1; // bit 8~8
    volatile uint32_t CH_ENDIAN                     : 1; // bit 9~9
    volatile uint32_t SWAP_HL                       : 1; // bit 10~10
    volatile uint32_t RESV_11_31                    : 21; // bit 11~31
};

union SDIOH_REG_CMCR {
    volatile uint32_t                               all;
    struct SDIOH_REG_CMCR_BITS                      bit;
};

struct SDIOH_REG_CMSR_BITS
{
    volatile uint32_t CP_RDY                        : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union SDIOH_REG_CMSR {
    volatile uint32_t                               all;
    struct SDIOH_REG_CMSR_BITS                      bit;
};

struct SDIOH_REG_CMSE_BITS
{
    volatile uint32_t CP_RDY_SIG_EN                 : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union SDIOH_REG_CMSE {
    volatile uint32_t                               all;
    struct SDIOH_REG_CMSE_BITS                      bit;
};

struct SDIOH_REG_LWID_BITS
{
    volatile uint32_t R_R                           : 32; // bit 0~31
};

union SDIOH_REG_LWID {
    volatile uint32_t                               all;
    struct SDIOH_REG_LWID_BITS                      bit;
};

struct SDIOH_REG_HWID_BITS
{
    volatile uint32_t L_R                           : 32; // bit 0~31
};

union SDIOH_REG_HWID {
    volatile uint32_t                               all;
    struct SDIOH_REG_HWID_BITS                      bit;
};

struct SDIOH_REG_LWIK_BITS
{
    volatile uint32_t KEY_B_R                       : 32; // bit 0~31
};

union SDIOH_REG_LWIK {
    volatile uint32_t                               all;
    struct SDIOH_REG_LWIK_BITS                      bit;
};

struct SDIOH_REG_HWIK_BITS
{
    volatile uint32_t KEY_A_R                       : 24; // bit 0~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union SDIOH_REG_HWIK {
    volatile uint32_t                               all;
    struct SDIOH_REG_HWIK_BITS                      bit;
};

struct SDIOH_REG_LWOD_BITS
{
    volatile uint32_t CP_OUT_LOW_R                  : 32; // bit 0~31
};

union SDIOH_REG_LWOD {
    volatile uint32_t                               all;
    struct SDIOH_REG_LWOD_BITS                      bit;
};

struct SDIOH_REG_HWOD_BITS
{
    volatile uint32_t CP_OUT_HI_R                   : 32; // bit 0~31
};

union SDIOH_REG_HWOD {
    volatile uint32_t                               all;
    struct SDIOH_REG_HWOD_BITS                      bit;
};

struct SDIOH_REG_SCTDP_BITS
{
    volatile uint32_t SEC_DATA_PORT                 : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union SDIOH_REG_SCTDP {
    volatile uint32_t                               all;
    struct SDIOH_REG_SCTDP_BITS                     bit;
};

typedef struct
{
    union SDIOH_REG_SDMADR                          REG_SDMADR;  // 0x000
    union SDIOH_REG_BSR_BCR                         REG_BSR_BCR; // 0x004
    union SDIOH_REG_ARG1                            REG_ARG1;    // 0x008
    union SDIOH_REG_TMR_CR                          REG_TMR_CR;  // 0x00C
    union SDIOH_REG_RESP0                           REG_RESP0;   // 0x010
    union SDIOH_REG_RESP1                           REG_RESP1;   // 0x014
    union SDIOH_REG_RESP2                           REG_RESP2;   // 0x018
    union SDIOH_REG_RESP3                           REG_RESP3;   // 0x01C
    union SDIOH_REG_BDP                             REG_BDP;     // 0x020
    union SDIOH_REG_PSR                             REG_PSR;     // 0x024
    union SDIOH_REG_HC1_PCR_BGCR                    REG_HC1_PCR_BGCR; // 0x028
    union SDIOH_REG_CCR_TCR_SRR                     REG_CCR_TCR_SRR; // 0x02C
    union SDIOH_REG_NISR_EISR                       REG_NISR_EISR; // 0x030
    union SDIOH_REG_NISER_EISER                     REG_NISER_EISER; // 0x034
    union SDIOH_REG_NISEN_EISEN                     REG_NISEN_EISEN; // 0x038
    union SDIOH_REG_AC12ES_HC2                      REG_AC12ES_HC2; // 0x03C
    union SDIOH_REG_CAP0                            REG_CAP0;    // 0x040
    union SDIOH_REG_CAP1                            REG_CAP1;    // 0x044
    union SDIOH_REG_MCC0                            REG_MCC0;    // 0x048
    union SDIOH_REG_MCC1                            REG_MCC1;    // 0x04C
    union SDIOH_REG_FACERR_FERR                     REG_FACERR_FERR; // 0x050
    union SDIOH_REG_AESR                            REG_AESR;    // 0x054
    union SDIOH_REG_ALSAR                           REG_ALSAR;   // 0x058
    union SDIOH_REG_AHSAR                           REG_AHSAR;   // 0x05C
    union SDIOH_REG_PV0                             REG_PV0;     // 0x060
    union SDIOH_REG_PV1                             REG_PV1;     // 0x064
    union SDIOH_REG_PV2                             REG_PV2;     // 0x068
    union SDIOH_REG_PV3                             REG_PV3;     // 0x06C
    volatile uint32_t                               REG_RESV_0X70_0XF8[35];
    union SDIOH_REG_HCVR                            REG_HCVR;    // 0x0FC
    union SDIOH_REG_VR0                             REG_VR0;     // 0x100
    union SDIOH_REG_VR1                             REG_VR1;     // 0x104
    union SDIOH_REG_VR2                             REG_VR2;     // 0x108
    union SDIOH_REG_VR3                             REG_VR3;     // 0x10C
    union SDIOH_REG_VR4                             REG_VR4;     // 0x110
    union SDIOH_REG_VR5                             REG_VR5;     // 0x114
    union SDIOH_REG_VR6                             REG_VR6;     // 0x118
    union SDIOH_REG_VR7                             REG_VR7;     // 0x11C
    union SDIOH_REG_VR8                             REG_VR8;     // 0x120
    union SDIOH_REG_VR9                             REG_VR9;     // 0x124
    union SDIOH_REG_DHER                            REG_DHER;    // 0x128
    volatile uint32_t                               REG_RESV_0X12C_0X174[19];
    union SDIOH_REG_HWA                             REG_HWA;     // 0x178
    union SDIOH_REG_IPRR                            REG_IPRR;    // 0x17C
    union SDIOH_REG_CMCR                            REG_CMCR;    // 0x180
    union SDIOH_REG_CMSR                            REG_CMSR;    // 0x184
    union SDIOH_REG_CMSE                            REG_CMSE;    // 0x188
    union SDIOH_REG_LWID                            REG_LWID;    // 0x18C
    union SDIOH_REG_HWID                            REG_HWID;    // 0x190
    union SDIOH_REG_LWIK                            REG_LWIK;    // 0x194
    union SDIOH_REG_HWIK                            REG_HWIK;    // 0x198
    union SDIOH_REG_LWOD                            REG_LWOD;    // 0x19C
    union SDIOH_REG_HWOD                            REG_HWOD;    // 0x1A0
    union SDIOH_REG_SCTDP                           REG_SCTDP;   // 0x1A4
} SDIOH_RegDef;


#endif // __SDIOH_REGFILE_H__

