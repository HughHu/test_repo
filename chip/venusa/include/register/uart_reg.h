//  ----------------------------------------------------------------------
//  File Name   : GenCFold/uart_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __UART_REGFILE_H__
#define __UART_REGFILE_H__

#include <stdint.h>

#define UART_CTRL_OFFSET                            0x000
#define UART_CTRL_RX_BREAK_LENGTH_Pos               28
#define UART_CTRL_RX_BREAK_LENGTH_Msk               0xf0000000
#define UART_CTRL_RX_LOCK_ERR_Pos                   25
#define UART_CTRL_RX_LOCK_ERR_Msk                   0x2000000
#define UART_CTRL_LOOP_BACK_MODE_Pos                24
#define UART_CTRL_LOOP_BACK_MODE_Msk                0x1000000
#define UART_CTRL_AUTO_FLOW_CONTROL_Pos             23
#define UART_CTRL_AUTO_FLOW_CONTROL_Msk             0x800000
#define UART_CTRL_DMA_MODE_Pos                      22
#define UART_CTRL_DMA_MODE_Msk                      0x400000
#define UART_CTRL_IRDA_ENABLE_Pos                   21
#define UART_CTRL_IRDA_ENABLE_Msk                   0x200000
#define UART_CTRL_DIVISOR_MODE_Pos                  20
#define UART_CTRL_DIVISOR_MODE_Msk                  0x100000
#define UART_CTRL_PARITY_SELECT_Pos                 4
#define UART_CTRL_PARITY_SELECT_Msk                 0x30
#define UART_CTRL_PARITY_ENABLE_Pos                 3
#define UART_CTRL_PARITY_ENABLE_Msk                 0x8
#define UART_CTRL_TX_STOP_BITS_Pos                  2
#define UART_CTRL_TX_STOP_BITS_Msk                  0x4
#define UART_CTRL_DATA_BITS_Pos                     1
#define UART_CTRL_DATA_BITS_Msk                     0x2
#define UART_CTRL_ENABLE_Pos                        0
#define UART_CTRL_ENABLE_Msk                        0x1

#define UART_STATUS_OFFSET                          0x004
#define UART_STATUS_CLK_ENABLED_Pos                 31
#define UART_STATUS_CLK_ENABLED_Msk                 0x80000000
#define UART_STATUS_DTR_Pos                         28
#define UART_STATUS_DTR_Msk                         0x10000000
#define UART_STATUS_CTS_Pos                         25
#define UART_STATUS_CTS_Msk                         0x2000000
#define UART_STATUS_DCTS_Pos                        24
#define UART_STATUS_DCTS_Msk                        0x1000000
#define UART_STATUS_RX_BREAK_INT_Pos                20
#define UART_STATUS_RX_BREAK_INT_Msk                0x100000
#define UART_STATUS_RX_FRAMING_ERR_Pos              19
#define UART_STATUS_RX_FRAMING_ERR_Msk              0x80000
#define UART_STATUS_RX_PARITY_ERR_Pos               18
#define UART_STATUS_RX_PARITY_ERR_Msk               0x40000
#define UART_STATUS_TX_OVERFLOW_ERR_Pos             17
#define UART_STATUS_TX_OVERFLOW_ERR_Msk             0x20000
#define UART_STATUS_RX_OVERFLOW_ERR_Pos             16
#define UART_STATUS_RX_OVERFLOW_ERR_Msk             0x10000
#define UART_STATUS_RX_ACTIVE_Pos                   15
#define UART_STATUS_RX_ACTIVE_Msk                   0x8000
#define UART_STATUS_TX_ACTIVE_Pos                   14
#define UART_STATUS_TX_ACTIVE_Msk                   0x4000
#define UART_STATUS_TX_FIFO_SPACE_Pos               8
#define UART_STATUS_TX_FIFO_SPACE_Msk               0x1f00
#define UART_STATUS_RX_FIFO_LEVEL_Pos               0
#define UART_STATUS_RX_FIFO_LEVEL_Msk               0x7f

#define UART_RXTX_BUFFER_OFFSET                     0x008
#define UART_RXTX_BUFFER_DATA_Pos                   0
#define UART_RXTX_BUFFER_DATA_Msk                   0xff

#define UART_IRQ_MASK_OFFSET                        0x00C
#define UART_IRQ_MASK_DTR_FALL_Pos                  9
#define UART_IRQ_MASK_DTR_FALL_Msk                  0x200
#define UART_IRQ_MASK_DTR_RISE_Pos                  8
#define UART_IRQ_MASK_DTR_RISE_Msk                  0x100
#define UART_IRQ_MASK_RX_DMA_TIMEOUT_Pos            7
#define UART_IRQ_MASK_RX_DMA_TIMEOUT_Msk            0x80
#define UART_IRQ_MASK_RX_DMA_DONE_Pos               6
#define UART_IRQ_MASK_RX_DMA_DONE_Msk               0x40
#define UART_IRQ_MASK_TX_DMA_DONE_Pos               5
#define UART_IRQ_MASK_TX_DMA_DONE_Msk               0x20
#define UART_IRQ_MASK_RX_LINE_ERR_Pos               4
#define UART_IRQ_MASK_RX_LINE_ERR_Msk               0x10
#define UART_IRQ_MASK_RX_TIMEOUT_Pos                3
#define UART_IRQ_MASK_RX_TIMEOUT_Msk                0x8
#define UART_IRQ_MASK_TX_DATA_NEEDED_Pos            2
#define UART_IRQ_MASK_TX_DATA_NEEDED_Msk            0x4
#define UART_IRQ_MASK_RX_DATA_AVAILABLE_Pos         1
#define UART_IRQ_MASK_RX_DATA_AVAILABLE_Msk         0x2
#define UART_IRQ_MASK_TX_MODEM_STATUS_Pos           0
#define UART_IRQ_MASK_TX_MODEM_STATUS_Msk           0x1

#define UART_IRQ_CAUSE_OFFSET                       0x010
#define UART_IRQ_CAUSE_DTR_FALL_U_Pos               25
#define UART_IRQ_CAUSE_DTR_FALL_U_Msk               0x2000000
#define UART_IRQ_CAUSE_DTR_RISE_U_Pos               24
#define UART_IRQ_CAUSE_DTR_RISE_U_Msk               0x1000000
#define UART_IRQ_CAUSE_RX_DMA_TIMEOUT_U_Pos         23
#define UART_IRQ_CAUSE_RX_DMA_TIMEOUT_U_Msk         0x800000
#define UART_IRQ_CAUSE_RX_DMA_DONE_U_Pos            22
#define UART_IRQ_CAUSE_RX_DMA_DONE_U_Msk            0x400000
#define UART_IRQ_CAUSE_TX_DMA_DONE_U_Pos            21
#define UART_IRQ_CAUSE_TX_DMA_DONE_U_Msk            0x200000
#define UART_IRQ_CAUSE_RX_LINE_ERR_U_Pos            20
#define UART_IRQ_CAUSE_RX_LINE_ERR_U_Msk            0x100000
#define UART_IRQ_CAUSE_RX_TIMEOUT_U_Pos             19
#define UART_IRQ_CAUSE_RX_TIMEOUT_U_Msk             0x80000
#define UART_IRQ_CAUSE_TX_DATA_NEEDED_U_Pos         18
#define UART_IRQ_CAUSE_TX_DATA_NEEDED_U_Msk         0x40000
#define UART_IRQ_CAUSE_RX_DATA_AVAILABLE_U_Pos      17
#define UART_IRQ_CAUSE_RX_DATA_AVAILABLE_U_Msk      0x20000
#define UART_IRQ_CAUSE_TX_MODEM_STATUS_U_Pos        16
#define UART_IRQ_CAUSE_TX_MODEM_STATUS_U_Msk        0x10000
#define UART_IRQ_CAUSE_DTR_FALL_Pos                 9
#define UART_IRQ_CAUSE_DTR_FALL_Msk                 0x200
#define UART_IRQ_CAUSE_DTR_RISE_Pos                 8
#define UART_IRQ_CAUSE_DTR_RISE_Msk                 0x100
#define UART_IRQ_CAUSE_RX_DMA_TIMEOUT_Pos           7
#define UART_IRQ_CAUSE_RX_DMA_TIMEOUT_Msk           0x80
#define UART_IRQ_CAUSE_RX_DMA_DONE_Pos              6
#define UART_IRQ_CAUSE_RX_DMA_DONE_Msk              0x40
#define UART_IRQ_CAUSE_TX_DMA_DONE_Pos              5
#define UART_IRQ_CAUSE_TX_DMA_DONE_Msk              0x20
#define UART_IRQ_CAUSE_RX_LINE_ERR_Pos              4
#define UART_IRQ_CAUSE_RX_LINE_ERR_Msk              0x10
#define UART_IRQ_CAUSE_RX_TIMEOUT_Pos               3
#define UART_IRQ_CAUSE_RX_TIMEOUT_Msk               0x8
#define UART_IRQ_CAUSE_TX_DATA_NEEDED_Pos           2
#define UART_IRQ_CAUSE_TX_DATA_NEEDED_Msk           0x4
#define UART_IRQ_CAUSE_RX_DATA_AVAILABLE_Pos        1
#define UART_IRQ_CAUSE_RX_DATA_AVAILABLE_Msk        0x2
#define UART_IRQ_CAUSE_TX_MODEM_STATUS_Pos          0
#define UART_IRQ_CAUSE_TX_MODEM_STATUS_Msk          0x1

#define UART_TRIGGERS_OFFSET                        0x014
#define UART_TRIGGERS_AFC_LEVEL_Pos                 16
#define UART_TRIGGERS_AFC_LEVEL_Msk                 0x3f0000
#define UART_TRIGGERS_TX_TRIGGER_Pos                8
#define UART_TRIGGERS_TX_TRIGGER_Msk                0xf00
#define UART_TRIGGERS_RX_TRIGGER_Pos                0
#define UART_TRIGGERS_RX_TRIGGER_Msk                0x3f

#define UART_CMD_SET_OFFSET                         0x018
#define UART_CMD_SET_TX_FIFO_RESET_Pos              7
#define UART_CMD_SET_TX_FIFO_RESET_Msk              0x80
#define UART_CMD_SET_RX_FIFO_RESET_Pos              6
#define UART_CMD_SET_RX_FIFO_RESET_Msk              0x40
#define UART_CMD_SET_RX_RTS_Pos                     5
#define UART_CMD_SET_RX_RTS_Msk                     0x20
#define UART_CMD_SET_TX_FINISH_N_WAIT_Pos           4
#define UART_CMD_SET_TX_FINISH_N_WAIT_Msk           0x10
#define UART_CMD_SET_TX_BREAK_CONTROL_Pos           3
#define UART_CMD_SET_TX_BREAK_CONTROL_Msk           0x8
#define UART_CMD_SET_DSR_Pos                        2
#define UART_CMD_SET_DSR_Msk                        0x4
#define UART_CMD_SET_DCD_Pos                        1
#define UART_CMD_SET_DCD_Msk                        0x2
#define UART_CMD_SET_RI_Pos                         0
#define UART_CMD_SET_RI_Msk                         0x1

#define UART_CMD_CLR_OFFSET                         0x01C
#define UART_CMD_CLR_RX_CPU_RTS_Pos                 5
#define UART_CMD_CLR_RX_CPU_RTS_Msk                 0x20
#define UART_CMD_CLR_TX_FINISH_N_WAIT_Pos           4
#define UART_CMD_CLR_TX_FINISH_N_WAIT_Msk           0x10
#define UART_CMD_CLR_TX_BREAK_CONTROL_Pos           3
#define UART_CMD_CLR_TX_BREAK_CONTROL_Msk           0x8
#define UART_CMD_CLR_DSR_Pos                        2
#define UART_CMD_CLR_DSR_Msk                        0x4
#define UART_CMD_CLR_DCR_Pos                        1
#define UART_CMD_CLR_DCR_Msk                        0x2
#define UART_CMD_CLR_RI_Pos                         0
#define UART_CMD_CLR_RI_Msk                         0x1

#define UART_AUTO_BAUD_OFFSET                       0x020
#define UART_AUTO_BAUD_VERIFY_CHAR1_Pos             16
#define UART_AUTO_BAUD_VERIFY_CHAR1_Msk             0xff0000
#define UART_AUTO_BAUD_VERIFY_CHAR0_Pos             8
#define UART_AUTO_BAUD_VERIFY_CHAR0_Msk             0xff00
#define UART_AUTO_BAUD_VERIFY_2BYTE_Pos             2
#define UART_AUTO_BAUD_VERIFY_2BYTE_Msk             0x4
#define UART_AUTO_BAUD_AUTO_TRACKING_Pos            1
#define UART_AUTO_BAUD_AUTO_TRACKING_Msk            0x2
#define UART_AUTO_BAUD_AUTO_ENABLE_Pos              0
#define UART_AUTO_BAUD_AUTO_ENABLE_Msk              0x1

struct UART_REG_CTRL_BITS
{
    volatile uint32_t ENABLE                        : 1; // bit 0~0
    volatile uint32_t DATA_BITS                     : 1; // bit 1~1
    volatile uint32_t TX_STOP_BITS                  : 1; // bit 2~2
    volatile uint32_t PARITY_ENABLE                 : 1; // bit 3~3
    volatile uint32_t PARITY_SELECT                 : 2; // bit 4~5
    volatile uint32_t RESV_6_19                     : 14; // bit 6~19
    volatile uint32_t DIVISOR_MODE                  : 1; // bit 20~20
    volatile uint32_t IRDA_ENABLE                   : 1; // bit 21~21
    volatile uint32_t DMA_MODE                      : 1; // bit 22~22
    volatile uint32_t AUTO_FLOW_CONTROL             : 1; // bit 23~23
    volatile uint32_t LOOP_BACK_MODE                : 1; // bit 24~24
    volatile uint32_t RX_LOCK_ERR                   : 1; // bit 25~25
    volatile uint32_t RESV_26_27                    : 2; // bit 26~27
    volatile uint32_t RX_BREAK_LENGTH               : 4; // bit 28~31
};

union UART_REG_CTRL {
    volatile uint32_t                               all;
    struct UART_REG_CTRL_BITS                       bit;
};

struct UART_REG_STATUS_BITS
{
    volatile uint32_t RX_FIFO_LEVEL                 : 7; // bit 0~6
    volatile uint32_t RESV_7_7                      : 1; // bit 7~7
    volatile uint32_t TX_FIFO_SPACE                 : 5; // bit 8~12
    volatile uint32_t RESV_13_13                    : 1; // bit 13~13
    volatile uint32_t TX_ACTIVE                     : 1; // bit 14~14
    volatile uint32_t RX_ACTIVE                     : 1; // bit 15~15
    volatile uint32_t RX_OVERFLOW_ERR               : 1; // bit 16~16
    volatile uint32_t TX_OVERFLOW_ERR               : 1; // bit 17~17
    volatile uint32_t RX_PARITY_ERR                 : 1; // bit 18~18
    volatile uint32_t RX_FRAMING_ERR                : 1; // bit 19~19
    volatile uint32_t RX_BREAK_INT                  : 1; // bit 20~20
    volatile uint32_t RESV_21_23                    : 3; // bit 21~23
    volatile uint32_t DCTS                          : 1; // bit 24~24
    volatile uint32_t CTS                           : 1; // bit 25~25
    volatile uint32_t RESV_26_27                    : 2; // bit 26~27
    volatile uint32_t DTR                           : 1; // bit 28~28
    volatile uint32_t RESV_29_30                    : 2; // bit 29~30
    volatile uint32_t CLK_ENABLED                   : 1; // bit 31~31
};

union UART_REG_STATUS {
    volatile uint32_t                               all;
    struct UART_REG_STATUS_BITS                     bit;
};

struct UART_REG_RXTX_BUFFER_BITS
{
    volatile uint32_t DATA                          : 8; // bit 0~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union UART_REG_RXTX_BUFFER {
    volatile uint32_t                               all;
    struct UART_REG_RXTX_BUFFER_BITS                bit;
};

struct UART_REG_IRQ_MASK_BITS
{
    volatile uint32_t TX_MODEM_STATUS               : 1; // bit 0~0
    volatile uint32_t RX_DATA_AVAILABLE             : 1; // bit 1~1
    volatile uint32_t TX_DATA_NEEDED                : 1; // bit 2~2
    volatile uint32_t RX_TIMEOUT                    : 1; // bit 3~3
    volatile uint32_t RX_LINE_ERR                   : 1; // bit 4~4
    volatile uint32_t TX_DMA_DONE                   : 1; // bit 5~5
    volatile uint32_t RX_DMA_DONE                   : 1; // bit 6~6
    volatile uint32_t RX_DMA_TIMEOUT                : 1; // bit 7~7
    volatile uint32_t DTR_RISE                      : 1; // bit 8~8
    volatile uint32_t DTR_FALL                      : 1; // bit 9~9
    volatile uint32_t RESV_10_31                    : 22; // bit 10~31
};

union UART_REG_IRQ_MASK {
    volatile uint32_t                               all;
    struct UART_REG_IRQ_MASK_BITS                   bit;
};

struct UART_REG_IRQ_CAUSE_BITS
{
    volatile uint32_t TX_MODEM_STATUS               : 1; // bit 0~0
    volatile uint32_t RX_DATA_AVAILABLE             : 1; // bit 1~1
    volatile uint32_t TX_DATA_NEEDED                : 1; // bit 2~2
    volatile uint32_t RX_TIMEOUT                    : 1; // bit 3~3
    volatile uint32_t RX_LINE_ERR                   : 1; // bit 4~4
    volatile uint32_t TX_DMA_DONE                   : 1; // bit 5~5
    volatile uint32_t RX_DMA_DONE                   : 1; // bit 6~6
    volatile uint32_t RX_DMA_TIMEOUT                : 1; // bit 7~7
    volatile uint32_t DTR_RISE                      : 1; // bit 8~8
    volatile uint32_t DTR_FALL                      : 1; // bit 9~9
    volatile uint32_t RESV_10_15                    : 6; // bit 10~15
    volatile uint32_t TX_MODEM_STATUS_U             : 1; // bit 16~16
    volatile uint32_t RX_DATA_AVAILABLE_U           : 1; // bit 17~17
    volatile uint32_t TX_DATA_NEEDED_U              : 1; // bit 18~18
    volatile uint32_t RX_TIMEOUT_U                  : 1; // bit 19~19
    volatile uint32_t RX_LINE_ERR_U                 : 1; // bit 20~20
    volatile uint32_t TX_DMA_DONE_U                 : 1; // bit 21~21
    volatile uint32_t RX_DMA_DONE_U                 : 1; // bit 22~22
    volatile uint32_t RX_DMA_TIMEOUT_U              : 1; // bit 23~23
    volatile uint32_t DTR_RISE_U                    : 1; // bit 24~24
    volatile uint32_t DTR_FALL_U                    : 1; // bit 25~25
    volatile uint32_t RESV_26_31                    : 6; // bit 26~31
};

union UART_REG_IRQ_CAUSE {
    volatile uint32_t                               all;
    struct UART_REG_IRQ_CAUSE_BITS                  bit;
};

struct UART_REG_TRIGGERS_BITS
{
    volatile uint32_t RX_TRIGGER                    : 6; // bit 0~5
    volatile uint32_t RESV_6_7                      : 2; // bit 6~7
    volatile uint32_t TX_TRIGGER                    : 4; // bit 8~11
    volatile uint32_t RESV_12_15                    : 4; // bit 12~15
    volatile uint32_t AFC_LEVEL                     : 6; // bit 16~21
    volatile uint32_t RESV_22_31                    : 10; // bit 22~31
};

union UART_REG_TRIGGERS {
    volatile uint32_t                               all;
    struct UART_REG_TRIGGERS_BITS                   bit;
};

struct UART_REG_CMD_SET_BITS
{
    volatile uint32_t RI                            : 1; // bit 0~0
    volatile uint32_t DCD                           : 1; // bit 1~1
    volatile uint32_t DSR                           : 1; // bit 2~2
    volatile uint32_t TX_BREAK_CONTROL              : 1; // bit 3~3
    volatile uint32_t TX_FINISH_N_WAIT              : 1; // bit 4~4
    volatile uint32_t RX_RTS                        : 1; // bit 5~5
    volatile uint32_t RX_FIFO_RESET                 : 1; // bit 6~6
    volatile uint32_t TX_FIFO_RESET                 : 1; // bit 7~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union UART_REG_CMD_SET {
    volatile uint32_t                               all;
    struct UART_REG_CMD_SET_BITS                    bit;
};

struct UART_REG_CMD_CLR_BITS
{
    volatile uint32_t RI                            : 1; // bit 0~0
    volatile uint32_t DCR                           : 1; // bit 1~1
    volatile uint32_t DSR                           : 1; // bit 2~2
    volatile uint32_t TX_BREAK_CONTROL              : 1; // bit 3~3
    volatile uint32_t TX_FINISH_N_WAIT              : 1; // bit 4~4
    volatile uint32_t RX_CPU_RTS                    : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union UART_REG_CMD_CLR {
    volatile uint32_t                               all;
    struct UART_REG_CMD_CLR_BITS                    bit;
};

struct UART_REG_AUTO_BAUD_BITS
{
    volatile uint32_t AUTO_ENABLE                   : 1; // bit 0~0
    volatile uint32_t AUTO_TRACKING                 : 1; // bit 1~1
    volatile uint32_t VERIFY_2BYTE                  : 1; // bit 2~2
    volatile uint32_t RESV_3_7                      : 5; // bit 3~7
    volatile uint32_t VERIFY_CHAR0                  : 8; // bit 8~15
    volatile uint32_t VERIFY_CHAR1                  : 8; // bit 16~23
    volatile uint32_t RESV_24_31                    : 8; // bit 24~31
};

union UART_REG_AUTO_BAUD {
    volatile uint32_t                               all;
    struct UART_REG_AUTO_BAUD_BITS                  bit;
};

typedef struct
{
    union UART_REG_CTRL                             REG_CTRL;    // 0x000
    union UART_REG_STATUS                           REG_STATUS;  // 0x004
    union UART_REG_RXTX_BUFFER                      REG_RXTX_BUFFER; // 0x008
    union UART_REG_IRQ_MASK                         REG_IRQ_MASK; // 0x00C
    union UART_REG_IRQ_CAUSE                        REG_IRQ_CAUSE; // 0x010
    union UART_REG_TRIGGERS                         REG_TRIGGERS; // 0x014
    union UART_REG_CMD_SET                          REG_CMD_SET; // 0x018
    union UART_REG_CMD_CLR                          REG_CMD_CLR; // 0x01C
    union UART_REG_AUTO_BAUD                        REG_AUTO_BAUD; // 0x020
} UART_RegDef;


#endif // __UART_REGFILE_H__

