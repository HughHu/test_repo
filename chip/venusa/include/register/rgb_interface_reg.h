//  ----------------------------------------------------------------------
//  File Name   : GenCFold/rgb_interface_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __RGB_INTERFACE_REGFILE_H__
#define __RGB_INTERFACE_REGFILE_H__

#include <stdint.h>

#define RGB_INTERFACE_RGB_CONTROL0_OFFSET           0x000
#define RGB_INTERFACE_RGB_CONTROL0_DATA_ALIGN_Pos    16
#define RGB_INTERFACE_RGB_CONTROL0_DATA_ALIGN_Msk    0x10000
#define RGB_INTERFACE_RGB_CONTROL0_SEL_RGB_INV_CLK_Pos    12
#define RGB_INTERFACE_RGB_CONTROL0_SEL_RGB_INV_CLK_Msk    0x1000
#define RGB_INTERFACE_RGB_CONTROL0_RGB_START_Pos    8
#define RGB_INTERFACE_RGB_CONTROL0_RGB_START_Msk    0x100
#define RGB_INTERFACE_RGB_CONTROL0_FRMS_EN_Pos      4
#define RGB_INTERFACE_RGB_CONTROL0_FRMS_EN_Msk      0x10
#define RGB_INTERFACE_RGB_CONTROL0_RGB_EN_Pos       0
#define RGB_INTERFACE_RGB_CONTROL0_RGB_EN_Msk       0x1

#define RGB_INTERFACE_RGB_CONTROL1_OFFSET           0x004
#define RGB_INTERFACE_RGB_CONTROL1_FIFO_WR_CLR_Pos    17
#define RGB_INTERFACE_RGB_CONTROL1_FIFO_WR_CLR_Msk    0x20000
#define RGB_INTERFACE_RGB_CONTROL1_FIFO_RD_CLR_Pos    16
#define RGB_INTERFACE_RGB_CONTROL1_FIFO_RD_CLR_Msk    0x10000
#define RGB_INTERFACE_RGB_CONTROL1_RGB_SERIAL_MODE_Pos    10
#define RGB_INTERFACE_RGB_CONTROL1_RGB_SERIAL_MODE_Msk    0x400
#define RGB_INTERFACE_RGB_CONTROL1_RGB_MODE_SEL_Pos    8
#define RGB_INTERFACE_RGB_CONTROL1_RGB_MODE_SEL_Msk    0x300
#define RGB_INTERFACE_RGB_CONTROL1_RGB_OUTPUT_FORMAT_SEL_Pos    6
#define RGB_INTERFACE_RGB_CONTROL1_RGB_OUTPUT_FORMAT_SEL_Msk    0xc0
#define RGB_INTERFACE_RGB_CONTROL1_RGB_INPUT_FORMAT_SEL_Pos    4
#define RGB_INTERFACE_RGB_CONTROL1_RGB_INPUT_FORMAT_SEL_Msk    0x30
#define RGB_INTERFACE_RGB_CONTROL1_RGB_SOFT_RST_Pos    0
#define RGB_INTERFACE_RGB_CONTROL1_RGB_SOFT_RST_Msk    0x1

#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_OFFSET    0x008
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_RGB_BURST_THD_Pos    29
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_RGB_BURST_THD_Msk    0xe0000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_SBGR_Pos    28
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_SBGR_Msk    0x10000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_VDPOL_Pos    27
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_VDPOL_Msk    0x8000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_HDPOL_Pos    26
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_HDPOL_Msk    0x4000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_DEPOL_Pos    25
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_DEPOL_Msk    0x2000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_DCLKPOL_Pos    24
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_DCLKPOL_Msk    0x1000000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_V_PULSE_WIDTH_Pos    20
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_V_PULSE_WIDTH_Msk    0xf00000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_H_PULSE_WIDTH_Pos    16
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_H_PULSE_WIDTH_Msk    0xf0000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_V_BLANKING_Pos    8
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_V_BLANKING_Msk    0xff00
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_H_BLANKING_Pos    0
#define RGB_INTERFACE_SEQUENTIAL_CONTROL0_H_BLANKING_Msk    0xff

#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_OFFSET    0x00C
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_DE_SEQUENTIAL_SEL_Pos    16
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_DE_SEQUENTIAL_SEL_Msk    0x10000
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_V_FRONT_BLANKING_Pos    8
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_V_FRONT_BLANKING_Msk    0xff00
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_H_FRONT_BLANKING_Pos    0
#define RGB_INTERFACE_SEQUENTIAL_CONTROL1_H_FRONT_BLANKING_Msk    0xff

#define RGB_INTERFACE_IMAGE_SIZE_OFFSET             0x010
#define RGB_INTERFACE_IMAGE_SIZE_HEIGHT_IN_Pos      16
#define RGB_INTERFACE_IMAGE_SIZE_HEIGHT_IN_Msk      0xffff0000
#define RGB_INTERFACE_IMAGE_SIZE_WIDTH_IN_Pos       0
#define RGB_INTERFACE_IMAGE_SIZE_WIDTH_IN_Msk       0xffff

#define RGB_INTERFACE_RGB_IRQ_OFFSET                0x014
#define RGB_INTERFACE_RGB_IRQ_RGB_IRQ_Pos           0
#define RGB_INTERFACE_RGB_IRQ_RGB_IRQ_Msk           0x1

#define RGB_INTERFACE_RGB_INTR_MSK_OFFSET           0x018
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_WR_FULL_MSK_Pos    5
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_WR_FULL_MSK_Msk    0x20
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_WR_EMPTY_MSK_Pos    4
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_WR_EMPTY_MSK_Msk    0x10
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_RD_FULL_MSK_Pos    3
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_RD_FULL_MSK_Msk    0x8
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_RD_EMPTY_MSK_Pos    2
#define RGB_INTERFACE_RGB_INTR_MSK_FIFO_RD_EMPTY_MSK_Msk    0x4
#define RGB_INTERFACE_RGB_INTR_MSK_SOF_FLAG_MSK_Pos    1
#define RGB_INTERFACE_RGB_INTR_MSK_SOF_FLAG_MSK_Msk    0x2
#define RGB_INTERFACE_RGB_INTR_MSK_EOF_FLAG_MSK_Pos    0
#define RGB_INTERFACE_RGB_INTR_MSK_EOF_FLAG_MSK_Msk    0x1

#define RGB_INTERFACE_RGB_INTR_CLR_OFFSET           0x01C
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_WR_FULL_CLR_Pos    5
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_WR_FULL_CLR_Msk    0x20
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_WR_EMPTY_CLR_Pos    4
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_WR_EMPTY_CLR_Msk    0x10
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_RD_FULL_CLR_Pos    3
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_RD_FULL_CLR_Msk    0x8
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_RD_EMPTY_CLR_Pos    2
#define RGB_INTERFACE_RGB_INTR_CLR_FIFO_RD_EMPTY_CLR_Msk    0x4
#define RGB_INTERFACE_RGB_INTR_CLR_SOF_FLAG_CLR_Pos    1
#define RGB_INTERFACE_RGB_INTR_CLR_SOF_FLAG_CLR_Msk    0x2
#define RGB_INTERFACE_RGB_INTR_CLR_EOF_FLAG_CLR_Pos    0
#define RGB_INTERFACE_RGB_INTR_CLR_EOF_FLAG_CLR_Msk    0x1

#define RGB_INTERFACE_RGB_INTR_STATUS_OFFSET        0x020
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_WR_FULL_ISR_Pos    5
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_WR_FULL_ISR_Msk    0x20
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_WR_EMPTY_ISR_Pos    4
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_WR_EMPTY_ISR_Msk    0x10
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_RD_FULL_ISR_Pos    3
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_RD_FULL_ISR_Msk    0x8
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_RD_EMPTY_ISR_Pos    2
#define RGB_INTERFACE_RGB_INTR_STATUS_FIFO_RD_EMPTY_ISR_Msk    0x4
#define RGB_INTERFACE_RGB_INTR_STATUS_SOF_FLAG_ISR_Pos    1
#define RGB_INTERFACE_RGB_INTR_STATUS_SOF_FLAG_ISR_Msk    0x2
#define RGB_INTERFACE_RGB_INTR_STATUS_EOF_FLAG_ISR_Pos    0
#define RGB_INTERFACE_RGB_INTR_STATUS_EOF_FLAG_ISR_Msk    0x1

#define RGB_INTERFACE_RGB_INTR_RAW_OFFSET           0x024
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_WR_FULL_IRSR_Pos    5
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_WR_FULL_IRSR_Msk    0x20
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_WR_EMPTY_IRSR_Pos    4
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_WR_EMPTY_IRSR_Msk    0x10
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_RD_FULL_IRSR_Pos    3
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_RD_FULL_IRSR_Msk    0x8
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_RD_EMPTY_IRSR_Pos    2
#define RGB_INTERFACE_RGB_INTR_RAW_FIFO_RD_EMPTY_IRSR_Msk    0x4
#define RGB_INTERFACE_RGB_INTR_RAW_SOF_FLAG_IRSR_Pos    1
#define RGB_INTERFACE_RGB_INTR_RAW_SOF_FLAG_IRSR_Msk    0x2
#define RGB_INTERFACE_RGB_INTR_RAW_EOF_FLAG_IRSR_Pos    0
#define RGB_INTERFACE_RGB_INTR_RAW_EOF_FLAG_IRSR_Msk    0x1

struct RGB_INTERFACE_REG_RGB_CONTROL0_BITS
{
    volatile uint32_t RGB_EN                        : 1; // bit 0~0
    volatile uint32_t RESV_1_3                      : 3; // bit 1~3
    volatile uint32_t FRMS_EN                       : 1; // bit 4~4
    volatile uint32_t RESV_5_7                      : 3; // bit 5~7
    volatile uint32_t RGB_START                     : 1; // bit 8~8
    volatile uint32_t RESV_9_11                     : 3; // bit 9~11
    volatile uint32_t SEL_RGB_INV_CLK               : 1; // bit 12~12
    volatile uint32_t RESV_13_15                    : 3; // bit 13~15
    volatile uint32_t DATA_ALIGN                    : 1; // bit 16~16
    volatile uint32_t RESV_17_31                    : 15; // bit 17~31
};

union RGB_INTERFACE_REG_RGB_CONTROL0 {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_CONTROL0_BITS      bit;
};

struct RGB_INTERFACE_REG_RGB_CONTROL1_BITS
{
    volatile uint32_t RGB_SOFT_RST                  : 1; // bit 0~0
    volatile uint32_t RESV_1_3                      : 3; // bit 1~3
    volatile uint32_t RGB_INPUT_FORMAT_SEL          : 2; // bit 4~5
    volatile uint32_t RGB_OUTPUT_FORMAT_SEL         : 2; // bit 6~7
    volatile uint32_t RGB_MODE_SEL                  : 2; // bit 8~9
    volatile uint32_t RGB_SERIAL_MODE               : 1; // bit 10~10
    volatile uint32_t RESV_11_15                    : 5; // bit 11~15
    volatile uint32_t FIFO_RD_CLR                   : 1; // bit 16~16
    volatile uint32_t FIFO_WR_CLR                   : 1; // bit 17~17
    volatile uint32_t RESV_18_31                    : 14; // bit 18~31
};

union RGB_INTERFACE_REG_RGB_CONTROL1 {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_CONTROL1_BITS      bit;
};

struct RGB_INTERFACE_REG_SEQUENTIAL_CONTROL0_BITS
{
    volatile uint32_t H_BLANKING                    : 8; // bit 0~7
    volatile uint32_t V_BLANKING                    : 8; // bit 8~15
    volatile uint32_t H_PULSE_WIDTH                 : 4; // bit 16~19
    volatile uint32_t V_PULSE_WIDTH                 : 4; // bit 20~23
    volatile uint32_t DCLKPOL                       : 1; // bit 24~24
    volatile uint32_t DEPOL                         : 1; // bit 25~25
    volatile uint32_t HDPOL                         : 1; // bit 26~26
    volatile uint32_t VDPOL                         : 1; // bit 27~27
    volatile uint32_t SBGR                          : 1; // bit 28~28
    volatile uint32_t RGB_BURST_THD                 : 3; // bit 29~31
};

union RGB_INTERFACE_REG_SEQUENTIAL_CONTROL0 {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_SEQUENTIAL_CONTROL0_BITS    bit;
};

struct RGB_INTERFACE_REG_SEQUENTIAL_CONTROL1_BITS
{
    volatile uint32_t H_FRONT_BLANKING              : 8; // bit 0~7
    volatile uint32_t V_FRONT_BLANKING              : 8; // bit 8~15
    volatile uint32_t DE_SEQUENTIAL_SEL             : 1; // bit 16~16
    volatile uint32_t RESV_17_31                    : 15; // bit 17~31
};

union RGB_INTERFACE_REG_SEQUENTIAL_CONTROL1 {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_SEQUENTIAL_CONTROL1_BITS    bit;
};

struct RGB_INTERFACE_REG_IMAGE_SIZE_BITS
{
    volatile uint32_t WIDTH_IN                      : 16; // bit 0~15
    volatile uint32_t HEIGHT_IN                     : 16; // bit 16~31
};

union RGB_INTERFACE_REG_IMAGE_SIZE {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_IMAGE_SIZE_BITS        bit;
};

struct RGB_INTERFACE_REG_RGB_IRQ_BITS
{
    volatile uint32_t RGB_IRQ                       : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union RGB_INTERFACE_REG_RGB_IRQ {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_IRQ_BITS           bit;
};

struct RGB_INTERFACE_REG_RGB_INTR_MSK_BITS
{
    volatile uint32_t EOF_FLAG_MSK                  : 1; // bit 0~0
    volatile uint32_t SOF_FLAG_MSK                  : 1; // bit 1~1
    volatile uint32_t FIFO_RD_EMPTY_MSK             : 1; // bit 2~2
    volatile uint32_t FIFO_RD_FULL_MSK              : 1; // bit 3~3
    volatile uint32_t FIFO_WR_EMPTY_MSK             : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_MSK              : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union RGB_INTERFACE_REG_RGB_INTR_MSK {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_INTR_MSK_BITS      bit;
};

struct RGB_INTERFACE_REG_RGB_INTR_CLR_BITS
{
    volatile uint32_t EOF_FLAG_CLR                  : 1; // bit 0~0
    volatile uint32_t SOF_FLAG_CLR                  : 1; // bit 1~1
    volatile uint32_t FIFO_RD_EMPTY_CLR             : 1; // bit 2~2
    volatile uint32_t FIFO_RD_FULL_CLR              : 1; // bit 3~3
    volatile uint32_t FIFO_WR_EMPTY_CLR             : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_CLR              : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union RGB_INTERFACE_REG_RGB_INTR_CLR {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_INTR_CLR_BITS      bit;
};

struct RGB_INTERFACE_REG_RGB_INTR_STATUS_BITS
{
    volatile uint32_t EOF_FLAG_ISR                  : 1; // bit 0~0
    volatile uint32_t SOF_FLAG_ISR                  : 1; // bit 1~1
    volatile uint32_t FIFO_RD_EMPTY_ISR             : 1; // bit 2~2
    volatile uint32_t FIFO_RD_FULL_ISR              : 1; // bit 3~3
    volatile uint32_t FIFO_WR_EMPTY_ISR             : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_ISR              : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union RGB_INTERFACE_REG_RGB_INTR_STATUS {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_INTR_STATUS_BITS    bit;
};

struct RGB_INTERFACE_REG_RGB_INTR_RAW_BITS
{
    volatile uint32_t EOF_FLAG_IRSR                 : 1; // bit 0~0
    volatile uint32_t SOF_FLAG_IRSR                 : 1; // bit 1~1
    volatile uint32_t FIFO_RD_EMPTY_IRSR            : 1; // bit 2~2
    volatile uint32_t FIFO_RD_FULL_IRSR             : 1; // bit 3~3
    volatile uint32_t FIFO_WR_EMPTY_IRSR            : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_IRSR             : 1; // bit 5~5
    volatile uint32_t RESV_6_31                     : 26; // bit 6~31
};

union RGB_INTERFACE_REG_RGB_INTR_RAW {
    volatile uint32_t                               all;
    struct RGB_INTERFACE_REG_RGB_INTR_RAW_BITS      bit;
};

typedef struct
{
    union RGB_INTERFACE_REG_RGB_CONTROL0            REG_RGB_CONTROL0; // 0x000
    union RGB_INTERFACE_REG_RGB_CONTROL1            REG_RGB_CONTROL1; // 0x004
    union RGB_INTERFACE_REG_SEQUENTIAL_CONTROL0     REG_SEQUENTIAL_CONTROL0; // 0x008
    union RGB_INTERFACE_REG_SEQUENTIAL_CONTROL1     REG_SEQUENTIAL_CONTROL1; // 0x00C
    union RGB_INTERFACE_REG_IMAGE_SIZE              REG_IMAGE_SIZE; // 0x010
    union RGB_INTERFACE_REG_RGB_IRQ                 REG_RGB_IRQ; // 0x014
    union RGB_INTERFACE_REG_RGB_INTR_MSK            REG_RGB_INTR_MSK; // 0x018
    union RGB_INTERFACE_REG_RGB_INTR_CLR            REG_RGB_INTR_CLR; // 0x01C
    union RGB_INTERFACE_REG_RGB_INTR_STATUS         REG_RGB_INTR_STATUS; // 0x020
    union RGB_INTERFACE_REG_RGB_INTR_RAW            REG_RGB_INTR_RAW; // 0x024
} RGB_INTERFACE_RegDef;


#endif // __RGB_INTERFACE_REGFILE_H__

