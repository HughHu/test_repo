//  ----------------------------------------------------------------------
//  File Name   : GenCFold/image_vic_reg_venusa.h
//  Description : C header file generated by Python script.
//  Author      : dlchang
//  Script Ver  : LS.AUTO_REG.2024.12.12
//  SVN Revision: Can't find <<VenusA_SoC_Memory_Mapping.xlsx>> SVN detail info,pls chk£¡£¡
//  Create Time : 2025-04-18 09:52:08
//  Comments    : 
//  ----------------------------------------------------------------------

#ifndef __IMAGE_VIC_REGFILE_H__
#define __IMAGE_VIC_REGFILE_H__

#include <stdint.h>

#define IMAGE_VIC_F_HOR_OFFSET                      0x000
#define IMAGE_VIC_F_HOR_F_HOR_Pos                   0
#define IMAGE_VIC_F_HOR_F_HOR_Msk                   0x1fff

#define IMAGE_VIC_F_VER_OFFSET                      0x004
#define IMAGE_VIC_F_VER_F_VER_Pos                   0
#define IMAGE_VIC_F_VER_F_VER_Msk                   0x1fff

#define IMAGE_VIC_P_OFFSET_OFFSET                   0x008
#define IMAGE_VIC_P_OFFSET_P_OFFSET_Pos             0
#define IMAGE_VIC_P_OFFSET_P_OFFSET_Msk             0x1fff

#define IMAGE_VIC_L_OFFSET_OFFSET                   0x00C
#define IMAGE_VIC_L_OFFSET_L_OFFSET_Pos             0
#define IMAGE_VIC_L_OFFSET_L_OFFSET_Msk             0x1fff

#define IMAGE_VIC_IMAGE_VIC_CTRL_OFFSET             0x010
#define IMAGE_VIC_IMAGE_VIC_CTRL_FIFO_RD_CLR_Pos    6
#define IMAGE_VIC_IMAGE_VIC_CTRL_FIFO_RD_CLR_Msk    0x40
#define IMAGE_VIC_IMAGE_VIC_CTRL_FIFO_WR_CLR_Pos    5
#define IMAGE_VIC_IMAGE_VIC_CTRL_FIFO_WR_CLR_Msk    0x20
#define IMAGE_VIC_IMAGE_VIC_CTRL_RG_GB_REVERSE_Pos    4
#define IMAGE_VIC_IMAGE_VIC_CTRL_RG_GB_REVERSE_Msk    0x10
#define IMAGE_VIC_IMAGE_VIC_CTRL_VSEL_V_SYNC_Pos    3
#define IMAGE_VIC_IMAGE_VIC_CTRL_VSEL_V_SYNC_Msk    0x8
#define IMAGE_VIC_IMAGE_VIC_CTRL_VSEL_H_SYNC_Pos    2
#define IMAGE_VIC_IMAGE_VIC_CTRL_VSEL_H_SYNC_Msk    0x4
#define IMAGE_VIC_IMAGE_VIC_CTRL_DATA_BUS_ALIGN_Pos    1
#define IMAGE_VIC_IMAGE_VIC_CTRL_DATA_BUS_ALIGN_Msk    0x2
#define IMAGE_VIC_IMAGE_VIC_CTRL_SAMPLE_EDGE_SEL_Pos    0
#define IMAGE_VIC_IMAGE_VIC_CTRL_SAMPLE_EDGE_SEL_Msk    0x1

#define IMAGE_VIC_SOFT_CLR_OFFSET                   0x014
#define IMAGE_VIC_SOFT_CLR_DVP_SOFT_CLR_Pos         0
#define IMAGE_VIC_SOFT_CLR_DVP_SOFT_CLR_Msk         0x1

#define IMAGE_VIC_INPUT_FORM_OFFSET                 0x018
#define IMAGE_VIC_INPUT_FORM_MODESEL_Pos            2
#define IMAGE_VIC_INPUT_FORM_MODESEL_Msk            0x1c
#define IMAGE_VIC_INPUT_FORM_INPUT_FORM_Pos         0
#define IMAGE_VIC_INPUT_FORM_INPUT_FORM_Msk         0x3

#define IMAGE_VIC_VIC_EN_OFFSET                     0x01C
#define IMAGE_VIC_VIC_EN_VIC_EN_Pos                 0
#define IMAGE_VIC_VIC_EN_VIC_EN_Msk                 0x1

#define IMAGE_VIC_DMA_BURST_THD_OFFSET              0x020
#define IMAGE_VIC_DMA_BURST_THD_DMA_REQ_ENABLE_Pos    7
#define IMAGE_VIC_DMA_BURST_THD_DMA_REQ_ENABLE_Msk    0x80
#define IMAGE_VIC_DMA_BURST_THD_DMA_SINGLE_ENABLE_Pos    6
#define IMAGE_VIC_DMA_BURST_THD_DMA_SINGLE_ENABLE_Msk    0x40
#define IMAGE_VIC_DMA_BURST_THD_DMA_BURST_THD_Pos    0
#define IMAGE_VIC_DMA_BURST_THD_DMA_BURST_THD_Msk    0x3f

#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_OFFSET        0x024
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_PIXEL_ABNOR_MASK_Pos    11
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_PIXEL_ABNOR_MASK_Msk    0x800
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_H_SYNC_ABNOR_MASK_Pos    10
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_H_SYNC_ABNOR_MASK_Msk    0x400
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FRAME_FINISH_MASK_Pos    9
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FRAME_FINISH_MASK_Msk    0x200
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_EOF_CNT_ABNOR_MASK_Pos    8
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_EOF_CNT_ABNOR_MASK_Msk    0x100
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_SOF_MASK_Pos    7
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_SOF_MASK_Msk    0x80
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_EOF_MASK_Pos    6
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_EOF_MASK_Msk    0x40
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_WR_FULL_MASK_Pos    5
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_WR_FULL_MASK_Msk    0x20
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_RD_EMPTY_MASK_Pos    4
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_RD_EMPTY_MASK_Msk    0x10
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_OVFLOW_MASK_Pos    3
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_OVFLOW_MASK_Msk    0x8
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_UNFLOW_MASK_Pos    2
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_FIFO_UNFLOW_MASK_Msk    0x4
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_DMA_VIC_REQ_MASK_Pos    1
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_DMA_VIC_REQ_MASK_Msk    0x2
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_DMA_VIC_SINGLE_MASK_Pos    0
#define IMAGE_VIC_IMAGE_VIC_INTR_MASK_DMA_VIC_SINGLE_MASK_Msk    0x1

#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_OFFSET         0x028
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_PIXEL_ABNOR_CLR_Pos    11
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_PIXEL_ABNOR_CLR_Msk    0x800
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_H_SYNC_ABNOR_CLR_Pos    10
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_H_SYNC_ABNOR_CLR_Msk    0x400
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FRAME_FINISH_CLR_Pos    9
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FRAME_FINISH_CLR_Msk    0x200
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_EOF_CNT_ABNOR_CLR_Pos    8
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_EOF_CNT_ABNOR_CLR_Msk    0x100
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_SOF_CLR_Pos    7
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_SOF_CLR_Msk    0x80
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_EOF_CLR_Pos    6
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_EOF_CLR_Msk    0x40
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_WR_FULL_CLR_Pos    5
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_WR_FULL_CLR_Msk    0x20
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_RD_EMPTY_CLR_Pos    4
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_RD_EMPTY_CLR_Msk    0x10
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_OVFLOW_CLR_Pos    3
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_OVFLOW_CLR_Msk    0x8
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_UNFLOW_CLR_Pos    2
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_FIFO_UNFLOW_CLR_Msk    0x4
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_DMA_VIC_REQ_CLR_Pos    1
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_DMA_VIC_REQ_CLR_Msk    0x2
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_DMA_VIC_SINGLE_CLR_Pos    0
#define IMAGE_VIC_IMAGE_VIC_INTR_CLR_DMA_VIC_SINGLE_CLR_Msk    0x1

#define IMAGE_VIC_IMAGE_VIC_IRQ_OFFSET              0x02C
#define IMAGE_VIC_IMAGE_VIC_IRQ_IRQ_Pos             0
#define IMAGE_VIC_IMAGE_VIC_IRQ_IRQ_Msk             0x1

#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_OFFSET       0x030
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_PIXEL_ABNOR_ISR_Pos    11
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_PIXEL_ABNOR_ISR_Msk    0x800
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_H_SYNC_ABNOR_ISR_Pos    10
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_H_SYNC_ABNOR_ISR_Msk    0x400
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FRAME_FINISH_ISR_Pos    9
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FRAME_FINISH_ISR_Msk    0x200
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_EOF_CNT_ABNOR_ISR_Pos    8
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_EOF_CNT_ABNOR_ISR_Msk    0x100
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_SOF_ISR_Pos    7
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_SOF_ISR_Msk    0x80
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_EOF_ISR_Pos    6
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_EOF_ISR_Msk    0x40
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_WR_FULL_ISR_Pos    5
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_WR_FULL_ISR_Msk    0x20
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_RD_EMPTY_ISR_Pos    4
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_RD_EMPTY_ISR_Msk    0x10
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_OVFLOW_ISR_Pos    3
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_OVFLOW_ISR_Msk    0x8
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_UNFLOW_ISR_Pos    2
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_FIFO_UNFLOW_ISR_Msk    0x4
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_DMA_VIC_REQ_ISR_Pos    1
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_DMA_VIC_REQ_ISR_Msk    0x2
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_DMA_VIC_SINGLE_ISR_Pos    0
#define IMAGE_VIC_IMAGE_VIC_INT_STATUS_DMA_VIC_SINGLE_ISR_Msk    0x1

#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_OFFSET    0x034
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_PIXEL_ABNOR_IRSR_Pos    11
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_PIXEL_ABNOR_IRSR_Msk    0x800
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_H_SYNC_ABNOR_IRSR_Pos    10
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_H_SYNC_ABNOR_IRSR_Msk    0x400
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FRAME_FINISH_IRSR_Pos    9
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FRAME_FINISH_IRSR_Msk    0x200
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_EOF_CNT_ABNOR_IRSR_Pos    8
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_EOF_CNT_ABNOR_IRSR_Msk    0x100
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_SOF_IRSR_Pos    7
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_SOF_IRSR_Msk    0x80
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_EOF_IRSR_Pos    6
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_EOF_IRSR_Msk    0x40
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_WR_FULL_IRSR_Pos    5
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_WR_FULL_IRSR_Msk    0x20
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_RD_EMPTY_IRSR_Pos    4
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_RD_EMPTY_IRSR_Msk    0x10
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_OVFLOW_IRSR_Pos    3
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_OVFLOW_IRSR_Msk    0x8
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_UNFLOW_IRSR_Pos    2
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_FIFO_UNFLOW_IRSR_Msk    0x4
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_DMA_VIC_REQ_IRSR_Pos    1
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_DMA_VIC_REQ_IRSR_Msk    0x2
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_DMA_VIC_SINGLE_IRSR_Pos    0
#define IMAGE_VIC_IMAGE_VIC_INT_RAW_STATUS_DMA_VIC_SINGLE_IRSR_Msk    0x1

#define IMAGE_VIC_IMAGE_VIC_DEBUG_OFFSET            0x038
#define IMAGE_VIC_IMAGE_VIC_DEBUG_PIXEL_CNT_Pos     13
#define IMAGE_VIC_IMAGE_VIC_DEBUG_PIXEL_CNT_Msk     0x3ffe000
#define IMAGE_VIC_IMAGE_VIC_DEBUG_LINE_CNT_Pos      0
#define IMAGE_VIC_IMAGE_VIC_DEBUG_LINE_CNT_Msk      0x1fff

#define IMAGE_VIC_ST_DEBUG_OFFSET                   0x03C
#define IMAGE_VIC_ST_DEBUG_SAMPLER_ST_Pos           1
#define IMAGE_VIC_ST_DEBUG_SAMPLER_ST_Msk           0x1fe
#define IMAGE_VIC_ST_DEBUG_SAMPLER_LINE_CNT_Pos     0
#define IMAGE_VIC_ST_DEBUG_SAMPLER_LINE_CNT_Msk     0x1

#define IMAGE_VIC_SERSOR_DEBUG_OFFSET               0x040
#define IMAGE_VIC_SERSOR_DEBUG_PIXEL_CLK_NUMBER_Pos    13
#define IMAGE_VIC_SERSOR_DEBUG_PIXEL_CLK_NUMBER_Msk    0x3ffe000
#define IMAGE_VIC_SERSOR_DEBUG_H_SYNC_NUMBER_Pos    0
#define IMAGE_VIC_SERSOR_DEBUG_H_SYNC_NUMBER_Msk    0x1fff

struct IMAGE_VIC_REG_F_HOR_BITS
{
    volatile uint32_t F_HOR                         : 13; // bit 0~12
    volatile uint32_t RESV_13_31                    : 19; // bit 13~31
};

union IMAGE_VIC_REG_F_HOR {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_F_HOR_BITS                 bit;
};

struct IMAGE_VIC_REG_F_VER_BITS
{
    volatile uint32_t F_VER                         : 13; // bit 0~12
    volatile uint32_t RESV_13_31                    : 19; // bit 13~31
};

union IMAGE_VIC_REG_F_VER {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_F_VER_BITS                 bit;
};

struct IMAGE_VIC_REG_P_OFFSET_BITS
{
    volatile uint32_t P_OFFSET                      : 13; // bit 0~12
    volatile uint32_t RESV_13_31                    : 19; // bit 13~31
};

union IMAGE_VIC_REG_P_OFFSET {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_P_OFFSET_BITS              bit;
};

struct IMAGE_VIC_REG_L_OFFSET_BITS
{
    volatile uint32_t L_OFFSET                      : 13; // bit 0~12
    volatile uint32_t RESV_13_31                    : 19; // bit 13~31
};

union IMAGE_VIC_REG_L_OFFSET {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_L_OFFSET_BITS              bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_CTRL_BITS
{
    volatile uint32_t SAMPLE_EDGE_SEL               : 1; // bit 0~0
    volatile uint32_t DATA_BUS_ALIGN                : 1; // bit 1~1
    volatile uint32_t VSEL_H_SYNC                   : 1; // bit 2~2
    volatile uint32_t VSEL_V_SYNC                   : 1; // bit 3~3
    volatile uint32_t RG_GB_REVERSE                 : 1; // bit 4~4
    volatile uint32_t FIFO_WR_CLR                   : 1; // bit 5~5
    volatile uint32_t FIFO_RD_CLR                   : 1; // bit 6~6
    volatile uint32_t RESV_7_31                     : 25; // bit 7~31
};

union IMAGE_VIC_REG_IMAGE_VIC_CTRL {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_CTRL_BITS        bit;
};

struct IMAGE_VIC_REG_SOFT_CLR_BITS
{
    volatile uint32_t DVP_SOFT_CLR                  : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union IMAGE_VIC_REG_SOFT_CLR {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_SOFT_CLR_BITS              bit;
};

struct IMAGE_VIC_REG_INPUT_FORM_BITS
{
    volatile uint32_t INPUT_FORM                    : 2; // bit 0~1
    volatile uint32_t MODESEL                       : 3; // bit 2~4
    volatile uint32_t RESV_5_31                     : 27; // bit 5~31
};

union IMAGE_VIC_REG_INPUT_FORM {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_INPUT_FORM_BITS            bit;
};

struct IMAGE_VIC_REG_VIC_EN_BITS
{
    volatile uint32_t VIC_EN                        : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union IMAGE_VIC_REG_VIC_EN {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_VIC_EN_BITS                bit;
};

struct IMAGE_VIC_REG_DMA_BURST_THD_BITS
{
    volatile uint32_t DMA_BURST_THD                 : 6; // bit 0~5
    volatile uint32_t DMA_SINGLE_ENABLE             : 1; // bit 6~6
    volatile uint32_t DMA_REQ_ENABLE                : 1; // bit 7~7
    volatile uint32_t RESV_8_31                     : 24; // bit 8~31
};

union IMAGE_VIC_REG_DMA_BURST_THD {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_DMA_BURST_THD_BITS         bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_INTR_MASK_BITS
{
    volatile uint32_t DMA_VIC_SINGLE_MASK           : 1; // bit 0~0
    volatile uint32_t DMA_VIC_REQ_MASK              : 1; // bit 1~1
    volatile uint32_t FIFO_UNFLOW_MASK              : 1; // bit 2~2
    volatile uint32_t FIFO_OVFLOW_MASK              : 1; // bit 3~3
    volatile uint32_t FIFO_RD_EMPTY_MASK            : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_MASK             : 1; // bit 5~5
    volatile uint32_t EOF_MASK                      : 1; // bit 6~6
    volatile uint32_t SOF_MASK                      : 1; // bit 7~7
    volatile uint32_t EOF_CNT_ABNOR_MASK            : 1; // bit 8~8
    volatile uint32_t FRAME_FINISH_MASK             : 1; // bit 9~9
    volatile uint32_t H_SYNC_ABNOR_MASK             : 1; // bit 10~10
    volatile uint32_t PIXEL_ABNOR_MASK              : 1; // bit 11~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union IMAGE_VIC_REG_IMAGE_VIC_INTR_MASK {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_INTR_MASK_BITS    bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_INTR_CLR_BITS
{
    volatile uint32_t DMA_VIC_SINGLE_CLR            : 1; // bit 0~0
    volatile uint32_t DMA_VIC_REQ_CLR               : 1; // bit 1~1
    volatile uint32_t FIFO_UNFLOW_CLR               : 1; // bit 2~2
    volatile uint32_t FIFO_OVFLOW_CLR               : 1; // bit 3~3
    volatile uint32_t FIFO_RD_EMPTY_CLR             : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_CLR              : 1; // bit 5~5
    volatile uint32_t EOF_CLR                       : 1; // bit 6~6
    volatile uint32_t SOF_CLR                       : 1; // bit 7~7
    volatile uint32_t EOF_CNT_ABNOR_CLR             : 1; // bit 8~8
    volatile uint32_t FRAME_FINISH_CLR              : 1; // bit 9~9
    volatile uint32_t H_SYNC_ABNOR_CLR              : 1; // bit 10~10
    volatile uint32_t PIXEL_ABNOR_CLR               : 1; // bit 11~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union IMAGE_VIC_REG_IMAGE_VIC_INTR_CLR {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_INTR_CLR_BITS    bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_IRQ_BITS
{
    volatile uint32_t IRQ                           : 1; // bit 0~0
    volatile uint32_t RESV_1_31                     : 31; // bit 1~31
};

union IMAGE_VIC_REG_IMAGE_VIC_IRQ {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_IRQ_BITS         bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_INT_STATUS_BITS
{
    volatile uint32_t DMA_VIC_SINGLE_ISR            : 1; // bit 0~0
    volatile uint32_t DMA_VIC_REQ_ISR               : 1; // bit 1~1
    volatile uint32_t FIFO_UNFLOW_ISR               : 1; // bit 2~2
    volatile uint32_t FIFO_OVFLOW_ISR               : 1; // bit 3~3
    volatile uint32_t FIFO_RD_EMPTY_ISR             : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_ISR              : 1; // bit 5~5
    volatile uint32_t EOF_ISR                       : 1; // bit 6~6
    volatile uint32_t SOF_ISR                       : 1; // bit 7~7
    volatile uint32_t EOF_CNT_ABNOR_ISR             : 1; // bit 8~8
    volatile uint32_t FRAME_FINISH_ISR              : 1; // bit 9~9
    volatile uint32_t H_SYNC_ABNOR_ISR              : 1; // bit 10~10
    volatile uint32_t PIXEL_ABNOR_ISR               : 1; // bit 11~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union IMAGE_VIC_REG_IMAGE_VIC_INT_STATUS {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_INT_STATUS_BITS    bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_INT_RAW_STATUS_BITS
{
    volatile uint32_t DMA_VIC_SINGLE_IRSR           : 1; // bit 0~0
    volatile uint32_t DMA_VIC_REQ_IRSR              : 1; // bit 1~1
    volatile uint32_t FIFO_UNFLOW_IRSR              : 1; // bit 2~2
    volatile uint32_t FIFO_OVFLOW_IRSR              : 1; // bit 3~3
    volatile uint32_t FIFO_RD_EMPTY_IRSR            : 1; // bit 4~4
    volatile uint32_t FIFO_WR_FULL_IRSR             : 1; // bit 5~5
    volatile uint32_t EOF_IRSR                      : 1; // bit 6~6
    volatile uint32_t SOF_IRSR                      : 1; // bit 7~7
    volatile uint32_t EOF_CNT_ABNOR_IRSR            : 1; // bit 8~8
    volatile uint32_t FRAME_FINISH_IRSR             : 1; // bit 9~9
    volatile uint32_t H_SYNC_ABNOR_IRSR             : 1; // bit 10~10
    volatile uint32_t PIXEL_ABNOR_IRSR              : 1; // bit 11~11
    volatile uint32_t RESV_12_31                    : 20; // bit 12~31
};

union IMAGE_VIC_REG_IMAGE_VIC_INT_RAW_STATUS {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_INT_RAW_STATUS_BITS    bit;
};

struct IMAGE_VIC_REG_IMAGE_VIC_DEBUG_BITS
{
    volatile uint32_t LINE_CNT                      : 13; // bit 0~12
    volatile uint32_t PIXEL_CNT                     : 13; // bit 13~25
    volatile uint32_t RESV_26_31                    : 6; // bit 26~31
};

union IMAGE_VIC_REG_IMAGE_VIC_DEBUG {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_IMAGE_VIC_DEBUG_BITS       bit;
};

struct IMAGE_VIC_REG_ST_DEBUG_BITS
{
    volatile uint32_t SAMPLER_LINE_CNT              : 1; // bit 0~0
    volatile uint32_t SAMPLER_ST                    : 8; // bit 1~8
    volatile uint32_t RESV_9_31                     : 23; // bit 9~31
};

union IMAGE_VIC_REG_ST_DEBUG {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_ST_DEBUG_BITS              bit;
};

struct IMAGE_VIC_REG_SERSOR_DEBUG_BITS
{
    volatile uint32_t H_SYNC_NUMBER                 : 13; // bit 0~12
    volatile uint32_t PIXEL_CLK_NUMBER              : 13; // bit 13~25
    volatile uint32_t RESV_26_31                    : 6; // bit 26~31
};

union IMAGE_VIC_REG_SERSOR_DEBUG {
    volatile uint32_t                               all;
    struct IMAGE_VIC_REG_SERSOR_DEBUG_BITS          bit;
};

typedef struct
{
    union IMAGE_VIC_REG_F_HOR                       REG_F_HOR;   // 0x000
    union IMAGE_VIC_REG_F_VER                       REG_F_VER;   // 0x004
    union IMAGE_VIC_REG_P_OFFSET                    REG_P_OFFSET; // 0x008
    union IMAGE_VIC_REG_L_OFFSET                    REG_L_OFFSET; // 0x00C
    union IMAGE_VIC_REG_IMAGE_VIC_CTRL              REG_IMAGE_VIC_CTRL; // 0x010
    union IMAGE_VIC_REG_SOFT_CLR                    REG_SOFT_CLR; // 0x014
    union IMAGE_VIC_REG_INPUT_FORM                  REG_INPUT_FORM; // 0x018
    union IMAGE_VIC_REG_VIC_EN                      REG_VIC_EN;  // 0x01C
    union IMAGE_VIC_REG_DMA_BURST_THD               REG_DMA_BURST_THD; // 0x020
    union IMAGE_VIC_REG_IMAGE_VIC_INTR_MASK         REG_IMAGE_VIC_INTR_MASK; // 0x024
    union IMAGE_VIC_REG_IMAGE_VIC_INTR_CLR          REG_IMAGE_VIC_INTR_CLR; // 0x028
    union IMAGE_VIC_REG_IMAGE_VIC_IRQ               REG_IMAGE_VIC_IRQ; // 0x02C
    union IMAGE_VIC_REG_IMAGE_VIC_INT_STATUS        REG_IMAGE_VIC_INT_STATUS; // 0x030
    union IMAGE_VIC_REG_IMAGE_VIC_INT_RAW_STATUS    REG_IMAGE_VIC_INT_RAW_STATUS; // 0x034
    union IMAGE_VIC_REG_IMAGE_VIC_DEBUG             REG_IMAGE_VIC_DEBUG; // 0x038
    union IMAGE_VIC_REG_ST_DEBUG                    REG_ST_DEBUG; // 0x03C
    union IMAGE_VIC_REG_SERSOR_DEBUG                REG_SERSOR_DEBUG; // 0x040
} IMAGE_VIC_RegDef;


#endif // __IMAGE_VIC_REGFILE_H__

